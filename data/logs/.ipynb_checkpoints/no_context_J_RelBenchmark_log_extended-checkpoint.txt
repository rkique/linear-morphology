2024-06-13 17:11:59 root INFO     loading model + tokenizer
2024-06-13 17:12:16 root INFO     model + tokenizer loaded
2024-06-13 17:12:16 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='noun - plural_reg', prompt_templates=['The plural form of {} is', 'In the plural, {} is', '{} in its plural form is'], prompt_templates_zs=['The plural form of {} is', 'In the plural, {} is', '{} in its plural form is'], samples=[RelationSample(subject='album', object=['albums']), RelationSample(subject='application', object=['applications']), RelationSample(subject='area', object=['areas']), RelationSample(subject='car', object=['cars']), RelationSample(subject='college', object=['colleges']), RelationSample(subject='council', object=['councils']), RelationSample(subject='customer', object=['customers']), RelationSample(subject='day', object=['days']), RelationSample(subject='death', object=['deaths']), RelationSample(subject='department', object=['departments']), RelationSample(subject='development', object=['developments']), RelationSample(subject='difference', object=['differences']), RelationSample(subject='director', object=['directors']), RelationSample(subject='event', object=['events']), RelationSample(subject='example', object=['examples']), RelationSample(subject='fact', object=['facts']), RelationSample(subject='friend', object=['friends']), RelationSample(subject='god', object=['gods']), RelationSample(subject='government', object=['governments']), RelationSample(subject='hour', object=['hours']), RelationSample(subject='idea', object=['ideas']), RelationSample(subject='language', object=['languages']), RelationSample(subject='law', object=['laws']), RelationSample(subject='member', object=['members']), RelationSample(subject='month', object=['months']), RelationSample(subject='night', object=['nights']), RelationSample(subject='office', object=['offices']), RelationSample(subject='period', object=['periods']), RelationSample(subject='player', object=['players']), RelationSample(subject='population', object=['populations']), RelationSample(subject='problem', object=['problems']), RelationSample(subject='product', object=['products']), RelationSample(subject='resource', object=['resources']), RelationSample(subject='river', object=['rivers']), RelationSample(subject='road', object=['roads']), RelationSample(subject='role', object=['roles']), RelationSample(subject='science', object=['sciences']), RelationSample(subject='solution', object=['solutions']), RelationSample(subject='song', object=['songs']), RelationSample(subject='street', object=['streets']), RelationSample(subject='student', object=['students']), RelationSample(subject='system', object=['systems']), RelationSample(subject='thing', object=['things']), RelationSample(subject='town', object=['towns']), RelationSample(subject='user', object=['users']), RelationSample(subject='version', object=['versions']), RelationSample(subject='village', object=['villages']), RelationSample(subject='website', object=['websites']), RelationSample(subject='week', object=['weeks']), RelationSample(subject='year', object=['years'])], _domain=None, _range=None)
2024-06-13 17:12:19 root INFO     starting operator prediction
2024-06-13 17:12:19 root INFO     using no context
2024-06-13 17:12:19 root INFO     [order_1_approx] starting weight calculation
2024-06-13 17:16:15 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 17:16:15 root INFO     [order_1_approx] weight calculation finished
2024-06-13 17:16:16 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-13 17:16:16 root INFO     [order_1_approx] starting weight calculation
2024-06-13 17:20:12 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 17:20:12 root INFO     [order_1_approx] weight calculation finished
2024-06-13 17:20:13 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-13 17:20:13 root INFO     [order_1_approx] starting weight calculation
2024-06-13 17:24:10 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 17:24:10 root INFO     [order_1_approx] weight calculation finished
2024-06-13 17:24:11 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-13 17:24:11 root INFO     [order_1_approx] starting weight calculation
2024-06-13 17:28:07 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 17:28:07 root INFO     [order_1_approx] weight calculation finished
2024-06-13 17:28:08 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-13 17:28:08 root INFO     [order_1_approx] starting weight calculation
2024-06-13 17:32:03 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 17:32:03 root INFO     [order_1_approx] weight calculation finished
2024-06-13 17:32:04 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-13 17:32:04 root INFO     [order_1_approx] starting weight calculation
2024-06-13 17:35:59 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 17:35:59 root INFO     [order_1_approx] weight calculation finished
2024-06-13 17:36:00 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-13 17:36:00 root INFO     [order_1_approx] starting weight calculation
2024-06-13 17:39:56 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 17:39:56 root INFO     [order_1_approx] weight calculation finished
2024-06-13 17:39:56 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-13 17:39:57 root INFO     [order_1_approx] starting weight calculation
2024-06-13 17:43:53 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 17:43:53 root INFO     [order_1_approx] weight calculation finished
2024-06-13 17:43:54 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-13 17:43:54 root INFO     total operator prediction time: 1894.8993155956268 seconds
2024-06-13 17:43:56 root INFO     ['DA', 'dl', ' gal', ' del', ' al'] matches ['albums'] is True
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'DL', 'dl', 'AF'] matches ['applications'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', 'DL', 'AF'] matches ['areas'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', 'DL', ' gal'] matches ['cars'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'dl', 'GD', 'DL', ' gal'] matches ['colleges'] is False
2024-06-13 17:43:56 root INFO     [' ', ' (', '\n', ' [', ' and'] matches ['councils'] is False
2024-06-13 17:43:56 root INFO     [' ', '\n', ' (', ' customers', ' and'] matches ['customers'] is True
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', 'DL', 'AF'] matches ['days'] is True
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', 'DL', 'AF'] matches ['deaths'] is False
2024-06-13 17:43:56 root INFO     [' ', ' departments', '\n', ' (', ' and'] matches ['departments'] is True
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', 'DL', 'AF'] matches ['developments'] is False
2024-06-13 17:43:56 root INFO     [' ', ' (', '\n', ' [', ' and'] matches ['differences'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', 'DL', 'AF'] matches ['directors'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', 'DL', 'AF'] matches ['events'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', 'DL', 'AF'] matches ['examples'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'AF', 'GD', 'DL', 'dl'] matches ['facts'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', 'AF', 'DL'] matches ['friends'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', ' gal', 'DL'] matches ['gods'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', 'DL', 'AF'] matches ['governments'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', 'DL', 'AF'] matches ['hours'] is False
2024-06-13 17:43:56 root INFO     [' ', ' (', '\n', ' [', ' and'] matches ['ideas'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', 'DL', 'AF'] matches ['languages'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'dl', 'DL', 'GD', 'AF'] matches ['laws'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'dl', 'GD', 'DL', 'MC'] matches ['members'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'dl', 'GD', 'DL', 'MC'] matches ['months'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', 'DL', 'AF'] matches ['nights'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'dl', 'GD', 'DL', 'AF'] matches ['offices'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', 'DL', 'AF'] matches ['periods'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'dl', 'DL', 'GD', 'AF'] matches ['players'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', 'DL', 'AF'] matches ['populations'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', 'DL', 'AF'] matches ['problems'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', 'DL', 'AF'] matches ['products'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', 'DL', 'AF'] matches ['resources'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', 'DL', 'AF'] matches ['rivers'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', 'DL', 'AF'] matches ['roads'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'dl', 'DL', 'GD', ' gal'] matches ['roles'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'DL', 'dl', 'AF'] matches ['sciences'] is False
2024-06-13 17:43:56 root INFO     [' ', '\n', ' (', ' solutions', ' and'] matches ['solutions'] is True
2024-06-13 17:43:56 root INFO     ['DA', 'dl', 'GD', 'DL', ' gal'] matches ['songs'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', 'DL', 'AF'] matches ['streets'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', 'DL', 'AF'] matches ['students'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'DL', 'dl', 'AF'] matches ['systems'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', 'DL', 'AF'] matches ['things'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', 'DL', 'AF'] matches ['towns'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'DL', 'dl', 'AF'] matches ['users'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', 'DL', 'AF'] matches ['versions'] is False
2024-06-13 17:43:56 root INFO     [' ', ' (', ' cities', '\n', ' ['] matches ['villages'] is False
2024-06-13 17:43:56 root INFO     [' ', ' websites', ' (', '\n', ' and'] matches ['websites'] is True
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', 'DL', ' gal'] matches ['weeks'] is False
2024-06-13 17:43:56 root INFO     ['DA', 'GD', 'dl', 'DL', 'AF'] matches ['years'] is False
2024-06-13 17:43:56 root INFO     noun - plural_reg,50,6,44

2024-06-13 17:43:56 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='verb_inf - Ved', prompt_templates=['If the present form is {}, the past form is', 'After I {} something, it has been'], prompt_templates_zs=['If the present form is {}, the past form is', 'After I {} something, it has been'], samples=[RelationSample(subject='accept', object=['accepted']), RelationSample(subject='achieve', object=['achieved']), RelationSample(subject='add', object=['added']), RelationSample(subject='agree', object=['agreed']), RelationSample(subject='allow', object=['allowed']), RelationSample(subject='announce', object=['announced']), RelationSample(subject='appear', object=['appeared']), RelationSample(subject='apply', object=['applied']), RelationSample(subject='ask', object=['asked']), RelationSample(subject='attend', object=['attended']), RelationSample(subject='become', object=['became']), RelationSample(subject='believe', object=['believed']), RelationSample(subject='consider', object=['considered']), RelationSample(subject='continue', object=['continued']), RelationSample(subject='create', object=['created']), RelationSample(subject='decide', object=['decided']), RelationSample(subject='describe', object=['described']), RelationSample(subject='develop', object=['developed']), RelationSample(subject='discover', object=['discovered']), RelationSample(subject='enjoy', object=['enjoyed']), RelationSample(subject='ensure', object=['ensured']), RelationSample(subject='establish', object=['established']), RelationSample(subject='expect', object=['expected']), RelationSample(subject='follow', object=['followed']), RelationSample(subject='hear', object=['heard']), RelationSample(subject='identify', object=['identified']), RelationSample(subject='improve', object=['improved']), RelationSample(subject='include', object=['included']), RelationSample(subject='introduce', object=['introduced']), RelationSample(subject='involve', object=['involved']), RelationSample(subject='locate', object=['located']), RelationSample(subject='lose', object=['lost']), RelationSample(subject='manage', object=['managed']), RelationSample(subject='marry', object=['married']), RelationSample(subject='perform', object=['performed']), RelationSample(subject='provide', object=['provided']), RelationSample(subject='publish', object=['published']), RelationSample(subject='receive', object=['received']), RelationSample(subject='reduce', object=['reduced']), RelationSample(subject='refer', object=['referred']), RelationSample(subject='relate', object=['related']), RelationSample(subject='remain', object=['remained']), RelationSample(subject='replace', object=['replaced']), RelationSample(subject='require', object=['required']), RelationSample(subject='seem', object=['seemed']), RelationSample(subject='send', object=['sent']), RelationSample(subject='spend', object=['spent']), RelationSample(subject='tell', object=['told']), RelationSample(subject='understand', object=['understood']), RelationSample(subject='unite', object=['united'])], _domain=None, _range=None)
2024-06-13 17:43:58 root INFO     starting operator prediction
2024-06-13 17:43:58 root INFO     using no context
2024-06-13 17:43:59 root INFO     [order_1_approx] starting weight calculation
2024-06-13 17:47:57 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 17:47:57 root INFO     [order_1_approx] weight calculation finished
2024-06-13 17:47:58 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-13 17:47:58 root INFO     [order_1_approx] starting weight calculation
2024-06-13 17:51:56 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 17:51:56 root INFO     [order_1_approx] weight calculation finished
2024-06-13 17:51:57 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-13 17:51:57 root INFO     [order_1_approx] starting weight calculation
2024-06-13 17:55:52 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 17:55:52 root INFO     [order_1_approx] weight calculation finished
2024-06-13 17:55:53 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-13 17:55:53 root INFO     [order_1_approx] starting weight calculation
2024-06-13 17:59:48 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 17:59:48 root INFO     [order_1_approx] weight calculation finished
2024-06-13 17:59:49 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-13 17:59:49 root INFO     [order_1_approx] starting weight calculation
2024-06-13 18:03:42 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 18:03:42 root INFO     [order_1_approx] weight calculation finished
2024-06-13 18:03:43 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-13 18:03:44 root INFO     [order_1_approx] starting weight calculation
2024-06-13 18:07:40 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 18:07:40 root INFO     [order_1_approx] weight calculation finished
2024-06-13 18:07:41 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-13 18:07:41 root INFO     [order_1_approx] starting weight calculation
2024-06-13 18:11:39 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 18:11:39 root INFO     [order_1_approx] weight calculation finished
2024-06-13 18:11:40 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-13 18:11:40 root INFO     [order_1_approx] starting weight calculation
2024-06-13 18:15:35 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 18:15:35 root INFO     [order_1_approx] weight calculation finished
2024-06-13 18:15:35 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-13 18:15:35 root INFO     total operator prediction time: 1896.8650500774384 seconds
2024-06-13 18:15:38 root INFO     [' ob', '-', ' int', '--', 'Int'] matches ['accepted'] is False
2024-06-13 18:15:38 root INFO     [' ', ' has', ' achieved', ' performed', ' was'] matches ['achieved'] is True
2024-06-13 18:15:38 root INFO     [' ob', '-', ' int', '--', 'Int'] matches ['added'] is False
2024-06-13 18:15:38 root INFO     [' ob', '-', ' int', '--', ' inter'] matches ['agreed'] is False
2024-06-13 18:15:38 root INFO     [' ob', '-', ' int', '--', 'Int'] matches ['allowed'] is False
2024-06-13 18:15:38 root INFO     [' ', ' announced', ' made', ' has', ' will'] matches ['announced'] is True
2024-06-13 18:15:38 root INFO     [' ', ' appeared', ' has', ' occurred', ' will'] matches ['appeared'] is True
2024-06-13 18:15:38 root INFO     [' ob', '-', ' int', '--', 'Int'] matches ['applied'] is False
2024-06-13 18:15:38 root INFO     [' ob', '-', ' int', 'Int', '--'] matches ['asked'] is False
2024-06-13 18:15:38 root INFO     [' ', ' attended', ' has', ' is', ' received'] matches ['attended'] is True
2024-06-13 18:15:38 root INFO     [' ', ' became', ' has', ' performed', ' was'] matches ['became'] is True
2024-06-13 18:15:38 root INFO     [' ', ' believed', ' has', ' is', ' will'] matches ['believed'] is True
2024-06-13 18:15:38 root INFO     [' ob', '-', ' int', '--', 'Int'] matches ['considered'] is False
2024-06-13 18:15:38 root INFO     [' ob', '-', ' int', '--', 'Int'] matches ['continued'] is False
2024-06-13 18:15:38 root INFO     [' ob', '-', ' int', '--', ' inter'] matches ['created'] is False
2024-06-13 18:15:38 root INFO     [' ', ' decided', ' involved', ' considered', ' has'] matches ['decided'] is True
2024-06-13 18:15:38 root INFO     [' ', ' described', ' related', ' referred', ' is'] matches ['described'] is True
2024-06-13 18:15:38 root INFO     [' ob', '-', ' int', '--', 'Int'] matches ['developed'] is False
2024-06-13 18:15:38 root INFO     [' ', ' discovered', ' received', ' found', ' considered'] matches ['discovered'] is True
2024-06-13 18:15:38 root INFO     [' ', ' received', ' has', ' will', ' involved'] matches ['enjoyed'] is False
2024-06-13 18:15:38 root INFO     [' ', ' has', ' is', ' was', ' will'] matches ['ensured'] is False
2024-06-13 18:15:38 root INFO     [' ob', '-', ' int', '--', ' inter'] matches ['established'] is False
2024-06-13 18:15:38 root INFO     [' ', ' is', ' has', ' expected', ' will'] matches ['expected'] is True
2024-06-13 18:15:38 root INFO     [' ob', '-', ' int', '--', 'Int'] matches ['followed'] is False
2024-06-13 18:15:38 root INFO     [' ', ' has', ' received', ' was', ' will'] matches ['heard'] is False
2024-06-13 18:15:38 root INFO     [' ', ' is', ' has', ' involved', ' was'] matches ['identified'] is False
2024-06-13 18:15:38 root INFO     [' ob', '-', ' int', '--', ' inter'] matches ['improved'] is False
2024-06-13 18:15:38 root INFO     [' ob', '-', ' int', '--', 'Int'] matches ['included'] is False
2024-06-13 18:15:38 root INFO     [' introduced', ' ', ' received', ' involved', ' brought'] matches ['introduced'] is True
2024-06-13 18:15:38 root INFO     [' ', ' involved', ' has', ' was', ' is'] matches ['involved'] is True
2024-06-13 18:15:38 root INFO     [' ', ' is', ' has', ' was', ' will'] matches ['located'] is False
2024-06-13 18:15:38 root INFO     [' ', '\n', ' has', ' will', ' is'] matches ['lost'] is False
2024-06-13 18:15:38 root INFO     [' ', ' involved', ' was', ' received', ' is'] matches ['managed'] is False
2024-06-13 18:15:38 root INFO     [' ', ' will', ' has', ' was', ' related'] matches ['married'] is False
2024-06-13 18:15:38 root INFO     [' performed', ' ', ' was', ' has', ' is'] matches ['performed'] is True
2024-06-13 18:15:38 root INFO     [' ', ' provided', ' involved', ' performed', ' received'] matches ['provided'] is True
2024-06-13 18:15:38 root INFO     [' ', ' published', ' performed', ' has', ' reported'] matches ['published'] is True
2024-06-13 18:15:38 root INFO     [' received', ' ', ' has', ' receives', ' involved'] matches ['received'] is True
2024-06-13 18:15:38 root INFO     [' ', ' involved', ' has', ' received', ' used'] matches ['reduced'] is False
2024-06-13 18:15:38 root INFO     [' ', ' referred', ' received', ' related', ' referenced'] matches ['referred'] is True
2024-06-13 18:15:38 root INFO     [' related', ' ', ' involved', ' has', ' relates'] matches ['related'] is True
2024-06-13 18:15:38 root INFO     [' ', ' has', ' will', ' is', ' was'] matches ['remained'] is False
2024-06-13 18:15:38 root INFO     [' ob', '-', ' int', '--', ' inter'] matches ['replaced'] is False
2024-06-13 18:15:38 root INFO     [' ob', '-', ' int', '--', 'Int'] matches ['required'] is False
2024-06-13 18:15:38 root INFO     [' ', ' has', ' is', ' was', ' will'] matches ['seemed'] is False
2024-06-13 18:15:38 root INFO     [' ob', '-', ' int', '--', 'Int'] matches ['sent'] is False
2024-06-13 18:15:38 root INFO     [' ', ' has', ' will', ' involved', ' was'] matches ['spent'] is False
2024-06-13 18:15:38 root INFO     [' ob', '-', ' int', '--', 'Int'] matches ['told'] is False
2024-06-13 18:15:38 root INFO     [' understood', ' ', ' explained', ' is', ' has'] matches ['understood'] is True
2024-06-13 18:15:38 root INFO     [' ', ' has', ' involved', ' will', ' is'] matches ['united'] is False
2024-06-13 18:15:38 root INFO     verb_inf - Ved,50,25,75

2024-06-13 18:15:38 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='verb_Ving - Ved', prompt_templates=['After something is {}, it has'], prompt_templates_zs=['After something is {}, it has'], samples=[RelationSample(subject='adding', object=['added']), RelationSample(subject='agreeing', object=['agreed']), RelationSample(subject='allowing', object=['allowed']), RelationSample(subject='announcing', object=['announced']), RelationSample(subject='appearing', object=['appeared']), RelationSample(subject='applying', object=['applied']), RelationSample(subject='appointing', object=['appointed']), RelationSample(subject='asking', object=['asked']), RelationSample(subject='attending', object=['attended']), RelationSample(subject='becoming', object=['became']), RelationSample(subject='considering', object=['considered']), RelationSample(subject='containing', object=['contained']), RelationSample(subject='continuing', object=['continued']), RelationSample(subject='creating', object=['created']), RelationSample(subject='deciding', object=['decided']), RelationSample(subject='describing', object=['described']), RelationSample(subject='developing', object=['developed']), RelationSample(subject='establishing', object=['established']), RelationSample(subject='existing', object=['existed']), RelationSample(subject='expecting', object=['expected']), RelationSample(subject='failing', object=['failed']), RelationSample(subject='following', object=['followed']), RelationSample(subject='hearing', object=['heard']), RelationSample(subject='improving', object=['improved']), RelationSample(subject='including', object=['included']), RelationSample(subject='introducing', object=['introduced']), RelationSample(subject='involving', object=['involved']), RelationSample(subject='locating', object=['located']), RelationSample(subject='losing', object=['lost']), RelationSample(subject='managing', object=['managed']), RelationSample(subject='marrying', object=['married']), RelationSample(subject='operating', object=['operated']), RelationSample(subject='performing', object=['performed']), RelationSample(subject='proposing', object=['proposed']), RelationSample(subject='providing', object=['provided']), RelationSample(subject='publishing', object=['published']), RelationSample(subject='receiving', object=['received']), RelationSample(subject='reducing', object=['reduced']), RelationSample(subject='relating', object=['related']), RelationSample(subject='remaining', object=['remained']), RelationSample(subject='replacing', object=['replaced']), RelationSample(subject='representing', object=['represented']), RelationSample(subject='requiring', object=['required']), RelationSample(subject='sending', object=['sent']), RelationSample(subject='spending', object=['spent']), RelationSample(subject='suffering', object=['suffered']), RelationSample(subject='teaching', object=['taught']), RelationSample(subject='telling', object=['told']), RelationSample(subject='understanding', object=['understood']), RelationSample(subject='uniting', object=['united'])], _domain=None, _range=None)
2024-06-13 18:15:40 root INFO     starting operator prediction
2024-06-13 18:15:40 root INFO     using no context
2024-06-13 18:15:40 root INFO     [order_1_approx] starting weight calculation
2024-06-13 18:19:38 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 18:19:38 root INFO     [order_1_approx] weight calculation finished
2024-06-13 18:19:39 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-13 18:19:39 root INFO     [order_1_approx] starting weight calculation
2024-06-13 18:23:36 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 18:23:36 root INFO     [order_1_approx] weight calculation finished
2024-06-13 18:23:36 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-13 18:23:37 root INFO     [order_1_approx] starting weight calculation
2024-06-13 18:27:31 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 18:27:31 root INFO     [order_1_approx] weight calculation finished
2024-06-13 18:27:32 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-13 18:27:32 root INFO     [order_1_approx] starting weight calculation
2024-06-13 18:31:27 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 18:31:27 root INFO     [order_1_approx] weight calculation finished
2024-06-13 18:31:28 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-13 18:31:28 root INFO     [order_1_approx] starting weight calculation
2024-06-13 18:35:23 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 18:35:23 root INFO     [order_1_approx] weight calculation finished
2024-06-13 18:35:24 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-13 18:35:24 root INFO     [order_1_approx] starting weight calculation
2024-06-13 18:39:22 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 18:39:22 root INFO     [order_1_approx] weight calculation finished
2024-06-13 18:39:23 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-13 18:39:23 root INFO     [order_1_approx] starting weight calculation
2024-06-13 18:43:18 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 18:43:18 root INFO     [order_1_approx] weight calculation finished
2024-06-13 18:43:19 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-13 18:43:19 root INFO     [order_1_approx] starting weight calculation
2024-06-13 18:47:14 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 18:47:14 root INFO     [order_1_approx] weight calculation finished
2024-06-13 18:47:15 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-13 18:47:15 root INFO     total operator prediction time: 1895.0291640758514 seconds
2024-06-13 18:47:18 root INFO     ['emb', 'Emb', 'comm', ' intellectually', ' altogether'] matches ['added'] is False
2024-06-13 18:47:18 root INFO     [' ', ' said', ' told', ' asked', ' wrote'] matches ['agreed'] is False
2024-06-13 18:47:18 root INFO     [' ', ' said', ' was', ' made', ' told'] matches ['allowed'] is False
2024-06-13 18:47:18 root INFO     [' ', ' announced', ' said', ' told', ' made'] matches ['announced'] is True
2024-06-13 18:47:18 root INFO     [' ', ' said', ' was', ' became', ' wrote'] matches ['appeared'] is False
2024-06-13 18:47:18 root INFO     [' ', ' said', ' made', ' wrote', ' was'] matches ['applied'] is False
2024-06-13 18:47:18 root INFO     [' ', ' said', ' told', ' was', ' made'] matches ['appointed'] is False
2024-06-13 18:47:18 root INFO     ['emb', 'Emb', 'comm', ' intellectually', 'em'] matches ['asked'] is False
2024-06-13 18:47:18 root INFO     [' ', ' said', ' was', ' began', ' became'] matches ['attended'] is False
2024-06-13 18:47:18 root INFO     [' ', ' said', ' became', ' was', ' wrote'] matches ['became'] is True
2024-06-13 18:47:18 root INFO     [' ', ' said', ' was', ' considered', ' discussed'] matches ['considered'] is True
2024-06-13 18:47:18 root INFO     ['emb', 'Emb', 'comm', ' intellectually', 'em'] matches ['contained'] is False
2024-06-13 18:47:18 root INFO     [' ', ' continued', ' began', ' was', ' said'] matches ['continued'] is True
2024-06-13 18:47:18 root INFO     [' created', ' ', ' wrote', ' said', ' produced'] matches ['created'] is True
2024-06-13 18:47:18 root INFO     [' ', ' told', ' said', ' decided', ' announced'] matches ['decided'] is True
2024-06-13 18:47:18 root INFO     [' ', ' described', ' wrote', ' said', ' told'] matches ['described'] is True
2024-06-13 18:47:18 root INFO     [' ', ' created', ' revealed', ' began', ' became'] matches ['developed'] is False
2024-06-13 18:47:18 root INFO     [' ', ' created', ' caused', ' became', ' stated'] matches ['established'] is False
2024-06-13 18:47:18 root INFO     ['emb', 'Emb', 'comm', ' intellectually', 'em'] matches ['existed'] is False
2024-06-13 18:47:18 root INFO     [' ', ' said', ' was', ' asked', ' requested'] matches ['expected'] is False
2024-06-13 18:47:18 root INFO     [' ', ' said', ' made', ' was', ' told'] matches ['failed'] is False
2024-06-13 18:47:18 root INFO     [' ', ' was', ' wrote', ' said', ' caused'] matches ['followed'] is False
2024-06-13 18:47:18 root INFO     [' ', ' said', ' was', ' told', ' made'] matches ['heard'] is False
2024-06-13 18:47:18 root INFO     [' ', ' said', ' became', ' wrote', ' made'] matches ['improved'] is False
2024-06-13 18:47:18 root INFO     ['emb', 'Emb', 'comm', ' intellectually', 'em'] matches ['included'] is False
2024-06-13 18:47:18 root INFO     [' ', ' introduced', ' became', ' announced', ' began'] matches ['introduced'] is True
2024-06-13 18:47:18 root INFO     [' ', ' was', ' involved', ' said', ' occurred'] matches ['involved'] is True
2024-06-13 18:47:18 root INFO     [' ', ' said', ' told', ' caused', ' made'] matches ['located'] is False
2024-06-13 18:47:18 root INFO     [' ', ' said', ' wrote', ' told', ' made'] matches ['lost'] is False
2024-06-13 18:47:18 root INFO     [' ', ' was', ' became', ' made', ' said'] matches ['managed'] is False
2024-06-13 18:47:18 root INFO     [' ', ' said', ' was', ' became', ' told'] matches ['married'] is False
2024-06-13 18:47:18 root INFO     [' ', ' was', ' said', ' caused', ' did'] matches ['operated'] is False
2024-06-13 18:47:18 root INFO     ['emb', 'Emb', ' intellectually', 'comm', ' altogether'] matches ['performed'] is False
2024-06-13 18:47:18 root INFO     [' ', ' suggested', ' proposed', ' requested', ' said'] matches ['proposed'] is True
2024-06-13 18:47:18 root INFO     [' ', ' provided', ' said', ' stated', ' made'] matches ['provided'] is True
2024-06-13 18:47:18 root INFO     [' published', ' wrote', ' ', ' written', ' said'] matches ['published'] is True
2024-06-13 18:47:18 root INFO     [' received', ' ', ' was', ' said', ' became'] matches ['received'] is True
2024-06-13 18:47:18 root INFO     [' ', ' made', ' became', ' brought', ' said'] matches ['reduced'] is False
2024-06-13 18:47:18 root INFO     [' ', ' related', ' said', ' revealed', ' told'] matches ['related'] is True
2024-06-13 18:47:18 root INFO     [' ', ' was', ' became', ' were', ' made'] matches ['remained'] is False
2024-06-13 18:47:18 root INFO     [' ', ' was', ' became', ' wrote', ' said'] matches ['replaced'] is False
2024-06-13 18:47:18 root INFO     [' ', ' represented', ' said', ' wrote', ' presented'] matches ['represented'] is True
2024-06-13 18:47:18 root INFO     [' ', ' required', ' was', ' said', ' requested'] matches ['required'] is True
2024-06-13 18:47:18 root INFO     [' ', ' said', ' sent', ' wrote', ' told'] matches ['sent'] is True
2024-06-13 18:47:18 root INFO     [' ', ' said', ' was', ' wrote', ' began'] matches ['spent'] is False
2024-06-13 18:47:18 root INFO     [' ', ' said', ' was', ' caused', ' became'] matches ['suffered'] is False
2024-06-13 18:47:18 root INFO     [' ', ' told', ' taught', ' said', ' wrote'] matches ['taught'] is True
2024-06-13 18:47:18 root INFO     ['emb', 'Emb', 'comm', ' intellectually', 'em'] matches ['told'] is False
2024-06-13 18:47:18 root INFO     [' ', ' was', ' understood', ' became', ' explained'] matches ['understood'] is True
2024-06-13 18:47:18 root INFO     [' ', ' became', ' said', ' caused', ' made'] matches ['united'] is False
2024-06-13 18:47:18 root INFO     verb_Ving - Ved,50,44,106

2024-06-13 18:47:18 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='adj - superlative', prompt_templates=['If something is the most {}, it is', 'When something is the most {}, it is'], prompt_templates_zs=['If something is the most {}, it is', 'When something is the most {}, it is'], samples=[RelationSample(subject='able', object=['ablest']), RelationSample(subject='angry', object=['angriest']), RelationSample(subject='cheap', object=['cheapest']), RelationSample(subject='clever', object=['cleverest']), RelationSample(subject='costly', object=['costliest']), RelationSample(subject='cruel', object=['cruelest']), RelationSample(subject='cute', object=['cutest']), RelationSample(subject='dense', object=['densest']), RelationSample(subject='dumb', object=['dumbest']), RelationSample(subject='fierce', object=['fiercest']), RelationSample(subject='handy', object=['handiest']), RelationSample(subject='happy', object=['happiest']), RelationSample(subject='hardy', object=['hardiest']), RelationSample(subject='harsh', object=['harshest']), RelationSample(subject='healthy', object=['healthiest']), RelationSample(subject='hot', object=['hottest']), RelationSample(subject='huge', object=['hugest']), RelationSample(subject='hungry', object=['hungriest']), RelationSample(subject='lazy', object=['laziest']), RelationSample(subject='lengthy', object=['lengthiest']), RelationSample(subject='lucky', object=['luckiest']), RelationSample(subject='merry', object=['merriest']), RelationSample(subject='mild', object=['mildest']), RelationSample(subject='nasty', object=['nastiest']), RelationSample(subject='neat', object=['neatest']), RelationSample(subject='nice', object=['nicest']), RelationSample(subject='noisy', object=['noisiest']), RelationSample(subject='polite', object=['politest']), RelationSample(subject='proud', object=['proudest']), RelationSample(subject='pure', object=['purest']), RelationSample(subject='rare', object=['rarest']), RelationSample(subject='risky', object=['riskiest']), RelationSample(subject='rude', object=['rudest']), RelationSample(subject='sad', object=['saddest']), RelationSample(subject='scary', object=['scariest']), RelationSample(subject='sexy', object=['sexiest']), RelationSample(subject='shiny', object=['shiniest']), RelationSample(subject='strange', object=['strangest']), RelationSample(subject='strict', object=['strictest']), RelationSample(subject='strong', object=['strongest']), RelationSample(subject='subtle', object=['subtlest']), RelationSample(subject='sunny', object=['sunniest']), RelationSample(subject='tasty', object=['tastiest']), RelationSample(subject='tiny', object=['tiniest']), RelationSample(subject='tricky', object=['trickiest']), RelationSample(subject='ugly', object=['ugliest']), RelationSample(subject='vague', object=['vaguest']), RelationSample(subject='weak', object=['weakest']), RelationSample(subject='wealthy', object=['wealthiest']), RelationSample(subject='weird', object=['weirdest'])], _domain=None, _range=None)
2024-06-13 18:47:20 root INFO     starting operator prediction
2024-06-13 18:47:20 root INFO     using no context
2024-06-13 18:47:20 root INFO     [order_1_approx] starting weight calculation
2024-06-13 18:51:17 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 18:51:17 root INFO     [order_1_approx] weight calculation finished
2024-06-13 18:51:18 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-13 18:51:18 root INFO     [order_1_approx] starting weight calculation
2024-06-13 18:55:14 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 18:55:14 root INFO     [order_1_approx] weight calculation finished
2024-06-13 18:55:15 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-13 18:55:15 root INFO     [order_1_approx] starting weight calculation
2024-06-13 18:59:10 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 18:59:10 root INFO     [order_1_approx] weight calculation finished
2024-06-13 18:59:11 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-13 18:59:11 root INFO     [order_1_approx] starting weight calculation
2024-06-13 19:03:10 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 19:03:10 root INFO     [order_1_approx] weight calculation finished
2024-06-13 19:03:10 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-13 19:03:11 root INFO     [order_1_approx] starting weight calculation
2024-06-13 19:07:08 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 19:07:08 root INFO     [order_1_approx] weight calculation finished
2024-06-13 19:07:09 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-13 19:07:09 root INFO     [order_1_approx] starting weight calculation
2024-06-13 19:11:06 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 19:11:06 root INFO     [order_1_approx] weight calculation finished
2024-06-13 19:11:07 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-13 19:11:07 root INFO     [order_1_approx] starting weight calculation
2024-06-13 19:15:02 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 19:15:02 root INFO     [order_1_approx] weight calculation finished
2024-06-13 19:15:03 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-13 19:15:03 root INFO     [order_1_approx] starting weight calculation
2024-06-13 19:18:59 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 19:18:59 root INFO     [order_1_approx] weight calculation finished
2024-06-13 19:19:00 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-13 19:19:00 root INFO     total operator prediction time: 1899.958416223526 seconds
2024-06-13 19:19:02 root INFO     ['OG', 'Arm', 'Auth', 'Angel', 'Authent'] matches ['ablest'] is False
2024-06-13 19:19:02 root INFO     [' most', ' greatest', ' ', ' biggest', ' hardest'] matches ['angriest'] is False
2024-06-13 19:19:02 root INFO     [' most', ' cheapest', ' least', ' easiest', ' best'] matches ['cheapest'] is True
2024-06-13 19:19:02 root INFO     [' most', ' greatest', ' best', ' biggest', ' '] matches ['cleverest'] is False
2024-06-13 19:19:02 root INFO     [' most', ' cheapest', ' least', ' cost', ' greatest'] matches ['costliest'] is True
2024-06-13 19:19:02 root INFO     [' most', ' cruel', ' greatest', ' ', ' biggest'] matches ['cruelest'] is True
2024-06-13 19:19:02 root INFO     [' most', ' cut', ' c', ' greatest', ' biggest'] matches ['cutest'] is True
2024-06-13 19:19:02 root INFO     [' most', ' dens', ' ', ' hardest', ' least'] matches ['densest'] is True
2024-06-13 19:19:02 root INFO     [' most', ' dumb', ' biggest', ' ', ' greatest'] matches ['dumbest'] is True
2024-06-13 19:19:02 root INFO     [' most', ' ', ' biggest', ' greatest', ' best'] matches ['fiercest'] is False
2024-06-13 19:19:02 root INFO     [' most', ' hand', ' easiest', ' hardest', ' hands'] matches ['handiest'] is True
2024-06-13 19:19:02 root INFO     ['OG', 'Arm', 'Angel', 'Auth', 'Authent'] matches ['happiest'] is False
2024-06-13 19:19:02 root INFO     [' hardest', ' most', ' h', ' hand', ' easiest'] matches ['hardiest'] is False
2024-06-13 19:19:02 root INFO     [' hars', ' most', ' hardest', ' h', ' greatest'] matches ['harshest'] is True
2024-06-13 19:19:02 root INFO     ['Arm', 'OG', 'Auth', 'Angel', 'Authent'] matches ['healthiest'] is False
2024-06-13 19:19:02 root INFO     ['OG', 'Arm', 'Auth', 'Authent', 'GO'] matches ['hottest'] is False
2024-06-13 19:19:02 root INFO     ['OG', 'Arm', 'Auth', 'Authent', 'Amazon'] matches ['hugest'] is False
2024-06-13 19:19:02 root INFO     [' most', ' hottest', ' hardest', ' biggest', ' greatest'] matches ['hungriest'] is False
2024-06-13 19:19:02 root INFO     [' most', ' easiest', ' least', ' luck', ' '] matches ['laziest'] is False
2024-06-13 19:19:02 root INFO     [' most', ' biggest', ' greatest', ' least', ' easiest'] matches ['lengthiest'] is False
2024-06-13 19:19:02 root INFO     [' luck', ' most', ' biggest', ' ', ' happiest'] matches ['luckiest'] is True
2024-06-13 19:19:02 root INFO     [' most', ' happiest', ' greatest', ' best', ' h'] matches ['merriest'] is False
2024-06-13 19:19:02 root INFO     [' most', ' biggest', ' ', ' greatest', ' least'] matches ['mildest'] is False
2024-06-13 19:19:02 root INFO     [' most', ' easiest', ' greatest', ' least', ' '] matches ['neatest'] is False
2024-06-13 19:19:02 root INFO     ['OG', 'Arm', 'Auth', 'Angel', 'GO'] matches ['nicest'] is False
2024-06-13 19:19:02 root INFO     [' most', ' biggest', ' ', ' least', ' busiest'] matches ['noisiest'] is False
2024-06-13 19:19:02 root INFO     [' most', ' ', ' least', ' best', ' biggest'] matches ['politest'] is False
2024-06-13 19:19:02 root INFO     [' most', ' proud', ' greatest', ' ', ' biggest'] matches ['proudest'] is True
2024-06-13 19:19:02 root INFO     ['Arm', 'OG', 'Auth', 'Authent', 'Amazon'] matches ['purest'] is False
2024-06-13 19:19:02 root INFO     [' most', ' greatest', ' ', ' least', ' best'] matches ['rarest'] is False
2024-06-13 19:19:02 root INFO     [' most', ' least', ' hottest', ' ', ' greatest'] matches ['riskiest'] is False
2024-06-13 19:19:02 root INFO     [' most', ' ', ' greatest', ' biggest', ' busiest'] matches ['rudest'] is False
2024-06-13 19:19:02 root INFO     [' most', ' happiest', ' sadd', ' hardest', ' '] matches ['saddest'] is True
2024-06-13 19:19:02 root INFO     [' most', ' sc', ' ', ' least', ' safest'] matches ['scariest'] is True
2024-06-13 19:19:02 root INFO     [' most', ' sex', ' hottest', ' least', ' '] matches ['sexiest'] is True
2024-06-13 19:19:02 root INFO     [' most', ' sh', ' biggest', ' h', ' hottest'] matches ['shiniest'] is True
2024-06-13 19:19:02 root INFO     [' most', ' strang', ' greatest', ' ', ' biggest'] matches ['strangest'] is True
2024-06-13 19:19:02 root INFO     [' most', ' strict', ' least', ' ', ' hardest'] matches ['strictest'] is True
2024-06-13 19:19:02 root INFO     ['Arm', 'OG', 'Auth', 'Angel', 'Amazon'] matches ['strongest'] is False
2024-06-13 19:19:02 root INFO     [' most', ' ', ' slightest', ' least', ' greatest'] matches ['subtlest'] is False
2024-06-13 19:19:02 root INFO     [' most', ' happiest', ' funn', ' sun', ' biggest'] matches ['sunniest'] is True
2024-06-13 19:19:02 root INFO     [' most', ' tast', ' best', ' hottest', ' '] matches ['tastiest'] is True
2024-06-13 19:19:02 root INFO     ['Arm', 'OG', 'Auth', 'Angel', 'Authent'] matches ['tiniest'] is False
2024-06-13 19:19:02 root INFO     [' most', ' trick', ' easiest', ' hardest', ' biggest'] matches ['trickiest'] is True
2024-06-13 19:19:02 root INFO     [' most', ' ', ' biggest', ' easiest', ' least'] matches ['vaguest'] is False
2024-06-13 19:19:02 root INFO     ['OG', 'Arm', 'Auth', 'Amazon', 'Author'] matches ['weakest'] is False
2024-06-13 19:19:02 root INFO     [' most', ' wealthiest', ' greatest', ' richest', ' biggest'] matches ['wealthiest'] is True
2024-06-13 19:19:02 root INFO     [' most', ' ', ' weird', ' best', ' least'] matches ['weirdest'] is True
2024-06-13 19:19:02 root INFO     adj - superlative,50,65,133

2024-06-13 19:19:03 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='verb_inf - 3pSg', prompt_templates=['I {}, he', 'I {}, she', 'I {}, it'], prompt_templates_zs=['I {}, he', 'I {}, she', 'I {}, it'], samples=[RelationSample(subject='accept', object=['accepts']), RelationSample(subject='achieve', object=['achieves']), RelationSample(subject='add', object=['adds']), RelationSample(subject='agree', object=['agrees']), RelationSample(subject='allow', object=['allows']), RelationSample(subject='appear', object=['appears']), RelationSample(subject='apply', object=['applies']), RelationSample(subject='ask', object=['asks']), RelationSample(subject='avoid', object=['avoids']), RelationSample(subject='become', object=['becomes']), RelationSample(subject='believe', object=['believes']), RelationSample(subject='consider', object=['considers']), RelationSample(subject='consist', object=['consists']), RelationSample(subject='contain', object=['contains']), RelationSample(subject='continue', object=['continues']), RelationSample(subject='create', object=['creates']), RelationSample(subject='describe', object=['describes']), RelationSample(subject='develop', object=['develops']), RelationSample(subject='enable', object=['enables']), RelationSample(subject='enjoy', object=['enjoys']), RelationSample(subject='ensure', object=['ensures']), RelationSample(subject='exist', object=['exists']), RelationSample(subject='explain', object=['explains']), RelationSample(subject='follow', object=['follows']), RelationSample(subject='happen', object=['happens']), RelationSample(subject='hear', object=['hears']), RelationSample(subject='identify', object=['identifies']), RelationSample(subject='improve', object=['improves']), RelationSample(subject='include', object=['includes']), RelationSample(subject='involve', object=['involves']), RelationSample(subject='learn', object=['learns']), RelationSample(subject='maintain', object=['maintains']), RelationSample(subject='occur', object=['occurs']), RelationSample(subject='operate', object=['operates']), RelationSample(subject='prevent', object=['prevents']), RelationSample(subject='promote', object=['promotes']), RelationSample(subject='protect', object=['protects']), RelationSample(subject='provide', object=['provides']), RelationSample(subject='receive', object=['receives']), RelationSample(subject='reduce', object=['reduces']), RelationSample(subject='refer', object=['refers']), RelationSample(subject='remain', object=['remains']), RelationSample(subject='remember', object=['remembers']), RelationSample(subject='represent', object=['represents']), RelationSample(subject='require', object=['requires']), RelationSample(subject='seem', object=['seems']), RelationSample(subject='send', object=['sends']), RelationSample(subject='suggest', object=['suggests']), RelationSample(subject='tell', object=['tells']), RelationSample(subject='understand', object=['understands'])], _domain=None, _range=None)
2024-06-13 19:19:05 root INFO     starting operator prediction
2024-06-13 19:19:05 root INFO     using no context
2024-06-13 19:19:05 root INFO     [order_1_approx] starting weight calculation
2024-06-13 19:23:04 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 19:23:04 root INFO     [order_1_approx] weight calculation finished
2024-06-13 19:23:04 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-13 19:23:05 root INFO     [order_1_approx] starting weight calculation
2024-06-13 19:27:01 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 19:27:01 root INFO     [order_1_approx] weight calculation finished
2024-06-13 19:27:02 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-13 19:27:02 root INFO     [order_1_approx] starting weight calculation
2024-06-13 19:30:58 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 19:30:58 root INFO     [order_1_approx] weight calculation finished
2024-06-13 19:30:59 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-13 19:30:59 root INFO     [order_1_approx] starting weight calculation
2024-06-13 19:34:56 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 19:34:56 root INFO     [order_1_approx] weight calculation finished
2024-06-13 19:34:56 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-13 19:34:57 root INFO     [order_1_approx] starting weight calculation
2024-06-13 19:38:53 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 19:38:53 root INFO     [order_1_approx] weight calculation finished
2024-06-13 19:38:54 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-13 19:38:54 root INFO     [order_1_approx] starting weight calculation
2024-06-13 19:42:51 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 19:42:51 root INFO     [order_1_approx] weight calculation finished
2024-06-13 19:42:52 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-13 19:42:52 root INFO     [order_1_approx] starting weight calculation
2024-06-13 19:46:49 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 19:46:49 root INFO     [order_1_approx] weight calculation finished
2024-06-13 19:46:50 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-13 19:46:50 root INFO     [order_1_approx] starting weight calculation
2024-06-13 19:50:48 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 19:50:48 root INFO     [order_1_approx] weight calculation finished
2024-06-13 19:50:49 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-13 19:50:49 root INFO     total operator prediction time: 1904.0163753032684 seconds
2024-06-13 19:50:51 root INFO     [' vou', 'OP', 'ju', 'g', 'nb'] matches ['accepts'] is False
2024-06-13 19:50:51 root INFO     [' ', ' achieves', ' makes', ' is', ' creates'] matches ['achieves'] is True
2024-06-13 19:50:51 root INFO     [' vou', 'OP', 'ju', 'g', 'nb'] matches ['adds'] is False
2024-06-13 19:50:51 root INFO     [' vou', 'OP', 'ju', 'g', ' ob'] matches ['agrees'] is False
2024-06-13 19:50:51 root INFO     [' vou', 'OP', 'ju', 'g', 'nb'] matches ['allows'] is False
2024-06-13 19:50:51 root INFO     [' is', ' appears', ' ', ' makes', ' becomes'] matches ['appears'] is True
2024-06-13 19:50:51 root INFO     [' vou', 'OP', 'ju', ' ob', 'g'] matches ['applies'] is False
2024-06-13 19:50:51 root INFO     [' vou', 'OP', 'ju', 'g', 'kn'] matches ['asks'] is False
2024-06-13 19:50:51 root INFO     [' vou', 'OP', 'ju', ' ob', 'g'] matches ['avoids'] is False
2024-06-13 19:50:51 root INFO     [' becomes', ' is', ' ', ' makes', ' will'] matches ['becomes'] is True
2024-06-13 19:50:51 root INFO     [' ', ' is', ' believes', ' makes', ' becomes'] matches ['believes'] is True
2024-06-13 19:50:51 root INFO     [' vou', 'OP', 'ju', 'g', 'kn'] matches ['considers'] is False
2024-06-13 19:50:51 root INFO     [' is', ' ', ' happens', ' has', ' will'] matches ['consists'] is False
2024-06-13 19:50:51 root INFO     [' is', ' ', ' requires', ' contains', ' involves'] matches ['contains'] is True
2024-06-13 19:50:51 root INFO     [' vou', 'OP', 'ju', 'kn', 'g'] matches ['continues'] is False
2024-06-13 19:50:51 root INFO     [' vou', 'OP', 'ju', 'g', ' ob'] matches ['creates'] is False
2024-06-13 19:50:51 root INFO     [' is', ' describes', ' ', ' represents', ' will'] matches ['describes'] is True
2024-06-13 19:50:51 root INFO     [' vou', 'OP', 'ju', 'g', 'nb'] matches ['develops'] is False
2024-06-13 19:50:51 root INFO     [' vou', 'OP', 'ju', 'g', 'nb'] matches ['enables'] is False
2024-06-13 19:50:51 root INFO     [' is', ' ', ' makes', ' will', ' does'] matches ['enjoys'] is False
2024-06-13 19:50:51 root INFO     [' is', ' ', ' ensures', ' makes', ' requires'] matches ['ensures'] is True
2024-06-13 19:50:51 root INFO     [' vou', 'OP', 'ju', ' ob', 'g'] matches ['exists'] is False
2024-06-13 19:50:51 root INFO     [' explains', ' ', ' is', ' makes', ' will'] matches ['explains'] is True
2024-06-13 19:50:51 root INFO     [' vou', 'OP', 'ju', 'g', 'nb'] matches ['follows'] is False
2024-06-13 19:50:51 root INFO     [' happens', ' makes', ' is', ' ', ' will'] matches ['happens'] is True
2024-06-13 19:50:51 root INFO     [' is', ' ', ' makes', ' will', ' has'] matches ['hears'] is False
2024-06-13 19:50:51 root INFO     [' ', ' is', ' makes', ' becomes', ' will'] matches ['identifies'] is False
2024-06-13 19:50:51 root INFO     [' vou', 'OP', 'ju', ' ob', 'g'] matches ['improves'] is False
2024-06-13 19:50:51 root INFO     [' vou', 'OP', 'ju', 'g', 'kn'] matches ['includes'] is False
2024-06-13 19:50:51 root INFO     [' involves', ' ', ' is', ' makes', ' requires'] matches ['involves'] is True
2024-06-13 19:50:51 root INFO     [' vou', 'OP', 'ju', 'kn', 'g'] matches ['learns'] is False
2024-06-13 19:50:51 root INFO     [' is', ' ', ' makes', ' requires', ' will'] matches ['maintains'] is False
2024-06-13 19:50:51 root INFO     [' is', ' occurs', ' ', ' happens', ' makes'] matches ['occurs'] is True
2024-06-13 19:50:51 root INFO     [' ', ' is', ' makes', ' requires', ' operates'] matches ['operates'] is True
2024-06-13 19:50:51 root INFO     [' is', ' ', ' makes', ' prevents', ' causes'] matches ['prevents'] is True
2024-06-13 19:50:51 root INFO     [' promotes', ' ', ' makes', ' is', ' requires'] matches ['promotes'] is True
2024-06-13 19:50:51 root INFO     [' vou', 'OP', 'ju', 'g', 'nb'] matches ['protects'] is False
2024-06-13 19:50:51 root INFO     [' provides', ' ', ' is', ' makes', ' requires'] matches ['provides'] is True
2024-06-13 19:50:51 root INFO     [' is', ' ', ' receives', ' requires', ' becomes'] matches ['receives'] is True
2024-06-13 19:50:51 root INFO     [' ', ' reduces', ' is', ' makes', ' causes'] matches ['reduces'] is True
2024-06-13 19:50:51 root INFO     [' is', ' ', ' requires', ' refers', ' makes'] matches ['refers'] is True
2024-06-13 19:50:51 root INFO     [' is', ' ', ' requires', ' makes', ' will'] matches ['remains'] is False
2024-06-13 19:50:51 root INFO     [' vou', 'OP', 'ju', 'g', ' ob'] matches ['remembers'] is False
2024-06-13 19:50:51 root INFO     [' vou', 'OP', 'ju', 'g', 'nb'] matches ['represents'] is False
2024-06-13 19:50:51 root INFO     [' vou', 'OP', 'ju', 'nb', 'kn'] matches ['requires'] is False
2024-06-13 19:50:51 root INFO     [' is', ' ', ' makes', ' seems', ' will'] matches ['seems'] is True
2024-06-13 19:50:51 root INFO     [' vou', 'OP', 'ju', 'g', 'kn'] matches ['sends'] is False
2024-06-13 19:50:51 root INFO     [' vou', 'OP', 'ju', 'nb', 'g'] matches ['suggests'] is False
2024-06-13 19:50:51 root INFO     [' vou', 'OP', 'ju', 'g', 'kn'] matches ['tells'] is False
2024-06-13 19:50:51 root INFO     [' ', ' is', ' makes', ' will', ' becomes'] matches ['understands'] is False
2024-06-13 19:50:51 root INFO     verb_inf - 3pSg,50,84,164

2024-06-13 19:50:51 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='Ving - verb_inf', prompt_templates=['{} is the active form of', '{} is to'], prompt_templates_zs=['{} is the active form of', '{} is to'], samples=[RelationSample(subject='achieving', object=['achieve']), RelationSample(subject='adding', object=['add']), RelationSample(subject='allowing', object=['allow']), RelationSample(subject='appearing', object=['appear']), RelationSample(subject='applying', object=['apply']), RelationSample(subject='asking', object=['ask']), RelationSample(subject='attending', object=['attend']), RelationSample(subject='avoiding', object=['avoid']), RelationSample(subject='becoming', object=['become']), RelationSample(subject='believing', object=['believe']), RelationSample(subject='considering', object=['consider']), RelationSample(subject='containing', object=['contain']), RelationSample(subject='continuing', object=['continue']), RelationSample(subject='creating', object=['create']), RelationSample(subject='developing', object=['develop']), RelationSample(subject='encouraging', object=['encourage']), RelationSample(subject='enjoying', object=['enjoy']), RelationSample(subject='ensuring', object=['ensure']), RelationSample(subject='establishing', object=['establish']), RelationSample(subject='existing', object=['exist']), RelationSample(subject='expecting', object=['expect']), RelationSample(subject='following', object=['follow']), RelationSample(subject='happening', object=['happen']), RelationSample(subject='identifying', object=['identify']), RelationSample(subject='improving', object=['improve']), RelationSample(subject='including', object=['include']), RelationSample(subject='involving', object=['involve']), RelationSample(subject='learning', object=['learn']), RelationSample(subject='losing', object=['lose']), RelationSample(subject='maintaining', object=['maintain']), RelationSample(subject='managing', object=['manage']), RelationSample(subject='operating', object=['operate']), RelationSample(subject='performing', object=['perform']), RelationSample(subject='preventing', object=['prevent']), RelationSample(subject='promoting', object=['promote']), RelationSample(subject='protecting', object=['protect']), RelationSample(subject='providing', object=['provide']), RelationSample(subject='receiving', object=['receive']), RelationSample(subject='reducing', object=['reduce']), RelationSample(subject='referring', object=['refer']), RelationSample(subject='remaining', object=['remain']), RelationSample(subject='remembering', object=['remember']), RelationSample(subject='representing', object=['represent']), RelationSample(subject='requiring', object=['require']), RelationSample(subject='seeming', object=['seem']), RelationSample(subject='sitting', object=['sit']), RelationSample(subject='spending', object=['spend']), RelationSample(subject='teaching', object=['teach']), RelationSample(subject='telling', object=['tell']), RelationSample(subject='understanding', object=['understand'])], _domain=None, _range=None)
2024-06-13 19:50:53 root INFO     starting operator prediction
2024-06-13 19:50:53 root INFO     using no context
2024-06-13 19:50:53 root INFO     [order_1_approx] starting weight calculation
2024-06-13 19:54:53 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 19:54:53 root INFO     [order_1_approx] weight calculation finished
2024-06-13 19:54:54 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-13 19:54:54 root INFO     [order_1_approx] starting weight calculation
2024-06-13 19:58:52 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 19:58:52 root INFO     [order_1_approx] weight calculation finished
2024-06-13 19:58:53 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-13 19:58:53 root INFO     [order_1_approx] starting weight calculation
2024-06-13 20:02:51 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 20:02:51 root INFO     [order_1_approx] weight calculation finished
2024-06-13 20:02:52 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-13 20:02:52 root INFO     [order_1_approx] starting weight calculation
2024-06-13 20:06:51 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 20:06:51 root INFO     [order_1_approx] weight calculation finished
2024-06-13 20:06:52 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-13 20:06:52 root INFO     [order_1_approx] starting weight calculation
2024-06-13 20:10:51 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 20:10:51 root INFO     [order_1_approx] weight calculation finished
2024-06-13 20:10:52 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-13 20:10:52 root INFO     [order_1_approx] starting weight calculation
2024-06-13 20:14:51 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 20:14:51 root INFO     [order_1_approx] weight calculation finished
2024-06-13 20:14:51 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-13 20:14:52 root INFO     [order_1_approx] starting weight calculation
2024-06-13 20:18:51 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 20:18:51 root INFO     [order_1_approx] weight calculation finished
2024-06-13 20:18:52 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-13 20:18:52 root INFO     [order_1_approx] starting weight calculation
2024-06-13 20:22:51 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 20:22:51 root INFO     [order_1_approx] weight calculation finished
2024-06-13 20:22:52 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-13 20:22:52 root INFO     total operator prediction time: 1918.4613263607025 seconds
2024-06-13 20:22:54 root INFO     [' ', ' achieve', ' make', ' ensure', ' accomplish'] matches ['achieve'] is True
2024-06-13 20:22:54 root INFO     [' unwittingly', ' inadvertently', ' endorsing', ' appropriate', '998'] matches ['add'] is False
2024-06-13 20:22:54 root INFO     [' ', ' allow', ' require', ' enable', ' make'] matches ['allow'] is True
2024-06-13 20:22:54 root INFO     [' ', ' appear', ' be', ' require', ' allow'] matches ['appear'] is True
2024-06-13 20:22:54 root INFO     [' ', ' apply', ' require', ' allow', ' enforce'] matches ['apply'] is True
2024-06-13 20:22:54 root INFO     [' unwittingly', ' inadvertently', '998', ' endorsing', ' oneself'] matches ['ask'] is False
2024-06-13 20:22:54 root INFO     [' ', ' allow', ' attend', ' be', ' apply'] matches ['attend'] is True
2024-06-13 20:22:54 root INFO     [' ', ' allow', ' avoid', ' make', ' be'] matches ['avoid'] is True
2024-06-13 20:22:54 root INFO     [' ', ' be', ' become', ' make', ' allow'] matches ['become'] is True
2024-06-13 20:22:54 root INFO     [' ', ' believe', ' be', ' allow', ' ensure'] matches ['believe'] is True
2024-06-13 20:22:54 root INFO     [' ', ' consider', ' be', ' allow', ' require'] matches ['consider'] is True
2024-06-13 20:22:54 root INFO     [' unwittingly', ' inadvertently', ' endorsing', ' appropriate', '998'] matches ['contain'] is False
2024-06-13 20:22:54 root INFO     [' ', ' continue', ' remain', ' establish', ' be'] matches ['continue'] is True
2024-06-13 20:22:54 root INFO     [' ', ' create', ' make', ' bring', ' establish'] matches ['create'] is True
2024-06-13 20:22:54 root INFO     [' ', ' develop', ' establish', ' require', ' provide'] matches ['develop'] is True
2024-06-13 20:22:54 root INFO     [' ', ' encourage', ' require', ' allow', ' enable'] matches ['encourage'] is True
2024-06-13 20:22:54 root INFO     [' ', ' be', ' allow', ' enjoy', ' make'] matches ['enjoy'] is True
2024-06-13 20:22:54 root INFO     [' ', ' ensure', ' require', ' make', ' assure'] matches ['ensure'] is True
2024-06-13 20:22:54 root INFO     [' ', ' establish', ' ensure', ' require', ' make'] matches ['establish'] is True
2024-06-13 20:22:54 root INFO     [' unwittingly', ' inadvertently', ' endorsing', '998', ' appropriate'] matches ['exist'] is False
2024-06-13 20:22:54 root INFO     [' ', ' expect', ' require', ' be', ' ensure'] matches ['expect'] is True
2024-06-13 20:22:54 root INFO     [' ', ' require', ' be', ' encourage', ' provide'] matches ['follow'] is False
2024-06-13 20:22:54 root INFO     [' ', ' be', ' make', ' become', ' occur'] matches ['happen'] is False
2024-06-13 20:22:54 root INFO     [' ', ' require', ' provide', ' refer', ' make'] matches ['identify'] is False
2024-06-13 20:22:54 root INFO     [' ', ' improve', ' provide', ' encourage', ' make'] matches ['improve'] is True
2024-06-13 20:22:54 root INFO     [' unwittingly', ' inadvertently', ' endorsing', ' appropriate', '998'] matches ['include'] is False
2024-06-13 20:22:54 root INFO     [' ', ' involve', ' require', ' be', ' imply'] matches ['involve'] is True
2024-06-13 20:22:54 root INFO     [' unwittingly', ' inadvertently', ' endorsing', ' appropriate', ' oneself'] matches ['learn'] is False
2024-06-13 20:22:54 root INFO     [' ', ' make', ' allow', ' be', ' require'] matches ['lose'] is False
2024-06-13 20:22:54 root INFO     [' ', ' maintain', ' remain', ' require', ' establish'] matches ['maintain'] is True
2024-06-13 20:22:54 root INFO     [' ', ' require', ' make', ' allow', ' manage'] matches ['manage'] is True
2024-06-13 20:22:54 root INFO     [' ', ' require', ' operate', ' establish', ' remain'] matches ['operate'] is True
2024-06-13 20:22:54 root INFO     [' unwittingly', ' inadvertently', ' appropriate', ' endorsing', ' oneself'] matches ['perform'] is False
2024-06-13 20:22:54 root INFO     [' ', ' allow', ' provide', ' require', ' prevent'] matches ['prevent'] is True
2024-06-13 20:22:54 root INFO     [' ', ' promote', ' encourage', ' require', ' bring'] matches ['promote'] is True
2024-06-13 20:22:54 root INFO     [' ', ' provide', ' establish', ' require', ' ensure'] matches ['protect'] is False
2024-06-13 20:22:54 root INFO     [' ', ' provide', ' require', ' make', ' bring'] matches ['provide'] is True
2024-06-13 20:22:54 root INFO     [' ', ' receive', ' be', ' require', ' remain'] matches ['receive'] is True
2024-06-13 20:22:54 root INFO     [' ', ' reduce', ' require', ' bring', ' encourage'] matches ['reduce'] is True
2024-06-13 20:22:54 root INFO     [' ', ' refer', ' require', ' be', ' relate'] matches ['refer'] is True
2024-06-13 20:22:54 root INFO     [' ', ' remain', ' require', ' be', ' allow'] matches ['remain'] is True
2024-06-13 20:22:54 root INFO     [' ', ' be', ' refer', ' remain', ' make'] matches ['remember'] is False
2024-06-13 20:22:54 root INFO     [' ', ' require', ' represent', ' provide', ' refer'] matches ['represent'] is True
2024-06-13 20:22:54 root INFO     [' require', ' ', ' enforce', ' ensure', ' provide'] matches ['require'] is True
2024-06-13 20:22:54 root INFO     [' ', ' be', ' make', ' require', ' allow'] matches ['seem'] is False
2024-06-13 20:22:54 root INFO     [' ', ' be', ' allow', ' require', ' remain'] matches ['sit'] is False
2024-06-13 20:22:54 root INFO     [' ', ' be', ' provide', ' make', ' require'] matches ['spend'] is False
2024-06-13 20:22:54 root INFO     [' ', ' teach', ' require', ' allow', ' make'] matches ['teach'] is True
2024-06-13 20:22:54 root INFO     [' unwittingly', ' inadvertently', '998', ' endorsing', ' oneself'] matches ['tell'] is False
2024-06-13 20:22:54 root INFO     [' ', ' require', ' establish', ' ensure', ' be'] matches ['understand'] is False
2024-06-13 20:22:54 root INFO     Ving - verb_inf,50,116,182

2024-06-13 20:22:54 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='verb_3pSg - Ved', prompt_templates=['When he {} something, something has been', 'When she {} something, something has been', 'When it {} something, something has been'], prompt_templates_zs=['When he {} something, something has been', 'When she {} something, something has been', 'When it {} something, something has been'], samples=[RelationSample(subject='adds', object=['added']), RelationSample(subject='agrees', object=['agreed']), RelationSample(subject='allows', object=['allowed']), RelationSample(subject='announces', object=['announced']), RelationSample(subject='appears', object=['appeared']), RelationSample(subject='applies', object=['applied']), RelationSample(subject='appoints', object=['appointed']), RelationSample(subject='asks', object=['asked']), RelationSample(subject='becomes', object=['became']), RelationSample(subject='believes', object=['believed']), RelationSample(subject='considers', object=['considered']), RelationSample(subject='consists', object=['consisted']), RelationSample(subject='contains', object=['contained']), RelationSample(subject='continues', object=['continued']), RelationSample(subject='creates', object=['created']), RelationSample(subject='decides', object=['decided']), RelationSample(subject='describes', object=['described']), RelationSample(subject='develops', object=['developed']), RelationSample(subject='establishes', object=['established']), RelationSample(subject='expects', object=['expected']), RelationSample(subject='fails', object=['failed']), RelationSample(subject='follows', object=['followed']), RelationSample(subject='happens', object=['happened']), RelationSample(subject='hears', object=['heard']), RelationSample(subject='includes', object=['included']), RelationSample(subject='intends', object=['intended']), RelationSample(subject='introduces', object=['introduced']), RelationSample(subject='involves', object=['involved']), RelationSample(subject='locates', object=['located']), RelationSample(subject='loses', object=['lost']), RelationSample(subject='manages', object=['managed']), RelationSample(subject='marries', object=['married']), RelationSample(subject='occurs', object=['occurred']), RelationSample(subject='operates', object=['operated']), RelationSample(subject='performs', object=['performed']), RelationSample(subject='proposes', object=['proposed']), RelationSample(subject='provides', object=['provided']), RelationSample(subject='publishes', object=['published']), RelationSample(subject='receives', object=['received']), RelationSample(subject='refers', object=['referred']), RelationSample(subject='relates', object=['related']), RelationSample(subject='remains', object=['remained']), RelationSample(subject='replaces', object=['replaced']), RelationSample(subject='represents', object=['represented']), RelationSample(subject='requires', object=['required']), RelationSample(subject='seems', object=['seemed']), RelationSample(subject='sends', object=['sent']), RelationSample(subject='spends', object=['spent']), RelationSample(subject='suggests', object=['suggested']), RelationSample(subject='tells', object=['told'])], _domain=None, _range=None)
2024-06-13 20:22:57 root INFO     starting operator prediction
2024-06-13 20:22:57 root INFO     using no context
2024-06-13 20:22:57 root INFO     [order_1_approx] starting weight calculation
2024-06-13 20:26:56 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 20:26:56 root INFO     [order_1_approx] weight calculation finished
2024-06-13 20:26:57 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-13 20:26:57 root INFO     [order_1_approx] starting weight calculation
2024-06-13 20:30:57 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 20:30:57 root INFO     [order_1_approx] weight calculation finished
2024-06-13 20:30:58 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-13 20:30:58 root INFO     [order_1_approx] starting weight calculation
2024-06-13 20:34:56 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 20:34:56 root INFO     [order_1_approx] weight calculation finished
2024-06-13 20:34:56 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-13 20:34:57 root INFO     [order_1_approx] starting weight calculation
2024-06-13 20:38:54 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 20:38:54 root INFO     [order_1_approx] weight calculation finished
2024-06-13 20:38:55 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-13 20:38:55 root INFO     [order_1_approx] starting weight calculation
2024-06-13 20:42:54 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 20:42:54 root INFO     [order_1_approx] weight calculation finished
2024-06-13 20:42:55 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-13 20:42:55 root INFO     [order_1_approx] starting weight calculation
2024-06-13 20:46:55 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 20:46:55 root INFO     [order_1_approx] weight calculation finished
2024-06-13 20:46:56 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-13 20:46:56 root INFO     [order_1_approx] starting weight calculation
2024-06-13 20:50:56 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 20:50:56 root INFO     [order_1_approx] weight calculation finished
2024-06-13 20:50:57 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-13 20:50:57 root INFO     [order_1_approx] starting weight calculation
2024-06-13 20:54:55 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 20:54:55 root INFO     [order_1_approx] weight calculation finished
2024-06-13 20:54:56 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-13 20:54:56 root INFO     total operator prediction time: 1919.2674057483673 seconds
2024-06-13 20:54:58 root INFO     [' ', ' appeared', ' created', ' has', ' added'] matches ['added'] is True
2024-06-13 20:54:58 root INFO     [' ', ' appeared', ' declared', ' (', ' appointed'] matches ['agreed'] is False
2024-06-13 20:54:58 root INFO     [' enables', ' ob', ' entails', ' imposes', ' ostensibly'] matches ['allowed'] is False
2024-06-13 20:54:58 root INFO     [' ', ' announced', ' appeared', ' declared', ' appointed'] matches ['announced'] is True
2024-06-13 20:54:58 root INFO     [' appeared', ' ', ' appears', ' occurred', ' created'] matches ['appeared'] is True
2024-06-13 20:54:58 root INFO     [' ', ' appeared', ' applied', ' represented', ' occurred'] matches ['applied'] is True
2024-06-13 20:54:58 root INFO     [' ', ' appointed', ' appeared', ' created', ' ('] matches ['appointed'] is True
2024-06-13 20:54:58 root INFO     [' ob', ' enables', ' entails', ' ostensibly', ' imposes'] matches ['asked'] is False
2024-06-13 20:54:58 root INFO     [' ', ' appeared', ' created', ' became', ' ('] matches ['became'] is True
2024-06-13 20:54:58 root INFO     [' ', ' believed', ' appeared', ' (', ' has'] matches ['believed'] is True
2024-06-13 20:54:58 root INFO     [' ', ' considered', ' appeared', ' (', ' has'] matches ['considered'] is True
2024-06-13 20:54:58 root INFO     [' ', ' constituted', ' appeared', ' consisted', ' is'] matches ['consisted'] is True
2024-06-13 20:54:58 root INFO     [' ', ' contained', ' contains', ' appeared', ' represented'] matches ['contained'] is True
2024-06-13 20:54:58 root INFO     [' ', ' appeared', ' created', ' continued', ' constituted'] matches ['continued'] is True
2024-06-13 20:54:58 root INFO     [' created', ' ', ' creates', ' caused', ' established'] matches ['created'] is True
2024-06-13 20:54:58 root INFO     [' ', ' declared', ' decided', ' appeared', ' appointed'] matches ['decided'] is True
2024-06-13 20:54:58 root INFO     [' ', ' described', ' represented', ' appeared', ' created'] matches ['described'] is True
2024-06-13 20:54:58 root INFO     [' ', ' created', ' established', ' appeared', ' ('] matches ['developed'] is False
2024-06-13 20:54:58 root INFO     [' established', ' ', ' created', ' constituted', ' appeared'] matches ['established'] is True
2024-06-13 20:54:58 root INFO     [' ', ' appeared', ' represented', ' expected', ' ('] matches ['expected'] is True
2024-06-13 20:54:58 root INFO     [' ', ' appeared', ' created', ' (', ' provided'] matches ['failed'] is False
2024-06-13 20:54:58 root INFO     [' ', ' appeared', ' created', ' caused', ' occurred'] matches ['followed'] is False
2024-06-13 20:54:58 root INFO     [' ', ' appeared', ' has', ' occurred', ' caused'] matches ['happened'] is False
2024-06-13 20:54:58 root INFO     [' ', ' has', ' appeared', ' heard', ' represented'] matches ['heard'] is True
2024-06-13 20:54:58 root INFO     [' ob', ' enables', ' entails', ' ostensibly', 'Emb'] matches ['included'] is False
2024-06-13 20:54:58 root INFO     [' ', ' represented', ' appeared', ' intended', ' ('] matches ['intended'] is True
2024-06-13 20:54:58 root INFO     [' ', ' introduced', ' presented', ' appeared', ' created'] matches ['introduced'] is True
2024-06-13 20:54:58 root INFO     [' ', ' involved', ' appeared', ' (', ' occurred'] matches ['involved'] is True
2024-06-13 20:54:58 root INFO     [' ', ' located', ' appeared', ' created', ' ('] matches ['located'] is True
2024-06-13 20:54:58 root INFO     [' ', ' appeared', ' (', ' created', ' has'] matches ['lost'] is False
2024-06-13 20:54:58 root INFO     [' ', ' appeared', ' created', ' represented', ' appointed'] matches ['managed'] is False
2024-06-13 20:54:58 root INFO     [' ', ' appointed', ' has', ' created', ' ('] matches ['married'] is False
2024-06-13 20:54:58 root INFO     [' ', ' occurred', ' appeared', ' caused', ' created'] matches ['occurred'] is True
2024-06-13 20:54:58 root INFO     [' ', ' appeared', ' occurred', ' established', ' represented'] matches ['operated'] is False
2024-06-13 20:54:58 root INFO     [' performed', ' ', ' appeared', ' represented', ' presented'] matches ['performed'] is True
2024-06-13 20:54:58 root INFO     [' ', ' proposed', ' provided', ' presented', ' prescribed'] matches ['proposed'] is True
2024-06-13 20:54:58 root INFO     [' provided', ' ', ' provides', ' presented', ' created'] matches ['provided'] is True
2024-06-13 20:54:58 root INFO     [' ', ' published', ' established', ' created', ' appeared'] matches ['published'] is True
2024-06-13 20:54:58 root INFO     [' ', ' received', ' appeared', ' created', ' has'] matches ['received'] is True
2024-06-13 20:54:58 root INFO     [' ', ' referred', ' represented', ' appeared', ' ('] matches ['referred'] is True
2024-06-13 20:54:58 root INFO     [' ', ' represented', ' appeared', ' referred', ' constituted'] matches ['related'] is False
2024-06-13 20:54:58 root INFO     [' ', ' appeared', ' remained', ' required', ' ('] matches ['remained'] is True
2024-06-13 20:54:58 root INFO     [' ', ' replaced', ' appeared', ' created', ' represented'] matches ['replaced'] is True
2024-06-13 20:54:58 root INFO     [' represented', ' ', ' represents', ' appeared', ' presented'] matches ['represented'] is True
2024-06-13 20:54:58 root INFO     [' ob', ' enables', ' entails', ' ostensibly', ' imposes'] matches ['required'] is False
2024-06-13 20:54:58 root INFO     [' ', ' appeared', ' appears', ' seemed', ' ('] matches ['seemed'] is True
2024-06-13 20:54:58 root INFO     [' ', ' appeared', ' sent', ' has', ' represented'] matches ['sent'] is True
2024-06-13 20:54:58 root INFO     [' ', ' created', ' appeared', ' provided', ' has'] matches ['spent'] is False
2024-06-13 20:54:58 root INFO     [' ', ' suggested', ' appeared', ' required', ' represented'] matches ['suggested'] is True
2024-06-13 20:54:58 root INFO     [' ', ' appeared', ' declared', ' has', ' stated'] matches ['told'] is False
2024-06-13 20:54:58 root INFO     verb_3pSg - Ved,50,150,198

2024-06-13 20:54:58 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='verb_Ving - 3pSg', prompt_templates=['When something is {}, it'], prompt_templates_zs=['When something is {}, it'], samples=[RelationSample(subject='adding', object=['adds']), RelationSample(subject='advertising', object=['advertises']), RelationSample(subject='allowing', object=['allows']), RelationSample(subject='appearing', object=['appears']), RelationSample(subject='applying', object=['applies']), RelationSample(subject='asking', object=['asks']), RelationSample(subject='becoming', object=['becomes']), RelationSample(subject='believing', object=['believes']), RelationSample(subject='considering', object=['considers']), RelationSample(subject='consisting', object=['consists']), RelationSample(subject='containing', object=['contains']), RelationSample(subject='continuing', object=['continues']), RelationSample(subject='creating', object=['creates']), RelationSample(subject='depending', object=['depends']), RelationSample(subject='describing', object=['describes']), RelationSample(subject='developing', object=['develops']), RelationSample(subject='discovering', object=['discovers']), RelationSample(subject='enabling', object=['enables']), RelationSample(subject='existing', object=['exists']), RelationSample(subject='explaining', object=['explains']), RelationSample(subject='following', object=['follows']), RelationSample(subject='happening', object=['happens']), RelationSample(subject='hearing', object=['hears']), RelationSample(subject='improving', object=['improves']), RelationSample(subject='including', object=['includes']), RelationSample(subject='involving', object=['involves']), RelationSample(subject='learning', object=['learns']), RelationSample(subject='losing', object=['loses']), RelationSample(subject='managing', object=['manages']), RelationSample(subject='occurring', object=['occurs']), RelationSample(subject='operating', object=['operates']), RelationSample(subject='performing', object=['performs']), RelationSample(subject='promoting', object=['promotes']), RelationSample(subject='providing', object=['provides']), RelationSample(subject='publishing', object=['publishes']), RelationSample(subject='receiving', object=['receives']), RelationSample(subject='reducing', object=['reduces']), RelationSample(subject='referring', object=['refers']), RelationSample(subject='relating', object=['relates']), RelationSample(subject='remaining', object=['remains']), RelationSample(subject='representing', object=['represents']), RelationSample(subject='requiring', object=['requires']), RelationSample(subject='seeming', object=['seems']), RelationSample(subject='sitting', object=['sits']), RelationSample(subject='spending', object=['spends']), RelationSample(subject='suggesting', object=['suggests']), RelationSample(subject='teaching', object=['teaches']), RelationSample(subject='telling', object=['tells']), RelationSample(subject='thanking', object=['thanks']), RelationSample(subject='understanding', object=['understands'])], _domain=None, _range=None)
2024-06-13 20:55:01 root INFO     starting operator prediction
2024-06-13 20:55:01 root INFO     using no context
2024-06-13 20:55:01 root INFO     [order_1_approx] starting weight calculation
2024-06-13 20:59:01 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 20:59:01 root INFO     [order_1_approx] weight calculation finished
2024-06-13 20:59:02 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-13 20:59:02 root INFO     [order_1_approx] starting weight calculation
2024-06-13 21:02:58 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 21:02:58 root INFO     [order_1_approx] weight calculation finished
2024-06-13 21:02:59 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-13 21:02:59 root INFO     [order_1_approx] starting weight calculation
2024-06-13 21:06:55 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 21:06:55 root INFO     [order_1_approx] weight calculation finished
2024-06-13 21:06:56 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-13 21:06:56 root INFO     [order_1_approx] starting weight calculation
2024-06-13 21:10:52 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 21:10:52 root INFO     [order_1_approx] weight calculation finished
2024-06-13 21:10:53 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-13 21:10:53 root INFO     [order_1_approx] starting weight calculation
2024-06-13 21:14:49 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 21:14:49 root INFO     [order_1_approx] weight calculation finished
2024-06-13 21:14:50 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-13 21:14:50 root INFO     [order_1_approx] starting weight calculation
2024-06-13 21:18:45 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 21:18:45 root INFO     [order_1_approx] weight calculation finished
2024-06-13 21:18:46 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-13 21:18:46 root INFO     [order_1_approx] starting weight calculation
2024-06-13 21:22:44 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 21:22:44 root INFO     [order_1_approx] weight calculation finished
2024-06-13 21:22:45 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-13 21:22:45 root INFO     [order_1_approx] starting weight calculation
2024-06-13 21:26:41 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 21:26:41 root INFO     [order_1_approx] weight calculation finished
2024-06-13 21:26:42 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-13 21:26:42 root INFO     total operator prediction time: 1901.401968717575 seconds
2024-06-13 21:26:44 root INFO     [' oneself', ' forgiveness', ' others', ' unfor', ' emotionally'] matches ['adds'] is False
2024-06-13 21:26:44 root INFO     [' oneself', ' forgiveness', ' unfor', ' others', ' emotionally'] matches ['advertises'] is False
2024-06-13 21:26:44 root INFO     [' ', ' is', ' appears', ' does', ' has'] matches ['allows'] is False
2024-06-13 21:26:44 root INFO     [' is', ' appears', ' ', ' occurs', ' has'] matches ['appears'] is True
2024-06-13 21:26:44 root INFO     [' ', ' applies', ' is', ' appears', ' has'] matches ['applies'] is True
2024-06-13 21:26:44 root INFO     [' oneself', ' forgiveness', ' unfor', ' others', ' emotionally'] matches ['asks'] is False
2024-06-13 21:26:44 root INFO     [' is', ' ', ' becomes', ' has', ' does'] matches ['becomes'] is True
2024-06-13 21:26:44 root INFO     [' believes', ' ', ' is', ' considers', ' has'] matches ['believes'] is True
2024-06-13 21:26:44 root INFO     [' is', ' ', ' considers', ' has', ' does'] matches ['considers'] is True
2024-06-13 21:26:44 root INFO     [' is', ' ', ' exists', ' occurs', ' has'] matches ['consists'] is False
2024-06-13 21:26:44 root INFO     [' oneself', ' forgiveness', ' unfor', ' others', ' emotionally'] matches ['contains'] is False
2024-06-13 21:26:44 root INFO     [' ', ' continues', ' is', ' occurs', ' has'] matches ['continues'] is True
2024-06-13 21:26:44 root INFO     [' creates', ' is', ' ', ' exists', ' produces'] matches ['creates'] is True
2024-06-13 21:26:44 root INFO     [' oneself', ' forgiveness', ' unfor', ' others', ' emotionally'] matches ['depends'] is False
2024-06-13 21:26:44 root INFO     [' ', ' is', ' describes', ' appears', ' has'] matches ['describes'] is True
2024-06-13 21:26:44 root INFO     [' develops', ' ', ' is', ' creates', ' does'] matches ['develops'] is True
2024-06-13 21:26:44 root INFO     [' ', ' is', ' discovers', ' develops', ' occurs'] matches ['discovers'] is True
2024-06-13 21:26:44 root INFO     [' ', ' is', ' enables', ' occurs', ' has'] matches ['enables'] is True
2024-06-13 21:26:44 root INFO     [' oneself', ' forgiveness', ' unfor', ' others', ' emotionally'] matches ['exists'] is False
2024-06-13 21:26:44 root INFO     [' ', ' is', ' explains', ' appears', ' understands'] matches ['explains'] is True
2024-06-13 21:26:44 root INFO     [' ', ' is', ' has', ' occurs', ' follows'] matches ['follows'] is True
2024-06-13 21:26:44 root INFO     [' is', ' happens', ' occurs', ' ', ' does'] matches ['happens'] is True
2024-06-13 21:26:44 root INFO     [' is', ' ', ' hears', ' has', ' does'] matches ['hears'] is True
2024-06-13 21:26:44 root INFO     [' is', ' ', ' improves', ' develops', ' has'] matches ['improves'] is True
2024-06-13 21:26:44 root INFO     [' oneself', ' forgiveness', ' unfor', ' others', ' emotionally'] matches ['includes'] is False
2024-06-13 21:26:44 root INFO     [' ', ' is', ' involves', ' occurs', ' has'] matches ['involves'] is True
2024-06-13 21:26:44 root INFO     [' oneself', ' forgiveness', ' unfor', ' others', ' emotionally'] matches ['learns'] is False
2024-06-13 21:26:44 root INFO     [' is', ' ', ' does', ' has', ' appears'] matches ['loses'] is False
2024-06-13 21:26:44 root INFO     [' ', ' is', ' has', ' does', ' develops'] matches ['manages'] is False
2024-06-13 21:26:44 root INFO     [' occurs', ' is', ' ', ' appears', ' happens'] matches ['occurs'] is True
2024-06-13 21:26:44 root INFO     [' operates', ' ', ' is', ' occurs', ' does'] matches ['operates'] is True
2024-06-13 21:26:44 root INFO     [' oneself', ' forgiveness', ' others', ' unfor', ' emotionally'] matches ['performs'] is False
2024-06-13 21:26:44 root INFO     [' ', ' is', ' promotes', ' develops', ' has'] matches ['promotes'] is True
2024-06-13 21:26:44 root INFO     [' provides', ' ', ' is', ' has', ' develops'] matches ['provides'] is True
2024-06-13 21:26:44 root INFO     [' publishes', ' is', ' ', ' creates', ' produces'] matches ['publishes'] is True
2024-06-13 21:26:44 root INFO     [' receives', ' is', ' ', ' has', ' accepts'] matches ['receives'] is True
2024-06-13 21:26:44 root INFO     [' ', ' is', ' has', ' appears', ' does'] matches ['reduces'] is False
2024-06-13 21:26:44 root INFO     [' ', ' is', ' refers', ' appears', ' has'] matches ['refers'] is True
2024-06-13 21:26:44 root INFO     [' ', ' is', ' occurs', ' has', ' involves'] matches ['relates'] is False
2024-06-13 21:26:44 root INFO     [' ', ' is', ' remains', ' has', ' appears'] matches ['remains'] is True
2024-06-13 21:26:44 root INFO     [' represents', ' is', ' ', ' appears', ' considers'] matches ['represents'] is True
2024-06-13 21:26:44 root INFO     [' ', ' is', ' requires', ' has', ' does'] matches ['requires'] is True
2024-06-13 21:26:44 root INFO     [' ', ' is', ' seems', ' appears', ' has'] matches ['seems'] is True
2024-06-13 21:26:44 root INFO     [' is', ' ', ' has', ' appears', ' exists'] matches ['sits'] is False
2024-06-13 21:26:44 root INFO     [' is', ' ', ' has', ' does', ' spends'] matches ['spends'] is True
2024-06-13 21:26:44 root INFO     [' ', ' is', ' suggests', ' appears', ' has'] matches ['suggests'] is True
2024-06-13 21:26:44 root INFO     [' ', ' is', ' teaches', ' does', ' has'] matches ['teaches'] is True
2024-06-13 21:26:44 root INFO     [' oneself', ' forgiveness', ' unfor', ' others', ' emotionally'] matches ['tells'] is False
2024-06-13 21:26:44 root INFO     [' ', ' is', ' has', ' does', ' considers'] matches ['thanks'] is False
2024-06-13 21:26:44 root INFO     [' understands', ' is', ' ', ' appears', ' has'] matches ['understands'] is True
2024-06-13 21:26:44 root INFO     verb_Ving - 3pSg,50,182,216

2024-06-13 21:26:45 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='noun - plural_irreg', prompt_templates=['The plural form of {} is', 'In the plural, {} is', '{} in its plural form is'], prompt_templates_zs=['The plural form of {} is', 'In the plural, {} is', '{} in its plural form is'], samples=[RelationSample(subject='ability', object=['abilities']), RelationSample(subject='academy', object=['academies']), RelationSample(subject='activity', object=['activities']), RelationSample(subject='agency', object=['agencies']), RelationSample(subject='analysis', object=['analyses']), RelationSample(subject='army', object=['armies']), RelationSample(subject='authority', object=['authorities']), RelationSample(subject='basis', object=['bases']), RelationSample(subject='business', object=['businesses']), RelationSample(subject='category', object=['categories']), RelationSample(subject='century', object=['centuries']), RelationSample(subject='child', object=['children']), RelationSample(subject='city', object=['cities']), RelationSample(subject='community', object=['communities']), RelationSample(subject='country', object=['countries']), RelationSample(subject='county', object=['counties']), RelationSample(subject='datum', object=['data']), RelationSample(subject='duty', object=['duties']), RelationSample(subject='economy', object=['economies']), RelationSample(subject='energy', object=['energies']), RelationSample(subject='entry', object=['entries']), RelationSample(subject='facility', object=['facilities']), RelationSample(subject='family', object=['families']), RelationSample(subject='formula', object=['formulae']), RelationSample(subject='history', object=['histories']), RelationSample(subject='industry', object=['industries']), RelationSample(subject='library', object=['libraries']), RelationSample(subject='life', object=['lives']), RelationSample(subject='loss', object=['losses']), RelationSample(subject='majority', object=['majorities']), RelationSample(subject='memory', object=['memories']), RelationSample(subject='opportunity', object=['opportunities']), RelationSample(subject='policy', object=['policies']), RelationSample(subject='property', object=['properties']), RelationSample(subject='responsibility', object=['responsibilities']), RelationSample(subject='safety', object=['safeties']), RelationSample(subject='secretary', object=['secretaries']), RelationSample(subject='security', object=['securities']), RelationSample(subject='series', object=['series']), RelationSample(subject='society', object=['societies']), RelationSample(subject='species', object=['species']), RelationSample(subject='story', object=['stories']), RelationSample(subject='strategy', object=['strategies']), RelationSample(subject='success', object=['successes']), RelationSample(subject='technology', object=['technologies']), RelationSample(subject='theory', object=['theories']), RelationSample(subject='university', object=['universities']), RelationSample(subject='variety', object=['varieties']), RelationSample(subject='wife', object=['wives']), RelationSample(subject='woman', object=['women'])], _domain=None, _range=None)
2024-06-13 21:26:47 root INFO     starting operator prediction
2024-06-13 21:26:47 root INFO     using no context
2024-06-13 21:26:47 root INFO     [order_1_approx] starting weight calculation
2024-06-13 21:30:47 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 21:30:47 root INFO     [order_1_approx] weight calculation finished
2024-06-13 21:30:47 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-13 21:30:47 root INFO     [order_1_approx] starting weight calculation
2024-06-13 21:34:43 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 21:34:43 root INFO     [order_1_approx] weight calculation finished
2024-06-13 21:34:44 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-13 21:34:44 root INFO     [order_1_approx] starting weight calculation
2024-06-13 21:38:41 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 21:38:41 root INFO     [order_1_approx] weight calculation finished
2024-06-13 21:38:42 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-13 21:38:42 root INFO     [order_1_approx] starting weight calculation
2024-06-13 21:42:40 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 21:42:40 root INFO     [order_1_approx] weight calculation finished
2024-06-13 21:42:41 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-13 21:42:41 root INFO     [order_1_approx] starting weight calculation
2024-06-13 21:46:37 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 21:46:37 root INFO     [order_1_approx] weight calculation finished
2024-06-13 21:46:37 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-13 21:46:38 root INFO     [order_1_approx] starting weight calculation
2024-06-13 21:50:34 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 21:50:34 root INFO     [order_1_approx] weight calculation finished
2024-06-13 21:50:35 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-13 21:50:35 root INFO     [order_1_approx] starting weight calculation
2024-06-13 21:54:33 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 21:54:33 root INFO     [order_1_approx] weight calculation finished
2024-06-13 21:54:34 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-13 21:54:34 root INFO     [order_1_approx] starting weight calculation
2024-06-13 21:58:32 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 21:58:32 root INFO     [order_1_approx] weight calculation finished
2024-06-13 21:58:33 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-13 21:58:33 root INFO     total operator prediction time: 1905.9696311950684 seconds
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', 'og'] matches ['abilities'] is False
2024-06-13 21:58:35 root INFO     [' ', '\n', ' armies', ' and', ' -'] matches ['academies'] is False
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', 'og'] matches ['activities'] is False
2024-06-13 21:58:35 root INFO     ['OG', 'go', ' Mon', 'GO', 'og'] matches ['agencies'] is False
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', 'og'] matches ['analyses'] is False
2024-06-13 21:58:35 root INFO     [' ', ' armies', ' military', '\n', ' and'] matches ['armies'] is True
2024-06-13 21:58:35 root INFO     [' authorities', ' ', '\n', ' governments', ' and'] matches ['authorities'] is True
2024-06-13 21:58:35 root INFO     [' ', '\n', ' and', ' (', ' -'] matches ['bases'] is False
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', ' GO'] matches ['businesses'] is False
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', 'og'] matches ['categories'] is False
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', 'og'] matches ['centuries'] is False
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', 'og'] matches ['children'] is False
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', 'og'] matches ['cities'] is False
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', 'og'] matches ['communities'] is False
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', 'og'] matches ['countries'] is False
2024-06-13 21:58:35 root INFO     [' ', ' counties', '\n', ' count', ' countries'] matches ['counties'] is True
2024-06-13 21:58:35 root INFO     [' ', '\n', ' and', ' (', ' data'] matches ['data'] is True
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', 'og'] matches ['duties'] is False
2024-06-13 21:58:35 root INFO     [' ', ' countries', ' economies', '\n', ' governments'] matches ['economies'] is True
2024-06-13 21:58:35 root INFO     ['OG', 'go', ' Mon', 'GO', 'og'] matches ['energies'] is False
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', 'og'] matches ['entries'] is False
2024-06-13 21:58:35 root INFO     [' ', '\n', ' facilities', ' (', ' -'] matches ['facilities'] is True
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', 'og'] matches ['families'] is False
2024-06-13 21:58:35 root INFO     [' ', '\n', ' and', ' (', ' -'] matches ['formulae'] is False
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', 'og'] matches ['histories'] is False
2024-06-13 21:58:35 root INFO     [' ', ' industries', '\n', ' countries', ' and'] matches ['industries'] is True
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', 'og'] matches ['libraries'] is False
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', 'og'] matches ['lives'] is False
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', 'og'] matches ['losses'] is False
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', 'og'] matches ['majorities'] is False
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', 'og'] matches ['memories'] is False
2024-06-13 21:58:35 root INFO     [' ', '\n', ' and', ' (', ' the'] matches ['opportunities'] is False
2024-06-13 21:58:35 root INFO     ['OG', 'go', ' Mon', 'GO', 'og'] matches ['policies'] is False
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', 'og'] matches ['properties'] is False
2024-06-13 21:58:35 root INFO     [' ', '\n', ' -', ' governments', ' ('] matches ['responsibilities'] is False
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', 'og'] matches ['safeties'] is False
2024-06-13 21:58:35 root INFO     [' ', '\n', ' and', ' -', ' the'] matches ['secretaries'] is False
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', 'og'] matches ['securities'] is False
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', 'og'] matches ['series'] is False
2024-06-13 21:58:35 root INFO     [' ', ' countries', '\n', ' societies', ' governments'] matches ['societies'] is True
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', 'og'] matches ['species'] is False
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', 'og'] matches ['stories'] is False
2024-06-13 21:58:35 root INFO     [' ', ' strategies', '\n', ' and', ' policies'] matches ['strategies'] is True
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', ' GO'] matches ['successes'] is False
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', 'og'] matches ['technologies'] is False
2024-06-13 21:58:35 root INFO     [' theories', ' ', '\n', ' military', ' the'] matches ['theories'] is True
2024-06-13 21:58:35 root INFO     [' ', '\n', ' universities', ' governments', ' ('] matches ['universities'] is True
2024-06-13 21:58:35 root INFO     [' ', '\n', ' countries', ' (', ' types'] matches ['varieties'] is False
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', ' GO'] matches ['wives'] is False
2024-06-13 21:58:35 root INFO     ['OG', ' Mon', 'go', 'GO', 'og'] matches ['women'] is False
2024-06-13 21:58:35 root INFO     noun - plural_irreg,50,193,255

2024-06-13 21:58:35 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='adj - superlative', prompt_templates=['If something is the most {}, it is', 'When something is the most {}, it is'], prompt_templates_zs=['If something is the most {}, it is', 'When something is the most {}, it is'], samples=[RelationSample(subject='able', object=['ablest']), RelationSample(subject='angry', object=['angriest']), RelationSample(subject='cheap', object=['cheapest']), RelationSample(subject='clever', object=['cleverest']), RelationSample(subject='costly', object=['costliest']), RelationSample(subject='cruel', object=['cruelest']), RelationSample(subject='cute', object=['cutest']), RelationSample(subject='dense', object=['densest']), RelationSample(subject='dumb', object=['dumbest']), RelationSample(subject='fierce', object=['fiercest']), RelationSample(subject='handy', object=['handiest']), RelationSample(subject='happy', object=['happiest']), RelationSample(subject='hardy', object=['hardiest']), RelationSample(subject='harsh', object=['harshest']), RelationSample(subject='healthy', object=['healthiest']), RelationSample(subject='hot', object=['hottest']), RelationSample(subject='huge', object=['hugest']), RelationSample(subject='hungry', object=['hungriest']), RelationSample(subject='lazy', object=['laziest']), RelationSample(subject='lengthy', object=['lengthiest']), RelationSample(subject='lucky', object=['luckiest']), RelationSample(subject='merry', object=['merriest']), RelationSample(subject='mild', object=['mildest']), RelationSample(subject='nasty', object=['nastiest']), RelationSample(subject='neat', object=['neatest']), RelationSample(subject='nice', object=['nicest']), RelationSample(subject='noisy', object=['noisiest']), RelationSample(subject='polite', object=['politest']), RelationSample(subject='proud', object=['proudest']), RelationSample(subject='pure', object=['purest']), RelationSample(subject='rare', object=['rarest']), RelationSample(subject='risky', object=['riskiest']), RelationSample(subject='rude', object=['rudest']), RelationSample(subject='sad', object=['saddest']), RelationSample(subject='scary', object=['scariest']), RelationSample(subject='sexy', object=['sexiest']), RelationSample(subject='shiny', object=['shiniest']), RelationSample(subject='strange', object=['strangest']), RelationSample(subject='strict', object=['strictest']), RelationSample(subject='strong', object=['strongest']), RelationSample(subject='subtle', object=['subtlest']), RelationSample(subject='sunny', object=['sunniest']), RelationSample(subject='tasty', object=['tastiest']), RelationSample(subject='tiny', object=['tiniest']), RelationSample(subject='tricky', object=['trickiest']), RelationSample(subject='ugly', object=['ugliest']), RelationSample(subject='vague', object=['vaguest']), RelationSample(subject='weak', object=['weakest']), RelationSample(subject='wealthy', object=['wealthiest']), RelationSample(subject='weird', object=['weirdest'])], _domain=None, _range=None)
2024-06-13 21:58:37 root INFO     starting operator prediction
2024-06-13 21:58:37 root INFO     using no context
2024-06-13 21:58:38 root INFO     [order_1_approx] starting weight calculation
2024-06-13 22:02:38 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 22:02:38 root INFO     [order_1_approx] weight calculation finished
2024-06-13 22:02:39 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-13 22:02:39 root INFO     [order_1_approx] starting weight calculation
2024-06-13 22:06:37 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 22:06:37 root INFO     [order_1_approx] weight calculation finished
2024-06-13 22:06:38 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-13 22:06:38 root INFO     [order_1_approx] starting weight calculation
2024-06-13 22:10:36 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 22:10:36 root INFO     [order_1_approx] weight calculation finished
2024-06-13 22:10:37 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-13 22:10:37 root INFO     [order_1_approx] starting weight calculation
2024-06-13 22:14:38 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 22:14:38 root INFO     [order_1_approx] weight calculation finished
2024-06-13 22:14:38 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-13 22:14:39 root INFO     [order_1_approx] starting weight calculation
2024-06-13 22:18:36 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 22:18:36 root INFO     [order_1_approx] weight calculation finished
2024-06-13 22:18:37 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-13 22:18:38 root INFO     [order_1_approx] starting weight calculation
2024-06-13 22:22:36 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 22:22:36 root INFO     [order_1_approx] weight calculation finished
2024-06-13 22:22:37 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-13 22:22:37 root INFO     [order_1_approx] starting weight calculation
2024-06-13 22:26:36 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 22:26:36 root INFO     [order_1_approx] weight calculation finished
2024-06-13 22:26:37 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-13 22:26:37 root INFO     [order_1_approx] starting weight calculation
2024-06-13 22:30:36 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 22:30:36 root INFO     [order_1_approx] weight calculation finished
2024-06-13 22:30:37 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-13 22:30:37 root INFO     total operator prediction time: 1919.126208305359 seconds
2024-06-13 22:30:39 root INFO     ['Shell', 'Ball', 'shell', 'Del', 'alo'] matches ['ablest'] is False
2024-06-13 22:30:39 root INFO     [' most', ' hars', ' hardest', ' ', ' f'] matches ['angriest'] is False
2024-06-13 22:30:39 root INFO     [' most', ' hardest', ' cheapest', ' least', ' '] matches ['cheapest'] is True
2024-06-13 22:30:39 root INFO     [' most', ' ', ' least', ' hardest', ' biggest'] matches ['cleverest'] is False
2024-06-13 22:30:39 root INFO     [' most', ' hardest', ' cost', ' least', ' '] matches ['costliest'] is True
2024-06-13 22:30:39 root INFO     [' cruel', ' most', ' hars', ' hardest', ' '] matches ['cruelest'] is True
2024-06-13 22:30:39 root INFO     [' most', ' cut', ' ', ' toughest', ' biggest'] matches ['cutest'] is True
2024-06-13 22:30:39 root INFO     [' dens', ' most', ' hardest', ' ', ' hars'] matches ['densest'] is True
2024-06-13 22:30:39 root INFO     [' most', ' dumb', ' hardest', ' ', ' toughest'] matches ['dumbest'] is True
2024-06-13 22:30:39 root INFO     [' most', ' fierce', ' hars', ' f', ' hardest'] matches ['fiercest'] is True
2024-06-13 22:30:39 root INFO     [' most', ' hand', ' hardest', ' ', ' hands'] matches ['handiest'] is True
2024-06-13 22:30:39 root INFO     ['Shell', 'Ball', 'shell', 'Del', 'sel'] matches ['happiest'] is False
2024-06-13 22:30:39 root INFO     [' hardest', ' most', ' hars', ' hard', ' toughest'] matches ['hardiest'] is True
2024-06-13 22:30:39 root INFO     [' hars', ' hardest', ' harsh', ' most', ' toughest'] matches ['harshest'] is True
2024-06-13 22:30:39 root INFO     ['Shell', 'Ball', 'shell', 'Del', 'ELD'] matches ['healthiest'] is False
2024-06-13 22:30:39 root INFO     ['Shell', 'Ball', 'shell', 'alo', 'Del'] matches ['hottest'] is False
2024-06-13 22:30:39 root INFO     ['Shell', 'Ball', 'shell', 'Del', 'alo'] matches ['hugest'] is False
2024-06-13 22:30:39 root INFO     [' most', ' hardest', ' ', ' f', ' greed'] matches ['hungriest'] is False
2024-06-13 22:30:39 root INFO     [' most', ' laz', ' least', ' ', ' hardest'] matches ['laziest'] is True
2024-06-13 22:30:39 root INFO     [' most', ' hardest', ' largest', ' biggest', ' '] matches ['lengthiest'] is False
2024-06-13 22:30:39 root INFO     [' most', ' luck', ' hardest', ' ', ' least'] matches ['luckiest'] is True
2024-06-13 22:30:39 root INFO     [' most', ' hardest', ' hars', ' ', ' least'] matches ['merriest'] is False
2024-06-13 22:30:39 root INFO     [' most', ' ', ' mild', ' hardest', ' hars'] matches ['mildest'] is True
2024-06-13 22:30:39 root INFO     [' most', ' hardest', ' toughest', ' least', ' '] matches ['neatest'] is False
2024-06-13 22:30:39 root INFO     ['Shell', 'Ball', 'shell', 'Del', 'zon'] matches ['nicest'] is False
2024-06-13 22:30:39 root INFO     [' most', ' no', ' ', ' hardest', ' biggest'] matches ['noisiest'] is True
2024-06-13 22:30:39 root INFO     [' most', ' ', ' least', ' hardest', ' biggest'] matches ['politest'] is False
2024-06-13 22:30:39 root INFO     [' most', ' proud', ' hardest', ' bold', ' '] matches ['proudest'] is True
2024-06-13 22:30:39 root INFO     ['Shell', 'Ball', 'shell', 'alo', 'Del'] matches ['purest'] is False
2024-06-13 22:30:39 root INFO     [' most', ' hardest', ' hars', ' rare', ' '] matches ['rarest'] is True
2024-06-13 22:30:39 root INFO     [' most', ' risk', ' hardest', ' hars', ' '] matches ['riskiest'] is True
2024-06-13 22:30:39 root INFO     [' most', ' ', ' hars', ' hardest', ' rude'] matches ['rudest'] is True
2024-06-13 22:30:39 root INFO     [' most', ' hardest', ' hars', ' ', ' sadd'] matches ['saddest'] is True
2024-06-13 22:30:39 root INFO     [' most', ' scare', ' hars', ' hardest', ' sc'] matches ['scariest'] is True
2024-06-13 22:30:39 root INFO     [' most', ' sex', ' least', ' ', ' hardest'] matches ['sexiest'] is True
2024-06-13 22:30:39 root INFO     [' most', ' sh', ' hardest', ' ', ' biggest'] matches ['shiniest'] is True
2024-06-13 22:30:39 root INFO     [' most', ' strang', ' hardest', ' hars', ' '] matches ['strangest'] is True
2024-06-13 22:30:39 root INFO     [' strict', ' most', ' hars', ' hardest', ' toughest'] matches ['strictest'] is True
2024-06-13 22:30:39 root INFO     ['Shell', 'Ball', 'shell', 'Del', 'alo'] matches ['strongest'] is False
2024-06-13 22:30:39 root INFO     [' most', ' ', ' subtle', ' slightest', ' least'] matches ['subtlest'] is True
2024-06-13 22:30:39 root INFO     [' most', ' funn', ' sun', ' hardest', ' '] matches ['sunniest'] is True
2024-06-13 22:30:39 root INFO     [' most', ' least', ' tast', ' hardest', ' toughest'] matches ['tastiest'] is True
2024-06-13 22:30:39 root INFO     ['Shell', 'Ball', 'shell', 'Del', 'Mel'] matches ['tiniest'] is False
2024-06-13 22:30:39 root INFO     [' most', ' trick', ' hardest', ' toughest', ' hars'] matches ['trickiest'] is True
2024-06-13 22:30:39 root INFO     [' most', ' ', ' vague', ' vain', ' v'] matches ['vaguest'] is True
2024-06-13 22:30:39 root INFO     ['Shell', 'Ball', 'shell', 'alo', 'Del'] matches ['weakest'] is False
2024-06-13 22:30:39 root INFO     [' most', ' hardest', ' wealthiest', ' ', ' biggest'] matches ['wealthiest'] is True
2024-06-13 22:30:39 root INFO     [' most', ' weird', ' ', ' hardest', ' least'] matches ['weirdest'] is True
2024-06-13 22:30:39 root INFO     adj - superlative,50,224,272

2024-06-13 22:30:39 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='verb+tion_irreg', prompt_templates=['To {} results in', 'To {} is to form a'], prompt_templates_zs=['To {} results in', 'To {} is to form a'], samples=[RelationSample(subject='accuse', object=['accusation']), RelationSample(subject='admire', object=['admiration']), RelationSample(subject='allege', object=['allegation']), RelationSample(subject='aspire', object=['aspiration']), RelationSample(subject='authorize', object=['authorization', 'authorisation']), RelationSample(subject='characterize', object=['characterization', 'characterisation']), RelationSample(subject='civilize', object=['civilization', 'civilisation']), RelationSample(subject='colonize', object=['colonization']), RelationSample(subject='compile', object=['compilation']), RelationSample(subject='compute', object=['computation']), RelationSample(subject='condense', object=['condensation']), RelationSample(subject='configure', object=['configuration']), RelationSample(subject='consult', object=['consulation']), RelationSample(subject='continue', object=['continuation']), RelationSample(subject='customize', object=['customization']), RelationSample(subject='declare', object=['declaration']), RelationSample(subject='degrade', object=['degradation']), RelationSample(subject='deprive', object=['deprivation']), RelationSample(subject='derive', object=['derivation']), RelationSample(subject='determine', object=['determination']), RelationSample(subject='examine', object=['examination']), RelationSample(subject='expire', object=['expiration']), RelationSample(subject='explore', object=['exploration']), RelationSample(subject='globalize', object=['globalization', 'globalisation']), RelationSample(subject='illumine', object=['illumination']), RelationSample(subject='imagine', object=['imagination']), RelationSample(subject='improvize', object=['improvization', 'improvisation']), RelationSample(subject='inspire', object=['inspiration']), RelationSample(subject='install', object=['installation', 'instalation']), RelationSample(subject='maximize', object=['maximization', 'maximisation']), RelationSample(subject='minimize', object=['minimization', 'minimisation']), RelationSample(subject='modernize', object=['modernization', 'modernisation']), RelationSample(subject='oblige', object=['obligation']), RelationSample(subject='observe', object=['observation']), RelationSample(subject='occupy', object=['occupation']), RelationSample(subject='optimize', object=['optimization', 'optimisation']), RelationSample(subject='organize', object=['organization']), RelationSample(subject='perspire', object=['perspiration']), RelationSample(subject='prepare', object=['preparation']), RelationSample(subject='privatize', object=['privatization', 'privatisation']), RelationSample(subject='randomize', object=['randomization', 'randomisation']), RelationSample(subject='realize', object=['realization', 'realisation']), RelationSample(subject='reorganize', object=['reorganization', 'reorganisation']), RelationSample(subject='restore', object=['restoration']), RelationSample(subject='specialize', object=['specialization', 'specialisation']), RelationSample(subject='stabilize', object=['stabilization']), RelationSample(subject='standardize', object=['standardization', 'standardisation']), RelationSample(subject='starve', object=['starvation']), RelationSample(subject='utilize', object=['utilization', 'utilisation']), RelationSample(subject='visualize', object=['visualization'])], _domain=None, _range=None)
2024-06-13 22:30:41 root INFO     starting operator prediction
2024-06-13 22:30:41 root INFO     using no context
2024-06-13 22:30:41 root INFO     [order_1_approx] starting weight calculation
2024-06-13 22:34:41 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 22:34:41 root INFO     [order_1_approx] weight calculation finished
2024-06-13 22:34:43 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-13 22:34:43 root INFO     [order_1_approx] starting weight calculation
2024-06-13 22:38:40 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 22:38:40 root INFO     [order_1_approx] weight calculation finished
2024-06-13 22:38:41 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-13 22:38:41 root INFO     [order_1_approx] starting weight calculation
2024-06-13 22:42:35 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 22:42:35 root INFO     [order_1_approx] weight calculation finished
2024-06-13 22:42:36 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-13 22:42:36 root INFO     [order_1_approx] starting weight calculation
2024-06-13 22:46:34 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 22:46:34 root INFO     [order_1_approx] weight calculation finished
2024-06-13 22:46:35 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-13 22:46:35 root INFO     [order_1_approx] starting weight calculation
2024-06-13 22:50:34 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 22:50:34 root INFO     [order_1_approx] weight calculation finished
2024-06-13 22:50:34 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-13 22:50:34 root INFO     [order_1_approx] starting weight calculation
2024-06-13 22:54:31 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 22:54:31 root INFO     [order_1_approx] weight calculation finished
2024-06-13 22:54:32 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-13 22:54:32 root INFO     [order_1_approx] starting weight calculation
2024-06-13 22:58:30 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 22:58:30 root INFO     [order_1_approx] weight calculation finished
2024-06-13 22:58:31 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-13 22:58:31 root INFO     [order_1_approx] starting weight calculation
2024-06-13 23:02:29 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 23:02:29 root INFO     [order_1_approx] weight calculation finished
2024-06-13 23:02:30 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-13 23:02:30 root INFO     total operator prediction time: 1908.7368750572205 seconds
2024-06-13 23:02:32 root INFO     [' ', '\n', ' determination', ' examination', ' investigation'] matches ['accusation'] is False
2024-06-13 23:02:32 root INFO     [' ', ' determination', ' examination', '\n', ' ('] matches ['admiration'] is False
2024-06-13 23:02:32 root INFO     [' ', ' determination', ' examination', '\n', ' ('] matches ['allegation'] is False
2024-06-13 23:02:32 root INFO     [' ', ' determination', '\n', ' (', ' examination'] matches ['aspiration'] is False
2024-06-13 23:02:32 root INFO     [' ', ' authorization', ' determination', '\n', ' administration'] matches ['authorization', 'authorisation'] is True
2024-06-13 23:02:32 root INFO     [' ', ' determination', ' characterization', '\n', ' analysis'] matches ['characterization', 'characterisation'] is True
2024-06-13 23:02:32 root INFO     [' ', '\n', ' determination', ' (', ' modern'] matches ['civilization', 'civilisation'] is False
2024-06-13 23:02:32 root INFO     [' ', ' determination', '\n', ' examination', ' ('] matches ['colonization'] is False
2024-06-13 23:02:32 root INFO     [' ', ' compilation', ' determination', '\n', ' evaluation'] matches ['compilation'] is True
2024-06-13 23:02:32 root INFO     [' computation', ' ', ' determination', ' computing', ' calculation'] matches ['computation'] is True
2024-06-13 23:02:32 root INFO     [' ', ' determination', ' cond', '\n', ' ('] matches ['condensation'] is True
2024-06-13 23:02:32 root INFO     [' ', ' determination', ' configuration', '\n', ' examination'] matches ['configuration'] is True
2024-06-13 23:02:32 root INFO     ['-', ' ref', ' reg', ' intellectual', ' soul'] matches ['continuation'] is False
2024-06-13 23:02:32 root INFO     [' ', ' customization', '\n', ' determination', ' modification'] matches ['customization'] is True
2024-06-13 23:02:32 root INFO     [' ', ' declaration', ' determination', ' definition', ' decl'] matches ['declaration'] is True
2024-06-13 23:02:32 root INFO     [' ', ' determination', '\n', ' de', ' degradation'] matches ['degradation'] is True
2024-06-13 23:02:32 root INFO     [' ', ' determination', ' de', ' elimination', ' dep'] matches ['deprivation'] is True
2024-06-13 23:02:32 root INFO     [' ', ' deriv', ' determination', ' differentiation', ' deduction'] matches ['derivation'] is True
2024-06-13 23:02:32 root INFO     [' determination', ' ', ' examination', ' evaluation', '\n'] matches ['determination'] is True
2024-06-13 23:02:32 root INFO     [' examination', ' ', ' determination', ' investigation', ' analysis'] matches ['examination'] is True
2024-06-13 23:02:32 root INFO     [' ', ' determination', ' exposition', '\n', ' expiration'] matches ['expiration'] is True
2024-06-13 23:02:32 root INFO     [' ', ' exploration', ' examination', ' investigation', ' discovery'] matches ['exploration'] is True
2024-06-13 23:02:32 root INFO     [' ', ' determination', '\n', ' definition', ' ('] matches ['globalization', 'globalisation'] is False
2024-06-13 23:02:32 root INFO     [' ', ' determination', ' examination', '\n', ' investigation'] matches ['illumination'] is False
2024-06-13 23:02:32 root INFO     [' ', ' determination', ' imagination', '\n', ' ('] matches ['imagination'] is True
2024-06-13 23:02:32 root INFO     [' ', '\n', ' determination', ' (', ' implementation'] matches ['improvization', 'improvisation'] is False
2024-06-13 23:02:32 root INFO     [' ', ' determination', ' inspiration', ' investigation', '\n'] matches ['inspiration'] is True
2024-06-13 23:02:32 root INFO     ['-', ' ref', ' reg', ' intellectual', ' soul'] matches ['installation', 'instalation'] is False
2024-06-13 23:02:32 root INFO     [' ', ' determination', ' optimization', ' maxim', '\n'] matches ['maximization', 'maximisation'] is True
2024-06-13 23:02:32 root INFO     [' ', ' determination', ' minim', ' optimization', '\n'] matches ['minimization', 'minimisation'] is True
2024-06-13 23:02:32 root INFO     [' ', ' modern', '\n', ' modernization', ' determination'] matches ['modernization', 'modernisation'] is True
2024-06-13 23:02:32 root INFO     [' ', ' determination', '\n', ' (', ' examination'] matches ['obligation'] is False
2024-06-13 23:02:32 root INFO     [' ', ' observation', ' examination', ' determination', ' investigation'] matches ['observation'] is True
2024-06-13 23:02:32 root INFO     [' ', ' determination', ' examination', ' occupation', '\n'] matches ['occupation'] is True
2024-06-13 23:02:32 root INFO     [' optimization', ' ', ' optim', ' determination', ' improvement'] matches ['optimization', 'optimisation'] is True
2024-06-13 23:02:32 root INFO     [' ', ' organization', ' determination', '\n', ' ('] matches ['organization'] is True
2024-06-13 23:02:32 root INFO     [' ', ' determination', '\n', ' (', ' examination'] matches ['perspiration'] is False
2024-06-13 23:02:32 root INFO     [' ', ' preparation', ' determination', ' examination', ' pre'] matches ['preparation'] is True
2024-06-13 23:02:32 root INFO     [' ', '\n', ' (', ' determination', ' analysis'] matches ['privatization', 'privatisation'] is False
2024-06-13 23:02:32 root INFO     [' ', ' determination', '\n', ' analysis', ' elimination'] matches ['randomization', 'randomisation'] is False
2024-06-13 23:02:32 root INFO     [' ', ' realization', ' determination', ' conclusion', '\n'] matches ['realization', 'realisation'] is True
2024-06-13 23:02:32 root INFO     [' ', ' organization', ' re', ' determination', ' reorgan'] matches ['reorganization', 'reorganisation'] is True
2024-06-13 23:02:32 root INFO     [' ', ' restoration', ' determination', ' re', '\n'] matches ['restoration'] is True
2024-06-13 23:02:32 root INFO     [' ', ' specialization', '\n', ' determination', ' specification'] matches ['specialization', 'specialisation'] is True
2024-06-13 23:02:32 root INFO     [' ', ' determination', '\n', ' examination', ' evaluation'] matches ['stabilization'] is False
2024-06-13 23:02:32 root INFO     [' ', ' standard', ' determination', '\n', ' ('] matches ['standardization', 'standardisation'] is True
2024-06-13 23:02:32 root INFO     [' ', ' determination', '\n', ' examination', ' ('] matches ['starvation'] is False
2024-06-13 23:02:32 root INFO     [' ', ' utilization', ' determination', '\n', ' examination'] matches ['utilization', 'utilisation'] is True
2024-06-13 23:02:32 root INFO     [' ', ' determination', ' examination', '\n', ' investigation'] matches ['visualization'] is False
2024-06-13 23:02:32 root INFO     verb+tion_irreg,50,255,290

2024-06-13 23:02:33 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='re+verb_reg', prompt_templates=['To {} again is to', 'To {} a second time is to', 'Repeating {} means'], prompt_templates_zs=['To {} again is to', 'To {} a second time is to', 'Repeating {} means'], samples=[RelationSample(subject='acquire', object=['reacquire']), RelationSample(subject='adjust', object=['readjust']), RelationSample(subject='appear', object=['reappear']), RelationSample(subject='apply', object=['reapply']), RelationSample(subject='appoint', object=['reappoint']), RelationSample(subject='arrange', object=['rearrange']), RelationSample(subject='assess', object=['reassess']), RelationSample(subject='assign', object=['reassign']), RelationSample(subject='assure', object=['reassure']), RelationSample(subject='calculate', object=['recalculate']), RelationSample(subject='cognize', object=['recognize']), RelationSample(subject='commend', object=['recommend']), RelationSample(subject='configure', object=['reconfigure']), RelationSample(subject='confirm', object=['reconfirm']), RelationSample(subject='connect', object=['reconnect']), RelationSample(subject='consider', object=['reconsider']), RelationSample(subject='create', object=['recreate']), RelationSample(subject='decorate', object=['redecorate']), RelationSample(subject='deem', object=['redeem']), RelationSample(subject='define', object=['redefine']), RelationSample(subject='develop', object=['redevelop']), RelationSample(subject='discover', object=['rediscover']), RelationSample(subject='distribute', object=['redistribute']), RelationSample(subject='emerge', object=['reemerge']), RelationSample(subject='engage', object=['reengage']), RelationSample(subject='establish', object=['reestablish']), RelationSample(subject='evaluate', object=['reevaluate']), RelationSample(subject='examine', object=['reexamine']), RelationSample(subject='generate', object=['regenerate']), RelationSample(subject='grow', object=['regrow']), RelationSample(subject='install', object=['reinstall']), RelationSample(subject='integrate', object=['reintegrate']), RelationSample(subject='interpret', object=['reinterpret']), RelationSample(subject='introduce', object=['reintroduce']), RelationSample(subject='invest', object=['reinvest']), RelationSample(subject='investigate', object=['reinvestigate']), RelationSample(subject='learn', object=['relearn']), RelationSample(subject='locate', object=['relocate']), RelationSample(subject='marry', object=['remarry']), RelationSample(subject='negotiate', object=['renegotiate']), RelationSample(subject='occur', object=['reoccur']), RelationSample(subject='organize', object=['reorganize', 'reorganise']), RelationSample(subject='publish', object=['republish']), RelationSample(subject='send', object=['resend']), RelationSample(subject='solve', object=['resolve']), RelationSample(subject='submit', object=['resubmit']), RelationSample(subject='tell', object=['retell']), RelationSample(subject='unite', object=['reunite']), RelationSample(subject='upload', object=['reupload']), RelationSample(subject='write', object=['rewrite'])], _domain=None, _range=None)
2024-06-13 23:02:35 root INFO     starting operator prediction
2024-06-13 23:02:35 root INFO     using no context
2024-06-13 23:02:35 root INFO     [order_1_approx] starting weight calculation
2024-06-13 23:06:33 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 23:06:33 root INFO     [order_1_approx] weight calculation finished
2024-06-13 23:06:34 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-13 23:06:34 root INFO     [order_1_approx] starting weight calculation
2024-06-13 23:10:31 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 23:10:31 root INFO     [order_1_approx] weight calculation finished
2024-06-13 23:10:32 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-13 23:10:32 root INFO     [order_1_approx] starting weight calculation
2024-06-13 23:14:28 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 23:14:28 root INFO     [order_1_approx] weight calculation finished
2024-06-13 23:14:29 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-13 23:14:29 root INFO     [order_1_approx] starting weight calculation
2024-06-13 23:18:27 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 23:18:27 root INFO     [order_1_approx] weight calculation finished
2024-06-13 23:18:28 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-13 23:18:28 root INFO     [order_1_approx] starting weight calculation
2024-06-13 23:22:26 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 23:22:26 root INFO     [order_1_approx] weight calculation finished
2024-06-13 23:22:26 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-13 23:22:27 root INFO     [order_1_approx] starting weight calculation
2024-06-13 23:26:23 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 23:26:23 root INFO     [order_1_approx] weight calculation finished
2024-06-13 23:26:23 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-13 23:26:24 root INFO     [order_1_approx] starting weight calculation
2024-06-13 23:30:20 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 23:30:20 root INFO     [order_1_approx] weight calculation finished
2024-06-13 23:30:21 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-13 23:30:21 root INFO     [order_1_approx] starting weight calculation
2024-06-13 23:34:18 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 23:34:18 root INFO     [order_1_approx] weight calculation finished
2024-06-13 23:34:19 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-13 23:34:19 root INFO     total operator prediction time: 1903.986162185669 seconds
2024-06-13 23:34:21 root INFO     [' re', ' rec', ' recon', ' ', ' recover'] matches ['reacquire'] is True
2024-06-13 23:34:21 root INFO     [' ind', ' ty', ' re', ' mat', ' one'] matches ['readjust'] is True
2024-06-13 23:34:21 root INFO     [' re', ' rec', ' recon', ' ', ' rep'] matches ['reappear'] is True
2024-06-13 23:34:21 root INFO     [' ind', ' ty', ' mat', 'ETF', ' one'] matches ['reapply'] is False
2024-06-13 23:34:21 root INFO     [' re', ' rec', ' ', ' rep', ' recon'] matches ['reappoint'] is True
2024-06-13 23:34:21 root INFO     [' re', ' rearr', ' ', ' rec', ' recon'] matches ['rearrange'] is True
2024-06-13 23:34:21 root INFO     [' re', ' rec', ' reass', ' rese', ' recon'] matches ['reassess'] is True
2024-06-13 23:34:21 root INFO     [' re', ' reass', ' rec', ' ', ' rem'] matches ['reassign'] is True
2024-06-13 23:34:21 root INFO     [' re', ' rec', ' recon', ' reass', ' '] matches ['reassure'] is True
2024-06-13 23:34:21 root INFO     [' re', ' rec', ' recon', ' ', ' res'] matches ['recalculate'] is True
2024-06-13 23:34:21 root INFO     [' re', ' rec', ' recon', ' recognize', ' '] matches ['recognize'] is True
2024-06-13 23:34:21 root INFO     [' re', ' rec', ' rem', ' ', ' recon'] matches ['recommend'] is True
2024-06-13 23:34:21 root INFO     [' re', ' recon', ' rec', ' ', ' ref'] matches ['reconfigure'] is True
2024-06-13 23:34:21 root INFO     [' re', ' recon', ' rec', ' confirm', ' '] matches ['reconfirm'] is True
2024-06-13 23:34:21 root INFO     [' ind', ' ty', 'ETF', ' mat', ' one'] matches ['reconnect'] is False
2024-06-13 23:34:21 root INFO     [' ind', ' ty', 'ETF', ' mat', ' one'] matches ['reconsider'] is False
2024-06-13 23:34:21 root INFO     [' ind', ' ty', ' re', 'ETF', ' mat'] matches ['recreate'] is True
2024-06-13 23:34:21 root INFO     [' re', ' rec', ' recon', ' ', ' red'] matches ['redecorate'] is True
2024-06-13 23:34:21 root INFO     [' re', ' rec', ' ', ' rem', ' recon'] matches ['redeem'] is True
2024-06-13 23:34:21 root INFO     [' ind', ' ty', 'ETF', ' one', ' mat'] matches ['redefine'] is False
2024-06-13 23:34:21 root INFO     [' ind', ' ty', 'ETF', ' mat', ' re'] matches ['redevelop'] is True
2024-06-13 23:34:21 root INFO     [' re', ' rec', ' recon', ' discover', ' recover'] matches ['rediscover'] is True
2024-06-13 23:34:21 root INFO     [' re', ' rec', ' ', ' res', ' recon'] matches ['redistribute'] is True
2024-06-13 23:34:21 root INFO     [' re', ' rec', ' ', ' rem', ' recon'] matches ['reemerge'] is True
2024-06-13 23:34:21 root INFO     [' re', ' ', ' rec', ' recon', ' rem'] matches ['reengage'] is True
2024-06-13 23:34:21 root INFO     [' ind', ' ty', 'ETF', ' re', ' mat'] matches ['reestablish'] is True
2024-06-13 23:34:21 root INFO     [' ind', ' ty', 'ETF', ' mat', ' re'] matches ['reevaluate'] is True
2024-06-13 23:34:21 root INFO     [' re', ' rec', ' recon', ' rem', ' ref'] matches ['reexamine'] is True
2024-06-13 23:34:21 root INFO     [' re', ' rec', ' ', ' recon', ' res'] matches ['regenerate'] is True
2024-06-13 23:34:21 root INFO     [' ind', ' ty', 'ETF', ' mat', ' one'] matches ['regrow'] is False
2024-06-13 23:34:21 root INFO     [' ind', ' ty', 'ETF', ' one', ' tip'] matches ['reinstall'] is False
2024-06-13 23:34:21 root INFO     [' re', ' rec', ' recon', ' resolve', ' res'] matches ['reintegrate'] is True
2024-06-13 23:34:21 root INFO     [' ind', ' ty', 'ETF', ' one', ' re'] matches ['reinterpret'] is True
2024-06-13 23:34:21 root INFO     [' re', ' rec', ' recon', ' res', ' '] matches ['reintroduce'] is True
2024-06-13 23:34:21 root INFO     [' ind', ' ty', 'ETF', ' one', ' re'] matches ['reinvest'] is True
2024-06-13 23:34:21 root INFO     [' re', ' rec', ' recon', ' resolve', ' res'] matches ['reinvestigate'] is True
2024-06-13 23:34:21 root INFO     [' ind', ' ty', ' re', 'ETF', ' mat'] matches ['relearn'] is True
2024-06-13 23:34:21 root INFO     [' re', ' rec', ' ', ' relocate', ' recon'] matches ['relocate'] is True
2024-06-13 23:34:21 root INFO     [' re', ' rem', ' rec', ' ', ' res'] matches ['remarry'] is True
2024-06-13 23:34:21 root INFO     [' re', ' rec', ' recon', ' ', ' resolve'] matches ['renegotiate'] is True
2024-06-13 23:34:21 root INFO     [' re', ' rec', ' ', ' recon', ' rem'] matches ['reoccur'] is True
2024-06-13 23:34:21 root INFO     [' re', ' reorgan', ' recon', ' rec', ' rearr'] matches ['reorganize', 'reorganise'] is True
2024-06-13 23:34:21 root INFO     [' re', ' rec', ' ', ' rep', ' recon'] matches ['republish'] is True
2024-06-13 23:34:21 root INFO     [' ind', ' ty', 'ETF', ' one', ' re'] matches ['resend'] is True
2024-06-13 23:34:21 root INFO     [' re', ' resolve', ' res', ' rec', ' recon'] matches ['resolve'] is True
2024-06-13 23:34:21 root INFO     [' ind', ' ty', 'ETF', ' mat', ' one'] matches ['resubmit'] is False
2024-06-13 23:34:21 root INFO     [' ind', ' ty', 'ETF', ' mat', ' tip'] matches ['retell'] is False
2024-06-13 23:34:21 root INFO     [' re', ' rec', ' ', ' rem', ' reun'] matches ['reunite'] is True
2024-06-13 23:34:21 root INFO     [' ind', ' ty', ' upt', 'ETF', ' one'] matches ['reupload'] is False
2024-06-13 23:34:21 root INFO     [' ind', ' ty', 'ETF', ' mat', ' one'] matches ['rewrite'] is False
2024-06-13 23:34:21 root INFO     re+verb_reg,50,295,300

2024-06-13 23:34:21 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='verb+ment_irreg', prompt_templates=['To {} results in a', 'To {} brings about a'], prompt_templates_zs=['To {} results in a', 'To {} brings about a'], samples=[RelationSample(subject='accomplish', object=['accomplishment']), RelationSample(subject='achieve', object=['achievement']), RelationSample(subject='acknowledge', object=['acknowledgement']), RelationSample(subject='adjust', object=['adjustment']), RelationSample(subject='advertise', object=['advertisement', 'advertizement']), RelationSample(subject='agree', object=['agreement']), RelationSample(subject='align', object=['alignment']), RelationSample(subject='amend', object=['amendment']), RelationSample(subject='amuse', object=['amusement']), RelationSample(subject='announce', object=['announcement']), RelationSample(subject='appoint', object=['appointment']), RelationSample(subject='arrange', object=['arrangement']), RelationSample(subject='assess', object=['assessment']), RelationSample(subject='assign', object=['assignment']), RelationSample(subject='commit', object=['commitment']), RelationSample(subject='detach', object=['detachment']), RelationSample(subject='develop', object=['development']), RelationSample(subject='disagree', object=['disagreement']), RelationSample(subject='disappoint', object=['disappointment']), RelationSample(subject='displace', object=['displacement']), RelationSample(subject='embarrass', object=['embarrassment']), RelationSample(subject='encourage', object=['encouragement']), RelationSample(subject='endorse', object=['endorsement']), RelationSample(subject='enforce', object=['enforcement']), RelationSample(subject='engage', object=['engagement']), RelationSample(subject='enhance', object=['enhancement']), RelationSample(subject='enjoy', object=['enjoyment']), RelationSample(subject='enlighten', object=['enlightenment']), RelationSample(subject='enroll', object=['enrollment', 'enrolment']), RelationSample(subject='entertain', object=['entertainment']), RelationSample(subject='entitle', object=['entitlement']), RelationSample(subject='equip', object=['equipment']), RelationSample(subject='establish', object=['establishment']), RelationSample(subject='excite', object=['excitement']), RelationSample(subject='fulfil', object=['fulfilment']), RelationSample(subject='fulfill', object=['fulfillment']), RelationSample(subject='harass', object=['harassment']), RelationSample(subject='impair', object=['impairment']), RelationSample(subject='improve', object=['improvement']), RelationSample(subject='infringe', object=['infringement']), RelationSample(subject='invest', object=['investment']), RelationSample(subject='involve', object=['involvement']), RelationSample(subject='manage', object=['management']), RelationSample(subject='punish', object=['punishment']), RelationSample(subject='redevelop', object=['redevelopment']), RelationSample(subject='reimburse', object=['reimbursement']), RelationSample(subject='reinforce', object=['reinforcement']), RelationSample(subject='replace', object=['replacement']), RelationSample(subject='require', object=['requirement']), RelationSample(subject='resent', object=['resentment'])], _domain=None, _range=None)
2024-06-13 23:34:23 root INFO     starting operator prediction
2024-06-13 23:34:23 root INFO     using no context
2024-06-13 23:34:24 root INFO     [order_1_approx] starting weight calculation
2024-06-13 23:38:22 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 23:38:22 root INFO     [order_1_approx] weight calculation finished
2024-06-13 23:38:23 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-13 23:38:23 root INFO     [order_1_approx] starting weight calculation
2024-06-13 23:42:22 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 23:42:22 root INFO     [order_1_approx] weight calculation finished
2024-06-13 23:42:22 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-13 23:42:22 root INFO     [order_1_approx] starting weight calculation
2024-06-13 23:46:21 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 23:46:21 root INFO     [order_1_approx] weight calculation finished
2024-06-13 23:46:22 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-13 23:46:22 root INFO     [order_1_approx] starting weight calculation
2024-06-13 23:50:21 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 23:50:21 root INFO     [order_1_approx] weight calculation finished
2024-06-13 23:50:21 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-13 23:50:22 root INFO     [order_1_approx] starting weight calculation
2024-06-13 23:54:21 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 23:54:21 root INFO     [order_1_approx] weight calculation finished
2024-06-13 23:54:22 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-13 23:54:22 root INFO     [order_1_approx] starting weight calculation
2024-06-13 23:58:22 root INFO     weight size is torch.Size([4096, 4096])
2024-06-13 23:58:22 root INFO     [order_1_approx] weight calculation finished
2024-06-13 23:58:23 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-13 23:58:23 root INFO     [order_1_approx] starting weight calculation
2024-06-14 00:02:20 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 00:02:20 root INFO     [order_1_approx] weight calculation finished
2024-06-14 00:02:21 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-14 00:02:21 root INFO     [order_1_approx] starting weight calculation
2024-06-14 00:06:20 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 00:06:20 root INFO     [order_1_approx] weight calculation finished
2024-06-14 00:06:21 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-14 00:06:21 root INFO     total operator prediction time: 1917.4863681793213 seconds
2024-06-14 00:06:23 root INFO     [' ', ' improvement', ' endorsement', '\n', ' amendment'] matches ['accomplishment'] is False
2024-06-14 00:06:23 root INFO     [' ', ' improvement', ' achievement', ' enactment', ' endorsement'] matches ['achievement'] is True
2024-06-14 00:06:23 root INFO     [' ', ' acknowledgement', ' endorsement', ' acknowledgment', ' approval'] matches ['acknowledgement'] is True
2024-06-14 00:06:23 root INFO     [' to', ' en', '-', ' mat', ' cos'] matches ['adjustment'] is False
2024-06-14 00:06:23 root INFO     [' ', ' endorsement', ' advertisement', '\n', ' approval'] matches ['advertisement', 'advertizement'] is True
2024-06-14 00:06:23 root INFO     [' to', ' en', '-', ' mat', ' cos'] matches ['agreement'] is False
2024-06-14 00:06:23 root INFO     [' to', ' en', '-', ' mat', ' cos'] matches ['alignment'] is False
2024-06-14 00:06:23 root INFO     [' amendment', ' ', ' endorsement', ' enactment', ' amend'] matches ['amendment'] is True
2024-06-14 00:06:23 root INFO     [' ', ' amendment', ' endorsement', '\n', ' recommendation'] matches ['amusement'] is False
2024-06-14 00:06:23 root INFO     [' ', ' announcement', ' endorsement', ' enactment', ' amendment'] matches ['announcement'] is True
2024-06-14 00:06:23 root INFO     [' ', ' appointment', ' approval', ' endorsement', ' recommendation'] matches ['appointment'] is True
2024-06-14 00:06:23 root INFO     [' ', ' arrangement', ' amendment', ' endorsement', ' agreement'] matches ['arrangement'] is True
2024-06-14 00:06:23 root INFO     [' assessment', ' ', ' evaluation', ' endorsement', ' appraisal'] matches ['assessment'] is True
2024-06-14 00:06:23 root INFO     [' ', ' assignment', ' assessment', ' endorsement', ' approval'] matches ['assignment'] is True
2024-06-14 00:06:23 root INFO     [' to', ' en', '-', ' mat', ' cos'] matches ['commitment'] is False
2024-06-14 00:06:23 root INFO     [' ', ' endorsement', ' assessment', ' amendment', ' adoption'] matches ['detachment'] is False
2024-06-14 00:06:23 root INFO     [' to', ' en', '-', ' mat', ' cos'] matches ['development'] is False
2024-06-14 00:06:23 root INFO     [' ', ' agreement', ' endorsement', ' approval', ' recommendation'] matches ['disagreement'] is False
2024-06-14 00:06:23 root INFO     [' ', ' approval', ' endorsement', ' improvement', ' recommendation'] matches ['disappointment'] is False
2024-06-14 00:06:23 root INFO     [' ', ' endorsement', '\n', ' adoption', ' involvement'] matches ['displacement'] is False
2024-06-14 00:06:23 root INFO     [' ', ' endorsement', ' en', ' improvement', ' enactment'] matches ['embarrassment'] is False
2024-06-14 00:06:23 root INFO     [' encouragement', ' ', ' endorsement', ' recommendation', ' encourage'] matches ['encouragement'] is True
2024-06-14 00:06:23 root INFO     [' endorsement', ' ', ' recommendation', ' approval', ' adoption'] matches ['endorsement'] is True
2024-06-14 00:06:23 root INFO     [' enforcement', ' enforce', ' ', ' enactment', ' endorsement'] matches ['enforcement'] is True
2024-06-14 00:06:23 root INFO     [' ', ' engagement', ' involvement', ' endorsement', ' enactment'] matches ['engagement'] is True
2024-06-14 00:06:23 root INFO     [' enhancement', ' ', ' improvement', ' endorsement', ' amendment'] matches ['enhancement'] is True
2024-06-14 00:06:23 root INFO     [' ', ' endorsement', ' improvement', ' appreciation', ' enjoyment'] matches ['enjoyment'] is True
2024-06-14 00:06:23 root INFO     [' ', ' endorsement', ' improvement', ' enactment', ' amendment'] matches ['enlightenment'] is False
2024-06-14 00:06:23 root INFO     [' ', ' endorsement', ' enactment', ' enrol', ' adoption'] matches ['enrollment', 'enrolment'] is True
2024-06-14 00:06:23 root INFO     [' ', ' endorsement', ' consideration', ' entertainment', '\n'] matches ['entertainment'] is True
2024-06-14 00:06:23 root INFO     [' ', ' endorsement', ' enactment', '\n', ' entitlement'] matches ['entitlement'] is True
2024-06-14 00:06:23 root INFO     [' ', ' endorsement', ' improvement', ' equipment', '\n'] matches ['equipment'] is True
2024-06-14 00:06:23 root INFO     [' en', ' to', '-', ' mat', ' est'] matches ['establishment'] is True
2024-06-14 00:06:23 root INFO     [' ', ' endorsement', ' approval', '\n', ' encouragement'] matches ['excitement'] is False
2024-06-14 00:06:23 root INFO     [' ', ' fulfil', ' endorsement', ' approval', ' enactment'] matches ['fulfilment'] is True
2024-06-14 00:06:23 root INFO     [' ', ' fulfil', ' fulfillment', ' endorsement', ' improvement'] matches ['fulfillment'] is True
2024-06-14 00:06:23 root INFO     [' ', ' endorsement', ' assessment', ' enactment', ' recommendation'] matches ['harassment'] is False
2024-06-14 00:06:23 root INFO     [' ', ' improvement', ' impairment', ' amendment', ' endorsement'] matches ['impairment'] is True
2024-06-14 00:06:23 root INFO     [' to', ' en', '-', ' mat', ' cos'] matches ['improvement'] is False
2024-06-14 00:06:23 root INFO     [' ', ' infringement', ' endorsement', ' amendment', ' improvement'] matches ['infringement'] is True
2024-06-14 00:06:23 root INFO     [' en', ' to', '-', ' mat', ' cos'] matches ['investment'] is False
2024-06-14 00:06:23 root INFO     [' ', ' involvement', ' endorsement', ' enactment', ' amendment'] matches ['involvement'] is True
2024-06-14 00:06:23 root INFO     [' ', ' management', ' amendment', ' administration', ' endorsement'] matches ['management'] is True
2024-06-14 00:06:23 root INFO     [' ', ' enforcement', ' amendment', ' endorsement', ' enactment'] matches ['punishment'] is False
2024-06-14 00:06:23 root INFO     [' development', ' ', ' redevelopment', ' improvement', ' adoption'] matches ['redevelopment'] is True
2024-06-14 00:06:23 root INFO     [' ', ' reimbursement', ' endorsement', '\n', ' recommendation'] matches ['reimbursement'] is True
2024-06-14 00:06:23 root INFO     [' ', ' endorsement', ' reinforcement', ' improvement', ' enforcement'] matches ['reinforcement'] is True
2024-06-14 00:06:23 root INFO     [' to', ' en', '-', ' mat', ' cos'] matches ['replacement'] is False
2024-06-14 00:06:23 root INFO     [' en', ' to', '-', ' mat', ' cos'] matches ['requirement'] is False
2024-06-14 00:06:23 root INFO     [' to', ' en', '-', ' mat', ' cos'] matches ['resentment'] is False
2024-06-14 00:06:23 root INFO     verb+ment_irreg,50,324,321

2024-06-14 00:06:23 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='noun+less_reg', prompt_templates=['Something without {} is', 'A thing missing {} is', 'Something that does not have {} is'], prompt_templates_zs=['Something without {} is', 'A thing missing {} is', 'Something that does not have {} is'], samples=[RelationSample(subject='arm', object=['armless']), RelationSample(subject='art', object=['artless']), RelationSample(subject='bone', object=['boneless']), RelationSample(subject='breath', object=['breathless']), RelationSample(subject='carbon', object=['carbonless']), RelationSample(subject='child', object=['childless']), RelationSample(subject='collar', object=['collarless']), RelationSample(subject='death', object=['deathless']), RelationSample(subject='defence', object=['defenceless', 'defenseless']), RelationSample(subject='effort', object=['effortless']), RelationSample(subject='ego', object=['egoless']), RelationSample(subject='emotion', object=['emotionless']), RelationSample(subject='error', object=['errorless']), RelationSample(subject='expression', object=['expressionless']), RelationSample(subject='faith', object=['faithless']), RelationSample(subject='friction', object=['frictionless']), RelationSample(subject='friend', object=['friendless']), RelationSample(subject='gender', object=['genderless']), RelationSample(subject='goal', object=['goalless']), RelationSample(subject='god', object=['godless']), RelationSample(subject='guile', object=['guileless']), RelationSample(subject='guilt', object=['guiltless']), RelationSample(subject='hair', object=['hairless']), RelationSample(subject='heart', object=['heartless']), RelationSample(subject='heir', object=['heirless']), RelationSample(subject='home', object=['homeless']), RelationSample(subject='law', object=['lawless']), RelationSample(subject='leg', object=['legless']), RelationSample(subject='life', object=['lifeless', 'liveless']), RelationSample(subject='luck', object=['luckless']), RelationSample(subject='meat', object=['meatless']), RelationSample(subject='mirth', object=['mirthless']), RelationSample(subject='money', object=['moneyless']), RelationSample(subject='odor', object=['odorless', 'odourless']), RelationSample(subject='passion', object=['passionless']), RelationSample(subject='path', object=['pathless']), RelationSample(subject='penny', object=['penniless']), RelationSample(subject='remorse', object=['remorseless']), RelationSample(subject='ruth', object=['ruthless']), RelationSample(subject='sensor', object=['sensorless']), RelationSample(subject='sleeve', object=['sleeveless']), RelationSample(subject='soul', object=['soulless']), RelationSample(subject='speech', object=['speechless']), RelationSample(subject='spine', object=['spineless']), RelationSample(subject='tact', object=['tactless']), RelationSample(subject='talent', object=['talentless']), RelationSample(subject='thought', object=['thoughtless']), RelationSample(subject='tooth', object=['toothless']), RelationSample(subject='window', object=['windowless']), RelationSample(subject='wit', object=['witless'])], _domain=None, _range=None)
2024-06-14 00:06:26 root INFO     starting operator prediction
2024-06-14 00:06:26 root INFO     using no context
2024-06-14 00:06:26 root INFO     [order_1_approx] starting weight calculation
2024-06-14 00:10:25 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 00:10:25 root INFO     [order_1_approx] weight calculation finished
2024-06-14 00:10:26 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-14 00:10:26 root INFO     [order_1_approx] starting weight calculation
2024-06-14 00:14:24 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 00:14:24 root INFO     [order_1_approx] weight calculation finished
2024-06-14 00:14:25 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-14 00:14:25 root INFO     [order_1_approx] starting weight calculation
2024-06-14 00:18:21 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 00:18:21 root INFO     [order_1_approx] weight calculation finished
2024-06-14 00:18:22 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-14 00:18:22 root INFO     [order_1_approx] starting weight calculation
2024-06-14 00:22:20 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 00:22:20 root INFO     [order_1_approx] weight calculation finished
2024-06-14 00:22:21 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-14 00:22:21 root INFO     [order_1_approx] starting weight calculation
2024-06-14 00:26:18 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 00:26:18 root INFO     [order_1_approx] weight calculation finished
2024-06-14 00:26:19 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-14 00:26:19 root INFO     [order_1_approx] starting weight calculation
2024-06-14 00:30:15 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 00:30:15 root INFO     [order_1_approx] weight calculation finished
2024-06-14 00:30:16 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-14 00:30:16 root INFO     [order_1_approx] starting weight calculation
2024-06-14 00:34:13 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 00:34:13 root INFO     [order_1_approx] weight calculation finished
2024-06-14 00:34:14 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-14 00:34:14 root INFO     [order_1_approx] starting weight calculation
2024-06-14 00:38:09 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 00:38:09 root INFO     [order_1_approx] weight calculation finished
2024-06-14 00:38:09 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-14 00:38:09 root INFO     total operator prediction time: 1903.871515750885 seconds
2024-06-14 00:38:12 root INFO     [' empty', ' no', 'ND', 'nar', ' OD'] matches ['armless'] is False
2024-06-14 00:38:12 root INFO     [' empty', 'ND', ' no', 'nar', ' OD'] matches ['artless'] is False
2024-06-14 00:38:12 root INFO     [' empty', 'ND', ' OD', ' no', ' don'] matches ['boneless'] is False
2024-06-14 00:38:12 root INFO     [' breath', ' bl', ' unf', ' un', ' without'] matches ['breathless'] is True
2024-06-14 00:38:12 root INFO     [' empty', 'ND', ' no', ' OD', ' don'] matches ['carbonless'] is False
2024-06-14 00:38:12 root INFO     [' empty', 'ND', ' no', ' OD', ' don'] matches ['childless'] is False
2024-06-14 00:38:12 root INFO     [' empty', ' no', 'ND', ' OD', ' don'] matches ['collarless'] is False
2024-06-14 00:38:12 root INFO     [' empty', 'ND', ' OD', ' no', ' don'] matches ['deathless'] is False
2024-06-14 00:38:12 root INFO     [' unf', ' un', ' innocent', ' non', ' und'] matches ['defenceless', 'defenseless'] is False
2024-06-14 00:38:12 root INFO     [' unf', ' un', ' less', ' ', ' non'] matches ['effortless'] is False
2024-06-14 00:38:12 root INFO     [' g', ' ', ' non', ' less', ' un'] matches ['egoless'] is False
2024-06-14 00:38:12 root INFO     [' un', ' emotion', ' unf', ' non', ' mindless'] matches ['emotionless'] is True
2024-06-14 00:38:12 root INFO     [' empty', 'ND', ' no', ' OD', ' er'] matches ['errorless'] is True
2024-06-14 00:38:12 root INFO     [' empty', 'ND', ' OD', ' no', 'nar'] matches ['expressionless'] is False
2024-06-14 00:38:12 root INFO     [' empty', 'ND', ' no', ' OD', ' don'] matches ['faithless'] is False
2024-06-14 00:38:12 root INFO     [' unf', ' fl', ' non', ' un', ' '] matches ['frictionless'] is False
2024-06-14 00:38:12 root INFO     [' empty', 'ND', ' no', ' OD', ' un'] matches ['friendless'] is False
2024-06-14 00:38:12 root INFO     [' empty', 'ND', ' OD', ' no', ' don'] matches ['genderless'] is False
2024-06-14 00:38:12 root INFO     [' empty', 'ND', ' no', ' OD', 'nar'] matches ['goalless'] is False
2024-06-14 00:38:12 root INFO     [' empty', 'ND', ' OD', ' no', ' don'] matches ['godless'] is False
2024-06-14 00:38:12 root INFO     [' un', ' innocent', ' unf', ' ', ' non'] matches ['guileless'] is False
2024-06-14 00:38:12 root INFO     [' innocent', ' guilt', ' un', ' ', ' unf'] matches ['guiltless'] is True
2024-06-14 00:38:12 root INFO     [' empty', 'ND', ' OD', ' no', 'nar'] matches ['hairless'] is False
2024-06-14 00:38:12 root INFO     [' empty', 'ND', ' OD', ' no', ' don'] matches ['heartless'] is False
2024-06-14 00:38:12 root INFO     [' ', ' unf', ' innocent', ' un', ' less'] matches ['heirless'] is False
2024-06-14 00:38:12 root INFO     [' empty', 'ND', ' OD', ' no', ' don'] matches ['homeless'] is False
2024-06-14 00:38:12 root INFO     [' empty', 'ND', ' no', ' OD', ' don'] matches ['lawless'] is False
2024-06-14 00:38:12 root INFO     [' empty', 'ND', ' no', ' OD', ' don'] matches ['legless'] is False
2024-06-14 00:38:12 root INFO     [' empty', 'ND', ' OD', ' no', ' don'] matches ['lifeless', 'liveless'] is False
2024-06-14 00:38:12 root INFO     [' empty', ' no', ' OD', ' un', 'ND'] matches ['luckless'] is False
2024-06-14 00:38:12 root INFO     [' empty', ' no', ' un', ' don', 'ND'] matches ['meatless'] is False
2024-06-14 00:38:12 root INFO     [' empty', 'ND', ' no', ' OD', ' don'] matches ['moneyless'] is False
2024-06-14 00:38:12 root INFO     ['ND', ' empty', ' OD', ' no', 'nar'] matches ['odorless', 'odourless'] is True
2024-06-14 00:38:12 root INFO     [' passion', ' unf', ' un', ' ', ' less'] matches ['passionless'] is True
2024-06-14 00:38:12 root INFO     [' empty', 'ND', ' OD', ' no', ' don'] matches ['pathless'] is False
2024-06-14 00:38:12 root INFO     [' un', ' non', ' penn', ' unf', ' p'] matches ['penniless'] is True
2024-06-14 00:38:12 root INFO     [' un', ' non', ' unf', ' less', ' '] matches ['remorseless'] is False
2024-06-14 00:38:12 root INFO     [' un', ' unf', ' ', ' non', ' less'] matches ['ruthless'] is False
2024-06-14 00:38:12 root INFO     [' non', ' un', ' senseless', ' s', ' less'] matches ['sensorless'] is False
2024-06-14 00:38:12 root INFO     [' non', ' less', ' unf', ' un', ' skin'] matches ['sleeveless'] is False
2024-06-14 00:38:12 root INFO     [' soul', ' sou', ' spirit', ' sin', ' lifeless'] matches ['soulless'] is True
2024-06-14 00:38:12 root INFO     [' empty', 'ND', ' OD', ' no', 'nar'] matches ['speechless'] is False
2024-06-14 00:38:12 root INFO     [' un', ' non', ' sp', ' unf', ' '] matches ['spineless'] is True
2024-06-14 00:38:12 root INFO     [' non', ' ', ' unt', ' unf', ' bland'] matches ['tactless'] is False
2024-06-14 00:38:12 root INFO     [' un', ' unf', ' ', ' talent', ' less'] matches ['talentless'] is True
2024-06-14 00:38:12 root INFO     [' empty', ' no', 'ND', ' OD', ' don'] matches ['thoughtless'] is False
2024-06-14 00:38:12 root INFO     [' tooth', ' non', ' un', ' unf', ' '] matches ['toothless'] is True
2024-06-14 00:38:12 root INFO     [' empty', 'ND', ' no', ' OD', ' don'] matches ['windowless'] is False
2024-06-14 00:38:12 root INFO     [' empty', ' no', ' un', ' OD', ' don'] matches ['witless'] is False
2024-06-14 00:38:12 root INFO     noun+less_reg,50,335,359

2024-06-14 00:38:12 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='over+adj_reg', prompt_templates=['If something is too {}, it is', 'When something is overly {}, it is', 'if it is too {}, then it is'], prompt_templates_zs=['If something is too {}, it is', 'When something is overly {}, it is', 'if it is too {}, then it is'], samples=[RelationSample(subject='ambitious', object=['overambitious', 'over-ambitious']), RelationSample(subject='arching', object=['overarching', 'over-arching']), RelationSample(subject='booked', object=['overbooked', 'over-booked']), RelationSample(subject='charged', object=['overcharged', 'over-charged']), RelationSample(subject='compensated', object=['overcompensated', 'over-compensated']), RelationSample(subject='confident', object=['overconfident', 'over-confident']), RelationSample(subject='cooked', object=['overcooked', 'over-cooked']), RelationSample(subject='crowded', object=['overcrowded', 'over-crowded']), RelationSample(subject='developed', object=['overdeveloped', 'over-developed']), RelationSample(subject='done', object=['overdone', 'over-done']), RelationSample(subject='dressed', object=['overdressed', 'over-dressed']), RelationSample(subject='enthusiastic', object=['overenthusiastic', 'over-enthusiastic']), RelationSample(subject='excited', object=['overexcited', 'over-excited']), RelationSample(subject='exposed', object=['overexposed', 'over-exposed']), RelationSample(subject='filled', object=['overfilled', 'over-filled']), RelationSample(subject='grown', object=['overgrown', 'over-grown']), RelationSample(subject='heard', object=['overheard', 'over-heard']), RelationSample(subject='heated', object=['overheated', 'over-heated']), RelationSample(subject='inflated', object=['overinflated', 'over-inflated']), RelationSample(subject='laid', object=['overlaid', 'over-laid']), RelationSample(subject='loaded', object=['overloaded', 'over-loaded']), RelationSample(subject='optimistic', object=['overoptimistic', 'over-optimistic']), RelationSample(subject='paid', object=['overpaid', 'over-paid']), RelationSample(subject='painted', object=['overpainted', 'over-painted']), RelationSample(subject='played', object=['overplayed', 'over-played']), RelationSample(subject='populated', object=['overpopulated', 'over-populated']), RelationSample(subject='powered', object=['overpowered', 'over-powered']), RelationSample(subject='protected', object=['overprotected', 'over-protected']), RelationSample(subject='protective', object=['overprotective', 'over-protective']), RelationSample(subject='qualified', object=['overqualified', 'over-qualified']), RelationSample(subject='represented', object=['overrepresented', 'over-represented']), RelationSample(subject='saturated', object=['oversaturated', 'over-saturated']), RelationSample(subject='shadowed', object=['overshadowed', 'over-shadowed']), RelationSample(subject='simplified', object=['oversimplified', 'over-simplified']), RelationSample(subject='sized', object=['oversized', 'over-sized']), RelationSample(subject='sold', object=['oversold', 'over-sold']), RelationSample(subject='spent', object=['overspent', 'over-spent']), RelationSample(subject='stated', object=['overstated', 'over-stated']), RelationSample(subject='stimulated', object=['overstimulated', 'over-stimulated']), RelationSample(subject='stocked', object=['overstocked', 'over-stocked']), RelationSample(subject='strained', object=['overstrained', 'over-strained']), RelationSample(subject='stressed', object=['overstressed', 'over-stressed']), RelationSample(subject='stretched', object=['overstretched', 'over-stretched']), RelationSample(subject='subscribed', object=['oversubscribed', 'over-subscribed']), RelationSample(subject='taken', object=['overtaken', 'over-taken']), RelationSample(subject='thrown', object=['overthrown', 'over-thrown']), RelationSample(subject='turned', object=['overturned', 'over-turned']), RelationSample(subject='used', object=['overused', 'over-used']), RelationSample(subject='written', object=['overwritten', 'over-written']), RelationSample(subject='zealous', object=['overzealous', 'over-zealous'])], _domain=None, _range=None)
2024-06-14 00:38:14 root INFO     starting operator prediction
2024-06-14 00:38:14 root INFO     using no context
2024-06-14 00:38:14 root INFO     [order_1_approx] starting weight calculation
2024-06-14 00:42:14 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 00:42:14 root INFO     [order_1_approx] weight calculation finished
2024-06-14 00:42:15 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-14 00:42:15 root INFO     [order_1_approx] starting weight calculation
2024-06-14 00:46:12 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 00:46:12 root INFO     [order_1_approx] weight calculation finished
2024-06-14 00:46:13 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-14 00:46:13 root INFO     [order_1_approx] starting weight calculation
2024-06-14 00:50:10 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 00:50:10 root INFO     [order_1_approx] weight calculation finished
2024-06-14 00:50:10 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-14 00:50:11 root INFO     [order_1_approx] starting weight calculation
2024-06-14 00:54:07 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 00:54:07 root INFO     [order_1_approx] weight calculation finished
2024-06-14 00:54:08 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-14 00:54:08 root INFO     [order_1_approx] starting weight calculation
2024-06-14 00:58:06 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 00:58:06 root INFO     [order_1_approx] weight calculation finished
2024-06-14 00:58:07 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-14 00:58:07 root INFO     [order_1_approx] starting weight calculation
2024-06-14 01:02:05 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 01:02:05 root INFO     [order_1_approx] weight calculation finished
2024-06-14 01:02:06 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-14 01:02:06 root INFO     [order_1_approx] starting weight calculation
2024-06-14 01:06:03 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 01:06:03 root INFO     [order_1_approx] weight calculation finished
2024-06-14 01:06:04 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-14 01:06:04 root INFO     [order_1_approx] starting weight calculation
2024-06-14 01:10:00 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 01:10:00 root INFO     [order_1_approx] weight calculation finished
2024-06-14 01:10:01 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-14 01:10:01 root INFO     total operator prediction time: 1906.607197523117 seconds
2024-06-14 01:10:03 root INFO     [' over', ' overd', ' overs', ' overly', ' overe'] matches ['overambitious', 'over-ambitious'] is True
2024-06-14 01:10:03 root INFO     ['orf', 'onel', 'oling', 'oller', 'oll'] matches ['overarching', 'over-arching'] is False
2024-06-14 01:10:03 root INFO     [' over', ' overs', ' overd', ' overc', ' overe'] matches ['overbooked', 'over-booked'] is True
2024-06-14 01:10:03 root INFO     ['orf', 'onel', 'oling', 'oll', 'oller'] matches ['overcharged', 'over-charged'] is False
2024-06-14 01:10:03 root INFO     [' over', ' overs', ' overd', ' overc', ' overe'] matches ['overcompensated', 'over-compensated'] is True
2024-06-14 01:10:03 root INFO     [' over', ' overd', ' overs', ' overc', ' overe'] matches ['overconfident', 'over-confident'] is True
2024-06-14 01:10:03 root INFO     ['orf', 'onel', 'ollen', 'oller', 'oling'] matches ['overcooked', 'over-cooked'] is False
2024-06-14 01:10:03 root INFO     [' over', ' overs', ' overd', ' overc', ' overe'] matches ['overcrowded', 'over-crowded'] is True
2024-06-14 01:10:03 root INFO     ['orf', 'onel', 'oling', 'oll', 'oller'] matches ['overdeveloped', 'over-developed'] is False
2024-06-14 01:10:03 root INFO     ['orf', 'onel', 'oling', 'oller', 'oll'] matches ['overdone', 'over-done'] is False
2024-06-14 01:10:03 root INFO     [' over', ' overd', ' overs', ' overe', ' overc'] matches ['overdressed', 'over-dressed'] is True
2024-06-14 01:10:03 root INFO     [' over', ' overs', ' overd', ' overe', ' overly'] matches ['overenthusiastic', 'over-enthusiastic'] is True
2024-06-14 01:10:03 root INFO     [' over', ' overs', ' overd', ' overe', ' overc'] matches ['overexcited', 'over-excited'] is True
2024-06-14 01:10:03 root INFO     [' over', ' overs', ' overe', ' overd', ' overc'] matches ['overexposed', 'over-exposed'] is True
2024-06-14 01:10:03 root INFO     ['onel', 'orf', 'oling', 'oll', 'ollen'] matches ['overfilled', 'over-filled'] is False
2024-06-14 01:10:03 root INFO     ['orf', 'onel', 'oller', 'oling', 'ollen'] matches ['overgrown', 'over-grown'] is False
2024-06-14 01:10:03 root INFO     ['onel', 'orf', 'oling', 'oller', 'oll'] matches ['overheard', 'over-heard'] is False
2024-06-14 01:10:03 root INFO     [' over', ' overs', ' overd', ' overc', ' overe'] matches ['overheated', 'over-heated'] is True
2024-06-14 01:10:03 root INFO     [' over', ' overd', ' overs', ' overc', ' overe'] matches ['overinflated', 'over-inflated'] is True
2024-06-14 01:10:03 root INFO     [' over', ' overs', ' overd', ' overc', ' overly'] matches ['overlaid', 'over-laid'] is True
2024-06-14 01:10:03 root INFO     ['onel', 'orf', 'oling', 'oller', 'oll'] matches ['overloaded', 'over-loaded'] is False
2024-06-14 01:10:03 root INFO     [' over', ' overs', ' overd', ' overly', ' overc'] matches ['overoptimistic', 'over-optimistic'] is True
2024-06-14 01:10:03 root INFO     ['onel', 'orf', 'oling', 'oll', 'oller'] matches ['overpaid', 'over-paid'] is False
2024-06-14 01:10:03 root INFO     ['onel', 'orf', 'oling', 'oll', 'oller'] matches ['overpainted', 'over-painted'] is False
2024-06-14 01:10:03 root INFO     ['orf', 'onel', 'oling', 'oller', 'oll'] matches ['overplayed', 'over-played'] is False
2024-06-14 01:10:03 root INFO     [' over', ' overs', ' overd', ' overc', ' overe'] matches ['overpopulated', 'over-populated'] is True
2024-06-14 01:10:03 root INFO     ['orf', 'onel', 'oling', 'oller', 'ollen'] matches ['overpowered', 'over-powered'] is False
2024-06-14 01:10:03 root INFO     ['orf', 'onel', 'oling', 'oller', 'ollen'] matches ['overprotected', 'over-protected'] is False
2024-06-14 01:10:03 root INFO     [' over', ' overd', ' overc', ' overs', ' overw'] matches ['overprotective', 'over-protective'] is True
2024-06-14 01:10:03 root INFO     ['onel', 'orf', 'oling', 'oller', 'oll'] matches ['overqualified', 'over-qualified'] is False
2024-06-14 01:10:03 root INFO     ['orf', 'onel', 'oling', 'oll', 'oller'] matches ['overrepresented', 'over-represented'] is False
2024-06-14 01:10:03 root INFO     [' overs', ' over', ' overd', ' overc', ' overe'] matches ['oversaturated', 'over-saturated'] is True
2024-06-14 01:10:03 root INFO     [' over', ' overd', ' overs', ' overc', ' overe'] matches ['overshadowed', 'over-shadowed'] is True
2024-06-14 01:10:03 root INFO     [' over', ' overs', ' overd', ' overc', ' overly'] matches ['oversimplified', 'over-simplified'] is True
2024-06-14 01:10:03 root INFO     ['onel', 'orf', 'oling', 'oller', 'oll'] matches ['oversized', 'over-sized'] is False
2024-06-14 01:10:03 root INFO     ['onel', 'orf', 'oling', 'ollen', 'oll'] matches ['oversold', 'over-sold'] is False
2024-06-14 01:10:03 root INFO     [' over', ' overs', ' overd', ' overc', ' overe'] matches ['overspent', 'over-spent'] is True
2024-06-14 01:10:03 root INFO     ['orf', 'onel', 'oller', 'oling', 'oll'] matches ['overstated', 'over-stated'] is False
2024-06-14 01:10:03 root INFO     [' overs', ' over', ' overd', ' overly', ' overe'] matches ['overstimulated', 'over-stimulated'] is True
2024-06-14 01:10:03 root INFO     [' over', ' overs', ' overd', ' overc', ' overe'] matches ['overstocked', 'over-stocked'] is True
2024-06-14 01:10:03 root INFO     [' over', ' overs', ' overd', ' overc', ' overe'] matches ['overstrained', 'over-strained'] is True
2024-06-14 01:10:03 root INFO     [' over', ' overs', ' overd', ' overe', ' overc'] matches ['overstressed', 'over-stressed'] is True
2024-06-14 01:10:03 root INFO     ['orf', 'onel', 'ollen', 'oling', 'oller'] matches ['overstretched', 'over-stretched'] is False
2024-06-14 01:10:03 root INFO     [' over', ' overs', ' overd', ' overc', ' overe'] matches ['oversubscribed', 'over-subscribed'] is True
2024-06-14 01:10:03 root INFO     [' over', ' overs', ' overd', ' overc', ' overe'] matches ['overtaken', 'over-taken'] is True
2024-06-14 01:10:03 root INFO     [' over', ' overs', ' overd', ' overc', ' overe'] matches ['overthrown', 'over-thrown'] is True
2024-06-14 01:10:03 root INFO     ['onel', 'orf', 'oling', 'oller', 'oll'] matches ['overturned', 'over-turned'] is False
2024-06-14 01:10:03 root INFO     ['onel', 'orf', 'oling', 'oller', 'oll'] matches ['overused', 'over-used'] is False
2024-06-14 01:10:03 root INFO     ['orf', 'onel', 'oller', 'oling', 'oll'] matches ['overwritten', 'over-written'] is False
2024-06-14 01:10:03 root INFO     [' over', ' overd', ' overs', ' overe', ' overc'] matches ['overzealous', 'over-zealous'] is True
2024-06-14 01:10:03 root INFO     over+adj_reg,50,362,382

2024-06-14 01:10:03 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='adj+ness_reg', prompt_templates=['The state of being {} is', 'The quality of being {} is', 'The noun form of {} is'], prompt_templates_zs=['The state of being {} is', 'The quality of being {} is', 'The noun form of {} is'], samples=[RelationSample(subject='amazing', object=['amazingness']), RelationSample(subject='attractive', object=['attractiveness']), RelationSample(subject='aware', object=['awareness']), RelationSample(subject='broken', object=['brokenness']), RelationSample(subject='careful', object=['carefulness']), RelationSample(subject='cheap', object=['cheapness']), RelationSample(subject='competitive', object=['competitiveness']), RelationSample(subject='connected', object=['connectedness']), RelationSample(subject='conscious', object=['consciousness']), RelationSample(subject='creative', object=['creativeness']), RelationSample(subject='dangerous', object=['dangerousness']), RelationSample(subject='devoted', object=['devotedness']), RelationSample(subject='directed', object=['directedness']), RelationSample(subject='distinct', object=['distinctness']), RelationSample(subject='distinctive', object=['distinctiveness']), RelationSample(subject='effective', object=['effectiveness']), RelationSample(subject='extensive', object=['extensiveness']), RelationSample(subject='fixed', object=['fixedness']), RelationSample(subject='foreign', object=['foreignness']), RelationSample(subject='happy', object=['happiness']), RelationSample(subject='helpful', object=['helpfulness']), RelationSample(subject='hidden', object=['hiddenness']), RelationSample(subject='hot', object=['hotness']), RelationSample(subject='huge', object=['hugeness']), RelationSample(subject='impressive', object=['impressiveness']), RelationSample(subject='innovative', object=['innovativeness']), RelationSample(subject='interesting', object=['interestingness']), RelationSample(subject='mad', object=['madness']), RelationSample(subject='marked', object=['markedness']), RelationSample(subject='massive', object=['massiveness']), RelationSample(subject='nice', object=['niceness']), RelationSample(subject='obvious', object=['obviousness']), RelationSample(subject='odd', object=['oddness']), RelationSample(subject='prepared', object=['preparedness']), RelationSample(subject='pure', object=['pureness']), RelationSample(subject='random', object=['randomness']), RelationSample(subject='rare', object=['rareness']), RelationSample(subject='reasonable', object=['reasonableness']), RelationSample(subject='related', object=['relatedness']), RelationSample(subject='righteous', object=['righteousness']), RelationSample(subject='sacred', object=['sacredness']), RelationSample(subject='sad', object=['sadness']), RelationSample(subject='same', object=['sameness']), RelationSample(subject='serious', object=['seriousness']), RelationSample(subject='situated', object=['situatedness']), RelationSample(subject='strange', object=['strangeness']), RelationSample(subject='unique', object=['uniqueness']), RelationSample(subject='useful', object=['usefulness']), RelationSample(subject='vast', object=['vastness']), RelationSample(subject='weak', object=['weakness'])], _domain=None, _range=None)
2024-06-14 01:10:06 root INFO     starting operator prediction
2024-06-14 01:10:06 root INFO     using no context
2024-06-14 01:10:06 root INFO     [order_1_approx] starting weight calculation
2024-06-14 01:14:04 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 01:14:04 root INFO     [order_1_approx] weight calculation finished
2024-06-14 01:14:05 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-14 01:14:05 root INFO     [order_1_approx] starting weight calculation
2024-06-14 01:18:03 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 01:18:03 root INFO     [order_1_approx] weight calculation finished
2024-06-14 01:18:04 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-14 01:18:04 root INFO     [order_1_approx] starting weight calculation
2024-06-14 01:22:02 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 01:22:02 root INFO     [order_1_approx] weight calculation finished
2024-06-14 01:22:03 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-14 01:22:03 root INFO     [order_1_approx] starting weight calculation
2024-06-14 01:26:01 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 01:26:01 root INFO     [order_1_approx] weight calculation finished
2024-06-14 01:26:02 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-14 01:26:02 root INFO     [order_1_approx] starting weight calculation
2024-06-14 01:29:59 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 01:29:59 root INFO     [order_1_approx] weight calculation finished
2024-06-14 01:30:00 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-14 01:30:00 root INFO     [order_1_approx] starting weight calculation
2024-06-14 01:33:58 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 01:33:58 root INFO     [order_1_approx] weight calculation finished
2024-06-14 01:33:59 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-14 01:33:59 root INFO     [order_1_approx] starting weight calculation
2024-06-14 01:37:58 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 01:37:58 root INFO     [order_1_approx] weight calculation finished
2024-06-14 01:37:58 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-14 01:37:59 root INFO     [order_1_approx] starting weight calculation
2024-06-14 01:41:56 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 01:41:56 root INFO     [order_1_approx] weight calculation finished
2024-06-14 01:41:57 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-14 01:41:57 root INFO     total operator prediction time: 1911.6363592147827 seconds
2024-06-14 01:42:00 root INFO     [' ', ' being', ' aw', ' (', '\n'] matches ['amazingness'] is False
2024-06-14 01:42:00 root INFO     [' attractiveness', ' ', ' att', ' (', ' being'] matches ['attractiveness'] is True
2024-06-14 01:42:00 root INFO     [' MB', ' mind', 'MB', ' Mill', 'BL'] matches ['awareness'] is False
2024-06-14 01:42:00 root INFO     [' MB', ' mind', 'MB', ' Mill', 'BL'] matches ['brokenness'] is False
2024-06-14 01:42:00 root INFO     [' ', ' being', ' (', ' a', '\n'] matches ['carefulness'] is False
2024-06-14 01:42:00 root INFO     [' ', ' being', ' (', ' un', ' worth'] matches ['cheapness'] is False
2024-06-14 01:42:00 root INFO     [' MB', 'MB', 'BL', ' Mill', ' mind'] matches ['competitiveness'] is False
2024-06-14 01:42:00 root INFO     [' MB', 'MB', 'BL', ' mind', ' Mill'] matches ['connectedness'] is False
2024-06-14 01:42:00 root INFO     [' MB', 'MB', 'BL', ' mind', ' Mill'] matches ['consciousness'] is False
2024-06-14 01:42:00 root INFO     [' creativity', ' ', ' being', ' creat', ' creative'] matches ['creativeness'] is True
2024-06-14 01:42:00 root INFO     [' ', ' being', ' (', ' worth', ' a'] matches ['dangerousness'] is False
2024-06-14 01:42:00 root INFO     [' ', ' being', '\n', ' un', ' self'] matches ['devotedness'] is False
2024-06-14 01:42:00 root INFO     [' MB', ' mind', 'MB', ' Mill', 'BL'] matches ['directedness'] is False
2024-06-14 01:42:00 root INFO     [' ', ' distinct', ' being', ' (', ' un'] matches ['distinctness'] is True
2024-06-14 01:42:00 root INFO     [' ', ' being', ' (', ' un', '\n'] matches ['distinctiveness'] is False
2024-06-14 01:42:00 root INFO     [' MB', 'MB', ' Mill', ' mind', 'BL'] matches ['effectiveness'] is False
2024-06-14 01:42:00 root INFO     [' ', ' being', ' (', '\n', ' un'] matches ['extensiveness'] is False
2024-06-14 01:42:00 root INFO     [' MB', 'MB', 'BL', ' mind', ' Mill'] matches ['fixedness'] is False
2024-06-14 01:42:00 root INFO     [' MB', 'MB', ' mind', 'BL', ' Mill'] matches ['foreignness'] is False
2024-06-14 01:42:00 root INFO     [' MB', 'MB', 'BL', ' mind', ' Mill'] matches ['happiness'] is False
2024-06-14 01:42:00 root INFO     [' ', ' helpful', ' being', ' usefulness', ' un'] matches ['helpfulness'] is True
2024-06-14 01:42:00 root INFO     [' MB', ' mind', 'MB', ' Mill', 'BL'] matches ['hiddenness'] is False
2024-06-14 01:42:00 root INFO     [' MB', 'MB', ' mind', 'BL', ' Mill'] matches ['hotness'] is False
2024-06-14 01:42:00 root INFO     [' MB', 'MB', 'BL', ' Mill', ' mind'] matches ['hugeness'] is False
2024-06-14 01:42:00 root INFO     [' ', ' (', ' being', ' un', '\n'] matches ['impressiveness'] is False
2024-06-14 01:42:00 root INFO     [' ', ' un', ' being', ' (', '\n'] matches ['innovativeness'] is False
2024-06-14 01:42:00 root INFO     [' MB', 'MB', 'BL', ' mind', ' Mill'] matches ['interestingness'] is False
2024-06-14 01:42:00 root INFO     [' MB', 'MB', ' mind', ' Mill', 'BL'] matches ['madness'] is False
2024-06-14 01:42:00 root INFO     [' MB', 'MB', 'BL', ' mind', ' Mill'] matches ['markedness'] is False
2024-06-14 01:42:00 root INFO     [' MB', 'MB', ' Mill', ' mind', 'BL'] matches ['massiveness'] is False
2024-06-14 01:42:00 root INFO     [' MB', 'MB', 'BL', ' Mill', ' mind'] matches ['niceness'] is False
2024-06-14 01:42:00 root INFO     [' ', ' un', ' (', ' being', '\n'] matches ['obviousness'] is False
2024-06-14 01:42:00 root INFO     [' MB', ' mind', 'MB', ' Mill', 'BL'] matches ['oddness'] is False
2024-06-14 01:42:00 root INFO     [' ', ' being', ' (', ' un', ' presence'] matches ['preparedness'] is False
2024-06-14 01:42:00 root INFO     [' MB', 'MB', ' mind', 'BL', ' Mill'] matches ['pureness'] is False
2024-06-14 01:42:00 root INFO     [' MB', ' mind', 'MB', ' Mill', 'BL'] matches ['randomness'] is False
2024-06-14 01:42:00 root INFO     [' ', ' being', ' (', '\n', ' a'] matches ['rareness'] is False
2024-06-14 01:42:00 root INFO     [' MB', 'MB', ' mind', 'BL', ' Mill'] matches ['reasonableness'] is False
2024-06-14 01:42:00 root INFO     [' MB', 'MB', ' mind', 'BL', ' Mill'] matches ['relatedness'] is False
2024-06-14 01:42:00 root INFO     [' MB', 'MB', ' mind', 'BL', ' Mill'] matches ['righteousness'] is False
2024-06-14 01:42:00 root INFO     [' ', ' (', ' worth', ' being', ' a'] matches ['sacredness'] is False
2024-06-14 01:42:00 root INFO     [' ', ' being', ' (', ' a', '\n'] matches ['sadness'] is False
2024-06-14 01:42:00 root INFO     [' MB', ' mind', 'MB', ' Mill', 'BL'] matches ['sameness'] is False
2024-06-14 01:42:00 root INFO     [' MB', ' mind', ' Mill', 'MB', 'BL'] matches ['seriousness'] is False
2024-06-14 01:42:00 root INFO     [' ', ' being', ' (', ' situation', ' un'] matches ['situatedness'] is False
2024-06-14 01:42:00 root INFO     [' ', ' interesting', ' strang', ' un', ' being'] matches ['strangeness'] is True
2024-06-14 01:42:00 root INFO     [' MB', 'MB', ' Mill', ' mind', 'BL'] matches ['uniqueness'] is False
2024-06-14 01:42:00 root INFO     [' usefulness', ' ', ' worth', ' being', ' un'] matches ['usefulness'] is True
2024-06-14 01:42:00 root INFO     [' ', ' being', ' (', '\n', ' a'] matches ['vastness'] is False
2024-06-14 01:42:00 root INFO     [' MB', ' mind', 'MB', ' Mill', 'BL'] matches ['weakness'] is False
2024-06-14 01:42:00 root INFO     adj+ness_reg,50,368,426

2024-06-14 01:42:00 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='un+adj_reg', prompt_templates=['The opposite of {} is', '{} contrasts with ', 'The inverse of {} is'], prompt_templates_zs=['The opposite of {} is', '{} contrasts with ', 'The inverse of {} is'], samples=[RelationSample(subject='able', object=['unable']), RelationSample(subject='acceptable', object=['unacceptable']), RelationSample(subject='affected', object=['unaffected']), RelationSample(subject='authorized', object=['unauthorized', 'unauthorised']), RelationSample(subject='available', object=['unavailable']), RelationSample(subject='avoidable', object=['unavoidable']), RelationSample(subject='aware', object=['unaware']), RelationSample(subject='believable', object=['unbelievable']), RelationSample(subject='biased', object=['unbiased']), RelationSample(subject='certain', object=['uncertain']), RelationSample(subject='changed', object=['unchanged']), RelationSample(subject='comfortable', object=['uncomfortable']), RelationSample(subject='conditional', object=['unconditional']), RelationSample(subject='conscious', object=['unconscious']), RelationSample(subject='controlled', object=['uncontrolled']), RelationSample(subject='desirable', object=['undesirable']), RelationSample(subject='employed', object=['unemployed']), RelationSample(subject='expected', object=['unexpected']), RelationSample(subject='finished', object=['unfinished']), RelationSample(subject='forgettable', object=['unforgettable']), RelationSample(subject='fortunate', object=['unfortunate']), RelationSample(subject='happy', object=['unhappy']), RelationSample(subject='healthy', object=['unhealthy']), RelationSample(subject='identified', object=['unidentified']), RelationSample(subject='intended', object=['unintended']), RelationSample(subject='interrupted', object=['uninterrupted']), RelationSample(subject='known', object=['unknown']), RelationSample(subject='lawful', object=['unlawful']), RelationSample(subject='lucky', object=['unlucky']), RelationSample(subject='noticed', object=['unnoticed']), RelationSample(subject='paid', object=['unpaid']), RelationSample(subject='pleasant', object=['unpleasant']), RelationSample(subject='popular', object=['unpopular']), RelationSample(subject='predictable', object=['unpredictable']), RelationSample(subject='published', object=['unpublished']), RelationSample(subject='realistic', object=['unrealistic']), RelationSample(subject='reasonable', object=['unreasonable']), RelationSample(subject='related', object=['unrelated']), RelationSample(subject='reliable', object=['unreliable']), RelationSample(subject='resolved', object=['unresolved']), RelationSample(subject='restricted', object=['unrestricted']), RelationSample(subject='satisfactory', object=['unsatisfactory']), RelationSample(subject='specified', object=['unspecified']), RelationSample(subject='successful', object=['unsuccessful']), RelationSample(subject='suitable', object=['unsuitable']), RelationSample(subject='sustainable', object=['unsustainable']), RelationSample(subject='used', object=['unused']), RelationSample(subject='usual', object=['unusual']), RelationSample(subject='veiled', object=['unveiled']), RelationSample(subject='wanted', object=['unwanted'])], _domain=None, _range=None)
2024-06-14 01:42:02 root INFO     starting operator prediction
2024-06-14 01:42:02 root INFO     using no context
2024-06-14 01:42:02 root INFO     [order_1_approx] starting weight calculation
2024-06-14 01:46:01 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 01:46:01 root INFO     [order_1_approx] weight calculation finished
2024-06-14 01:46:02 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-14 01:46:02 root INFO     [order_1_approx] starting weight calculation
2024-06-14 01:49:59 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 01:49:59 root INFO     [order_1_approx] weight calculation finished
2024-06-14 01:50:00 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-14 01:50:00 root INFO     [order_1_approx] starting weight calculation
2024-06-14 01:53:56 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 01:53:56 root INFO     [order_1_approx] weight calculation finished
2024-06-14 01:53:57 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-14 01:53:57 root INFO     [order_1_approx] starting weight calculation
2024-06-14 01:57:53 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 01:57:53 root INFO     [order_1_approx] weight calculation finished
2024-06-14 01:57:54 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-14 01:57:54 root INFO     [order_1_approx] starting weight calculation
2024-06-14 02:01:50 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 02:01:50 root INFO     [order_1_approx] weight calculation finished
2024-06-14 02:01:50 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-14 02:01:51 root INFO     [order_1_approx] starting weight calculation
2024-06-14 02:05:47 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 02:05:47 root INFO     [order_1_approx] weight calculation finished
2024-06-14 02:05:48 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-14 02:05:48 root INFO     [order_1_approx] starting weight calculation
2024-06-14 02:09:45 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 02:09:45 root INFO     [order_1_approx] weight calculation finished
2024-06-14 02:09:46 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-14 02:09:46 root INFO     [order_1_approx] starting weight calculation
2024-06-14 02:13:42 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 02:13:42 root INFO     [order_1_approx] weight calculation finished
2024-06-14 02:13:43 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-14 02:13:43 root INFO     total operator prediction time: 1900.96089053154 seconds
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', ' overl'] matches ['unable'] is False
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', 'off'] matches ['unacceptable'] is False
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', 'off'] matches ['unaffected'] is False
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', 'off'] matches ['unauthorized', 'unauthorised'] is False
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', 'off'] matches ['unavailable'] is False
2024-06-14 02:13:45 root INFO     [' un', ' non', ' ', ' not', ' impossible'] matches ['unavoidable'] is True
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', 'off'] matches ['unaware'] is False
2024-06-14 02:13:45 root INFO     [' un', ' not', ' non', ' ', ' unre'] matches ['unbelievable'] is True
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', 'off'] matches ['unbiased'] is False
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', 'off'] matches ['uncertain'] is False
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', 'off'] matches ['unchanged'] is False
2024-06-14 02:13:45 root INFO     [' un', ' ', ' not', ' non', ' uncon'] matches ['uncomfortable'] is True
2024-06-14 02:13:45 root INFO     [' non', ' un', ' ', ' not', ' unc'] matches ['unconditional'] is True
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', 'off'] matches ['unconscious'] is False
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', 'off'] matches ['uncontrolled'] is False
2024-06-14 02:13:45 root INFO     [' un', ' ', ' non', ' not', ' undesirable'] matches ['undesirable'] is True
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', ' overl'] matches ['unemployed'] is False
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', 'off'] matches ['unexpected'] is False
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', ' overl'] matches ['unfinished'] is False
2024-06-14 02:13:45 root INFO     [' un', ' ', ' not', ' non', ' unre'] matches ['unforgettable'] is True
2024-06-14 02:13:45 root INFO     [' un', ' non', ' not', ' ', ' unf'] matches ['unfortunate'] is True
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', 'off'] matches ['unhappy'] is False
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', 'off'] matches ['unhealthy'] is False
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', ' overl'] matches ['unidentified'] is False
2024-06-14 02:13:45 root INFO     [' un', ' not', ' non', ' ', ' unexpected'] matches ['unintended'] is True
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', ' overl'] matches ['uninterrupted'] is False
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', 'off'] matches ['unknown'] is False
2024-06-14 02:13:45 root INFO     [' un', ' ', ' not', ' non', ' unexpected'] matches ['unlawful'] is True
2024-06-14 02:13:45 root INFO     [' un', ' not', ' ', ' non', ' unf'] matches ['unlucky'] is True
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', 'off'] matches ['unnoticed'] is False
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', 'off'] matches ['unpaid'] is False
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', 'off'] matches ['unpleasant'] is False
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', 'off'] matches ['unpopular'] is False
2024-06-14 02:13:45 root INFO     [' un', ' unpredictable', ' ', ' unexpected', ' non'] matches ['unpredictable'] is True
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', ' overl'] matches ['unpublished'] is False
2024-06-14 02:13:45 root INFO     [' un', ' non', ' ', ' not', ' unrealistic'] matches ['unrealistic'] is True
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', 'off'] matches ['unreasonable'] is False
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', 'off'] matches ['unrelated'] is False
2024-06-14 02:13:45 root INFO     [' unreliable', ' un', ' unre', ' non', ' '] matches ['unreliable'] is True
2024-06-14 02:13:45 root INFO     [' un', ' ', ' not', ' unre', ' non'] matches ['unresolved'] is True
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', 'off'] matches ['unrestricted'] is False
2024-06-14 02:13:45 root INFO     [' un', ' ', ' not', ' non', ' unsatisf'] matches ['unsatisfactory'] is True
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', 'off'] matches ['unspecified'] is False
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', 'off'] matches ['unsuccessful'] is False
2024-06-14 02:13:45 root INFO     [' un', ' not', ' non', ' ', ' unsu'] matches ['unsuitable'] is True
2024-06-14 02:13:45 root INFO     [' un', ' non', ' ', ' not', ' unre'] matches ['unsustainable'] is True
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', ' overl'] matches ['unused'] is False
2024-06-14 02:13:45 root INFO     ['det', ' off', 'Off', 'out', 'off'] matches ['unusual'] is False
2024-06-14 02:13:45 root INFO     [' un', ' ', ' not', ' non', ' unre'] matches ['unveiled'] is True
2024-06-14 02:13:45 root INFO     [' un', ' ', ' not', ' unexpected', ' non'] matches ['unwanted'] is True
2024-06-14 02:13:45 root INFO     un+adj_reg,50,387,457

2024-06-14 02:13:45 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='adj+ly_reg', prompt_templates=['The adjective form of {} is', 'The adjective derived from {} is', 'The descriptive form of {} is'], prompt_templates_zs=['The adjective form of {} is', 'The adjective derived from {} is', 'The descriptive form of {} is'], samples=[RelationSample(subject='according', object=['accordingly']), RelationSample(subject='actual', object=['actually']), RelationSample(subject='additional', object=['additionally']), RelationSample(subject='apparent', object=['apparently']), RelationSample(subject='beautiful', object=['beautifully']), RelationSample(subject='clinical', object=['clinically']), RelationSample(subject='creative', object=['creatively']), RelationSample(subject='critical', object=['critically']), RelationSample(subject='cultural', object=['culturally']), RelationSample(subject='decided', object=['decidedly']), RelationSample(subject='different', object=['differently']), RelationSample(subject='digital', object=['digitally']), RelationSample(subject='effective', object=['effectively']), RelationSample(subject='environmental', object=['environmentally']), RelationSample(subject='extensive', object=['extensively']), RelationSample(subject='famous', object=['famously']), RelationSample(subject='federal', object=['federally']), RelationSample(subject='financial', object=['financially']), RelationSample(subject='global', object=['globally']), RelationSample(subject='historical', object=['historically']), RelationSample(subject='huge', object=['hugely']), RelationSample(subject='immediate', object=['immediately']), RelationSample(subject='important', object=['importantly']), RelationSample(subject='increasing', object=['increasingly']), RelationSample(subject='interesting', object=['interestingly']), RelationSample(subject='internal', object=['internally']), RelationSample(subject='international', object=['internationally']), RelationSample(subject='legal', object=['legally']), RelationSample(subject='mental', object=['mentally']), RelationSample(subject='nice', object=['nicely']), RelationSample(subject='obvious', object=['obviously']), RelationSample(subject='physical', object=['physically']), RelationSample(subject='political', object=['politically']), RelationSample(subject='popular', object=['popularly']), RelationSample(subject='practical', object=['practically']), RelationSample(subject='previous', object=['previously']), RelationSample(subject='rare', object=['rarely']), RelationSample(subject='regional', object=['regionally']), RelationSample(subject='serious', object=['seriously']), RelationSample(subject='sexual', object=['sexually']), RelationSample(subject='significant', object=['significantly']), RelationSample(subject='similar', object=['similarly']), RelationSample(subject='strong', object=['strongly']), RelationSample(subject='subsequent', object=['subsequently']), RelationSample(subject='successful', object=['successfully']), RelationSample(subject='traditional', object=['traditionally']), RelationSample(subject='typical', object=['typically']), RelationSample(subject='unique', object=['uniquely']), RelationSample(subject='virtual', object=['virtually']), RelationSample(subject='visual', object=['visually'])], _domain=None, _range=None)
2024-06-14 02:13:47 root INFO     starting operator prediction
2024-06-14 02:13:47 root INFO     using no context
2024-06-14 02:13:48 root INFO     [order_1_approx] starting weight calculation
2024-06-14 02:17:45 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 02:17:45 root INFO     [order_1_approx] weight calculation finished
2024-06-14 02:17:46 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-14 02:17:46 root INFO     [order_1_approx] starting weight calculation
2024-06-14 02:21:42 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 02:21:42 root INFO     [order_1_approx] weight calculation finished
2024-06-14 02:21:43 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-14 02:21:43 root INFO     [order_1_approx] starting weight calculation
2024-06-14 02:25:40 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 02:25:40 root INFO     [order_1_approx] weight calculation finished
2024-06-14 02:25:41 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-14 02:25:41 root INFO     [order_1_approx] starting weight calculation
2024-06-14 02:29:39 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 02:29:39 root INFO     [order_1_approx] weight calculation finished
2024-06-14 02:29:39 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-14 02:29:40 root INFO     [order_1_approx] starting weight calculation
2024-06-14 02:33:38 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 02:33:38 root INFO     [order_1_approx] weight calculation finished
2024-06-14 02:33:38 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-14 02:33:38 root INFO     [order_1_approx] starting weight calculation
2024-06-14 02:37:36 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 02:37:36 root INFO     [order_1_approx] weight calculation finished
2024-06-14 02:37:37 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-14 02:37:37 root INFO     [order_1_approx] starting weight calculation
2024-06-14 02:41:36 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 02:41:36 root INFO     [order_1_approx] weight calculation finished
2024-06-14 02:41:36 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-14 02:41:37 root INFO     [order_1_approx] starting weight calculation
2024-06-14 02:45:35 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 02:45:35 root INFO     [order_1_approx] weight calculation finished
2024-06-14 02:45:35 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-14 02:45:35 root INFO     total operator prediction time: 1907.8779187202454 seconds
2024-06-14 02:45:38 root INFO     [' viewpoints', ' international', ' views', ' Ug', ' guild'] matches ['accordingly'] is False
2024-06-14 02:45:38 root INFO     [' viewpoints', ' international', ' guild', ' public', ' views'] matches ['actually'] is False
2024-06-14 02:45:38 root INFO     [' additionally', ' ', ' in', ' furthermore', ' importantly'] matches ['additionally'] is True
2024-06-14 02:45:38 root INFO     [' ', ' interestingly', ' apparently', ' obviously', ' evidently'] matches ['apparently'] is True
2024-06-14 02:45:38 root INFO     [' interestingly', ' ', ' importantly', ' certainly', ' effectively'] matches ['beautifully'] is False
2024-06-14 02:45:38 root INFO     [' international', ' viewpoints', ' guild', ' public', ' worldview'] matches ['clinically'] is False
2024-06-14 02:45:38 root INFO     [' creatively', ' interestingly', ' effectively', ' ', ' importantly'] matches ['creatively'] is True
2024-06-14 02:45:38 root INFO     [' viewpoints', ' international', ' guild', ' worldview', ' views'] matches ['critically'] is False
2024-06-14 02:45:38 root INFO     [' international', ' viewpoints', ' worldview', ' guild', ' public'] matches ['culturally'] is False
2024-06-14 02:45:38 root INFO     [' ', ' importantly', ' definitely', ' certainly', ' in'] matches ['decidedly'] is False
2024-06-14 02:45:38 root INFO     [' viewpoints', ' international', ' guild', ' views', ' Ug'] matches ['differently'] is False
2024-06-14 02:45:38 root INFO     [' international', ' viewpoints', ' guild', ' Ug', ' worldview'] matches ['digitally'] is False
2024-06-14 02:45:38 root INFO     [' viewpoints', ' international', ' ep', ' Ug', ' worldview'] matches ['effectively'] is False
2024-06-14 02:45:38 root INFO     [' importantly', ' effectively', ' essentially', ' ', ' interestingly'] matches ['environmentally'] is False
2024-06-14 02:45:38 root INFO     [' ', ' importantly', ' essentially', ' in', ' effectively'] matches ['extensively'] is False
2024-06-14 02:45:38 root INFO     [' international', ' viewpoints', ' public', ' views', ' guild'] matches ['famously'] is False
2024-06-14 02:45:38 root INFO     [' ', ' generally', ' in', ' importantly', ' essentially'] matches ['federally'] is False
2024-06-14 02:45:38 root INFO     [' viewpoints', ' international', ' views', ' guild', ' worldview'] matches ['financially'] is False
2024-06-14 02:45:38 root INFO     [' international', ' viewpoints', ' geopolitical', ' worldview', ' guild'] matches ['globally'] is False
2024-06-14 02:45:38 root INFO     [' historically', ' interestingly', ' importantly', ' in', ' '] matches ['historically'] is True
2024-06-14 02:45:38 root INFO     [' viewpoints', ' international', ' guild', ' views', ' Ug'] matches ['hugely'] is False
2024-06-14 02:45:38 root INFO     [' ', ' definitely', ' importantly', ' certainly', ' in'] matches ['immediately'] is False
2024-06-14 02:45:38 root INFO     [' viewpoints', ' international', ' public', ' views', ' guild'] matches ['importantly'] is False
2024-06-14 02:45:38 root INFO     [' viewpoints', ' international', ' ep', ' views', ' worldview'] matches ['increasingly'] is False
2024-06-14 02:45:38 root INFO     [' viewpoints', ' international', ' views', ' Ug', ' guild'] matches ['interestingly'] is False
2024-06-14 02:45:38 root INFO     [' international', ' viewpoints', ' guild', ' views', ' worldview'] matches ['internally'] is False
2024-06-14 02:45:38 root INFO     [' international', ' viewpoints', ' geopolitical', ' worldview', ' guild'] matches ['internationally'] is True
2024-06-14 02:45:38 root INFO     [' viewpoints', ' international', ' guild', ' public', ' views'] matches ['legally'] is False
2024-06-14 02:45:38 root INFO     [' viewpoints', ' international', ' guild', ' ep', ' worldview'] matches ['mentally'] is False
2024-06-14 02:45:38 root INFO     [' viewpoints', ' international', ' guild', ' views', ' Ug'] matches ['nicely'] is False
2024-06-14 02:45:38 root INFO     [' obviously', ' interestingly', ' importantly', ' ', ' certainly'] matches ['obviously'] is True
2024-06-14 02:45:38 root INFO     [' viewpoints', ' international', ' worldview', ' ep', ' views'] matches ['physically'] is False
2024-06-14 02:45:38 root INFO     [' viewpoints', ' international', ' geopolitical', ' public', ' views'] matches ['politically'] is False
2024-06-14 02:45:38 root INFO     [' viewpoints', ' international', ' public', ' views', ' guild'] matches ['popularly'] is False
2024-06-14 02:45:38 root INFO     [' importantly', ' ', ' effectively', ' practically', ' actually'] matches ['practically'] is True
2024-06-14 02:45:38 root INFO     [' ', ' interestingly', ' importantly', ' in', ' additionally'] matches ['previously'] is False
2024-06-14 02:45:38 root INFO     [' ', ' in', ' certainly', ' interestingly', ' typically'] matches ['rarely'] is False
2024-06-14 02:45:38 root INFO     [' ', ' importantly', ' generally', ' in', ' significantly'] matches ['regionally'] is False
2024-06-14 02:45:38 root INFO     [' international', ' viewpoints', ' guild', ' public', ' views'] matches ['seriously'] is False
2024-06-14 02:45:38 root INFO     [' viewpoints', ' international', ' guild', ' views', ' worldview'] matches ['sexually'] is False
2024-06-14 02:45:38 root INFO     [' viewpoints', ' international', ' public', ' ep', ' views'] matches ['significantly'] is False
2024-06-14 02:45:38 root INFO     [' viewpoints', ' international', ' guild', ' views', ' public'] matches ['similarly'] is False
2024-06-14 02:45:38 root INFO     [' international', ' viewpoints', ' views', ' guild', ' Ug'] matches ['strongly'] is False
2024-06-14 02:45:38 root INFO     [' ', ' additionally', ' in', ' importantly', ' subsequently'] matches ['subsequently'] is True
2024-06-14 02:45:38 root INFO     [' viewpoints', ' international', ' views', ' Ug', ' guild'] matches ['successfully'] is False
2024-06-14 02:45:38 root INFO     [' international', ' viewpoints', ' worldview', ' guild', ' views'] matches ['traditionally'] is False
2024-06-14 02:45:38 root INFO     [' typically', ' ', ' generally', ' interestingly', ' usually'] matches ['typically'] is True
2024-06-14 02:45:38 root INFO     [' international', ' Ug', ' viewpoints', ' guild', ' views'] matches ['uniquely'] is False
2024-06-14 02:45:38 root INFO     [' viewpoints', ' international', ' views', ' Ug', ' voluntary'] matches ['virtually'] is False
2024-06-14 02:45:38 root INFO     [' viewpoints', ' views', ' international', ' worldview', ' Ug'] matches ['visually'] is False
2024-06-14 02:45:38 root INFO     adj+ly_reg,50,396,498

2024-06-14 02:45:38 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='verb+er_irreg', prompt_templates=['If you {} something, you are a', 'If someone {} something, they are a', 'To {}, one must be an '], prompt_templates_zs=['If you {} something, you are a', 'If someone {} something, they are a', 'To {}, one must be an '], samples=[RelationSample(subject='achieve', object=['achiever']), RelationSample(subject='advertise', object=['advertiser']), RelationSample(subject='announce', object=['announcer']), RelationSample(subject='bake', object=['baker']), RelationSample(subject='begin', object=['beginner']), RelationSample(subject='believe', object=['believer']), RelationSample(subject='borrow', object=['borrower']), RelationSample(subject='choreograph', object=['choreographer']), RelationSample(subject='compose', object=['composer']), RelationSample(subject='consume', object=['consumer']), RelationSample(subject='contend', object=['contender']), RelationSample(subject='defend', object=['defender']), RelationSample(subject='deliver', object=['deliverer']), RelationSample(subject='destroy', object=['destroyer']), RelationSample(subject='determine', object=['determiner']), RelationSample(subject='develop', object=['developer']), RelationSample(subject='discover', object=['discoverer']), RelationSample(subject='eat', object=['eater']), RelationSample(subject='entertain', object=['entertainer']), RelationSample(subject='examine', object=['examiner']), RelationSample(subject='explore', object=['explorer']), RelationSample(subject='follow', object=['follower']), RelationSample(subject='interpret', object=['interpreter']), RelationSample(subject='intrude', object=['intruder']), RelationSample(subject='learn', object=['learner']), RelationSample(subject='listen', object=['listener']), RelationSample(subject='lose', object=['loser']), RelationSample(subject='manage', object=['manager']), RelationSample(subject='molest', object=['molester']), RelationSample(subject='mourn', object=['mourner']), RelationSample(subject='observe', object=['observer']), RelationSample(subject='offend', object=['offender']), RelationSample(subject='organise', object=['organiser']), RelationSample(subject='organize', object=['organizer']), RelationSample(subject='perform', object=['performer']), RelationSample(subject='preach', object=['preacher']), RelationSample(subject='promote', object=['promoter']), RelationSample(subject='provide', object=['provider']), RelationSample(subject='publish', object=['publisher']), RelationSample(subject='receive', object=['receiver']), RelationSample(subject='recommend', object=['recommender']), RelationSample(subject='send', object=['sender']), RelationSample(subject='skydive', object=['skydiver']), RelationSample(subject='slay', object=['slayer']), RelationSample(subject='speak', object=['speaker']), RelationSample(subject='subscribe', object=['subscriber']), RelationSample(subject='suffer', object=['sufferer']), RelationSample(subject='teach', object=['teacher']), RelationSample(subject='tell', object=['teller']), RelationSample(subject='write', object=['writer'])], _domain=None, _range=None)
2024-06-14 02:45:40 root INFO     starting operator prediction
2024-06-14 02:45:40 root INFO     using no context
2024-06-14 02:45:40 root INFO     [order_1_approx] starting weight calculation
2024-06-14 02:49:39 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 02:49:39 root INFO     [order_1_approx] weight calculation finished
2024-06-14 02:49:40 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-14 02:49:40 root INFO     [order_1_approx] starting weight calculation
2024-06-14 02:53:38 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 02:53:38 root INFO     [order_1_approx] weight calculation finished
2024-06-14 02:53:39 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-14 02:53:39 root INFO     [order_1_approx] starting weight calculation
2024-06-14 02:57:36 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 02:57:36 root INFO     [order_1_approx] weight calculation finished
2024-06-14 02:57:37 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-14 02:57:37 root INFO     [order_1_approx] starting weight calculation
2024-06-14 03:01:34 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 03:01:34 root INFO     [order_1_approx] weight calculation finished
2024-06-14 03:01:35 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-14 03:01:36 root INFO     [order_1_approx] starting weight calculation
2024-06-14 03:05:33 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 03:05:33 root INFO     [order_1_approx] weight calculation finished
2024-06-14 03:05:33 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-14 03:05:34 root INFO     [order_1_approx] starting weight calculation
2024-06-14 03:09:30 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 03:09:30 root INFO     [order_1_approx] weight calculation finished
2024-06-14 03:09:31 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-14 03:09:31 root INFO     [order_1_approx] starting weight calculation
2024-06-14 03:13:29 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 03:13:29 root INFO     [order_1_approx] weight calculation finished
2024-06-14 03:13:30 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-14 03:13:30 root INFO     [order_1_approx] starting weight calculation
2024-06-14 03:17:28 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 03:17:28 root INFO     [order_1_approx] weight calculation finished
2024-06-14 03:17:29 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-14 03:17:29 root INFO     total operator prediction time: 1908.6029179096222 seconds
2024-06-14 03:17:31 root INFO     [' ', ' de', ' provider', ' challenger', ' champion'] matches ['achiever'] is False
2024-06-14 03:17:31 root INFO     [' ', ' advertis', ' provider', ' pro', ' promoter'] matches ['advertiser'] is True
2024-06-14 03:17:31 root INFO     [' ', ' pro', ' advertis', ' de', ' proclaim'] matches ['announcer'] is False
2024-06-14 03:17:31 root INFO     [' ', ' b', ' provider', ' p', ' borrower'] matches ['baker'] is False
2024-06-14 03:17:31 root INFO     [' aff', ' po', ' gal', 'FAQ', ' ax'] matches ['beginner'] is False
2024-06-14 03:17:31 root INFO     [' ', ' believer', ' provider', ' de', ' pro'] matches ['believer'] is True
2024-06-14 03:17:31 root INFO     [' ', ' borrower', ' provider', ' pro', ' debtor'] matches ['borrower'] is True
2024-06-14 03:17:31 root INFO     [' ', ' pro', ' re', ' -', ' provider'] matches ['choreographer'] is False
2024-06-14 03:17:31 root INFO     [' ', ' composer', ' com', ' comp', ' compose'] matches ['composer'] is True
2024-06-14 03:17:31 root INFO     [' ', ' consumer', ' provider', ' pro', ' cons'] matches ['consumer'] is True
2024-06-14 03:17:31 root INFO     [' ', ' contender', ' contestant', ' cont', ' contend'] matches ['contender'] is True
2024-06-14 03:17:31 root INFO     [' defender', ' defendant', ' defend', ' ', ' def'] matches ['defender'] is True
2024-06-14 03:17:31 root INFO     [' del', ' ', ' de', ' deliver', ' provider'] matches ['deliverer'] is True
2024-06-14 03:17:31 root INFO     [' aff', ' gal', ' po', ' ax', 'FAQ'] matches ['destroyer'] is False
2024-06-14 03:17:31 root INFO     [' ', ' determin', ' de', ' del', ' defender'] matches ['determiner'] is True
2024-06-14 03:17:31 root INFO     [' gal', 'FAQ', ' aff', ' po', ' ax'] matches ['developer'] is False
2024-06-14 03:17:31 root INFO     [' discover', ' disc', ' ', ' discovery', ' developer'] matches ['discoverer'] is True
2024-06-14 03:17:31 root INFO     [' gal', 'FAQ', ' aff', ' ax', ' po'] matches ['eater'] is False
2024-06-14 03:17:31 root INFO     [' ', ' entertain', ' ent', ' provider', ' de'] matches ['entertainer'] is True
2024-06-14 03:17:31 root INFO     [' ', ' examiner', ' examine', ' investigator', ' provider'] matches ['examiner'] is True
2024-06-14 03:17:31 root INFO     [' ', ' pro', ' provider', ' explorer', ' explo'] matches ['explorer'] is True
2024-06-14 03:17:31 root INFO     [' gal', 'FAQ', ' aff', ' po', ' ax'] matches ['follower'] is False
2024-06-14 03:17:31 root INFO     [' aff', ' gal', 'FAQ', ' ax', ' po'] matches ['interpreter'] is False
2024-06-14 03:17:31 root INFO     [' ', ' intruder', ' offender', ' perpetrator', ' pro'] matches ['intruder'] is True
2024-06-14 03:17:31 root INFO     [' gal', ' league', ' aff', ' ax', 'FAQ'] matches ['learner'] is False
2024-06-14 03:17:31 root INFO     [' ', ' listener', ' p', ' del', ' lender'] matches ['listener'] is True
2024-06-14 03:17:31 root INFO     [' ', ' del', ' pro', ' l', ' -'] matches ['loser'] is False
2024-06-14 03:17:31 root INFO     [' ', ' manager', ' provider', ' controller', ' m'] matches ['manager'] is True
2024-06-14 03:17:31 root INFO     [' ', ' m', ' perpetrator', ' p', ' offender'] matches ['molester'] is False
2024-06-14 03:17:31 root INFO     [' ', ' m', ' pro', ' borrower', ' trou'] matches ['mourner'] is False
2024-06-14 03:17:31 root INFO     [' ', ' provider', ' observer', ' pro', ' ob'] matches ['observer'] is True
2024-06-14 03:17:31 root INFO     [' ', ' offender', ' defendant', ' perpetrator', ' delinquent'] matches ['offender'] is True
2024-06-14 03:17:31 root INFO     [' ', ' provider', ' pro', ' -', ' organizer'] matches ['organiser'] is False
2024-06-14 03:17:31 root INFO     [' ', ' organizer', ' provider', ' pro', ' -'] matches ['organizer'] is True
2024-06-14 03:17:31 root INFO     [' performer', ' per', ' ', ' provider', ' perform'] matches ['performer'] is True
2024-06-14 03:17:31 root INFO     [' preacher', ' ', ' pre', ' pro', ' provider'] matches ['preacher'] is True
2024-06-14 03:17:31 root INFO     [' promoter', ' ', ' pro', ' promot', ' prom'] matches ['promoter'] is True
2024-06-14 03:17:31 root INFO     [' provider', ' ', ' provide', ' prov', ' pro'] matches ['provider'] is True
2024-06-14 03:17:31 root INFO     [' ', ' publisher', ' pro', ' provider', ' producer'] matches ['publisher'] is True
2024-06-14 03:17:31 root INFO     [' receiver', ' ', ' recipient', ' provider', ' re'] matches ['receiver'] is True
2024-06-14 03:17:31 root INFO     [' recommend', ' ', ' recomm', ' recommendation', ' recommended'] matches ['recommender'] is True
2024-06-14 03:17:31 root INFO     [' aff', ' gal', ' ax', ' po', 'FAQ'] matches ['sender'] is False
2024-06-14 03:17:31 root INFO     [' ', ' de', ' del', ' d', ' provider'] matches ['skydiver'] is False
2024-06-14 03:17:31 root INFO     [' ', ' del', ' defender', ' victim', ' assailant'] matches ['slayer'] is False
2024-06-14 03:17:31 root INFO     [' aff', 'FAQ', ' gal', ' po', ' ax'] matches ['speaker'] is False
2024-06-14 03:17:31 root INFO     [' ', ' subscriber', ' sub', ' pro', ' subscribe'] matches ['subscriber'] is True
2024-06-14 03:17:31 root INFO     [' ', ' suff', ' victim', ' offender', ' pro'] matches ['sufferer'] is True
2024-06-14 03:17:31 root INFO     [' ', ' teacher', ' educator', ' instructor', ' provider'] matches ['teacher'] is True
2024-06-14 03:17:31 root INFO     ['FAQ', ' gal', ' aff', ' po', ' ax'] matches ['teller'] is False
2024-06-14 03:17:31 root INFO     [' aff', ' ax', ' gal', ' po', 'FAQ'] matches ['writer'] is False
2024-06-14 03:17:31 root INFO     verb+er_irreg,50,425,519

2024-06-14 03:17:31 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='verb+able_reg', prompt_templates=['If you can {} something, that thing is', 'Being able to {} something implies that thing is', 'Being able to {} something suggests that thing is'], prompt_templates_zs=['If you can {} something, that thing is', 'Being able to {} something implies that thing is', 'Being able to {} something suggests that thing is'], samples=[RelationSample(subject='accept', object=['acceptable']), RelationSample(subject='achieve', object=['achieveable']), RelationSample(subject='adapt', object=['adaptable']), RelationSample(subject='adjust', object=['adjustable']), RelationSample(subject='admire', object=['admirable']), RelationSample(subject='adore', object=['adorable']), RelationSample(subject='advise', object=['advisable']), RelationSample(subject='afford', object=['affordable']), RelationSample(subject='avoid', object=['avoidable']), RelationSample(subject='believe', object=['believeable', 'believable']), RelationSample(subject='consider', object=['considerable']), RelationSample(subject='contain', object=['containable']), RelationSample(subject='define', object=['definable']), RelationSample(subject='deliver', object=['deliverable']), RelationSample(subject='discover', object=['discoverable']), RelationSample(subject='dispose', object=['disposable']), RelationSample(subject='download', object=['downloadable']), RelationSample(subject='edit', object=['editable']), RelationSample(subject='enjoy', object=['enjoyable']), RelationSample(subject='execute', object=['executable']), RelationSample(subject='expand', object=['expandable']), RelationSample(subject='expect', object=['expectable']), RelationSample(subject='explain', object=['explainable']), RelationSample(subject='extend', object=['extendable']), RelationSample(subject='foresee', object=['foreseeable']), RelationSample(subject='identify', object=['identifiable']), RelationSample(subject='imagine', object=['imaginable']), RelationSample(subject='improve', object=['improvable']), RelationSample(subject='inflate', object=['inflatable']), RelationSample(subject='learn', object=['learnable']), RelationSample(subject='maintain', object=['maintainable']), RelationSample(subject='manage', object=['manageable']), RelationSample(subject='observe', object=['observable']), RelationSample(subject='perform', object=['performable']), RelationSample(subject='predict', object=['predictable']), RelationSample(subject='prefer', object=['preferable']), RelationSample(subject='prevent', object=['preventable']), RelationSample(subject='protect', object=['protectable']), RelationSample(subject='publish', object=['publishable']), RelationSample(subject='recognize', object=['recognizable', 'recognisable']), RelationSample(subject='recommend', object=['recommendable']), RelationSample(subject='rely', object=['reliable']), RelationSample(subject='renew', object=['renewable']), RelationSample(subject='replace', object=['replaceable']), RelationSample(subject='represent', object=['representable']), RelationSample(subject='survive', object=['survivable']), RelationSample(subject='sustain', object=['sustainable']), RelationSample(subject='understand', object=['understandable']), RelationSample(subject='vary', object=['variable']), RelationSample(subject='write', object=['writeable', 'writable'])], _domain=None, _range=None)
2024-06-14 03:17:33 root INFO     starting operator prediction
2024-06-14 03:17:33 root INFO     using no context
2024-06-14 03:17:34 root INFO     [order_1_approx] starting weight calculation
2024-06-14 03:21:33 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 03:21:33 root INFO     [order_1_approx] weight calculation finished
2024-06-14 03:21:34 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-14 03:21:34 root INFO     [order_1_approx] starting weight calculation
2024-06-14 03:25:33 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 03:25:33 root INFO     [order_1_approx] weight calculation finished
2024-06-14 03:25:34 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-14 03:25:34 root INFO     [order_1_approx] starting weight calculation
2024-06-14 03:29:32 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 03:29:32 root INFO     [order_1_approx] weight calculation finished
2024-06-14 03:29:33 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-14 03:29:33 root INFO     [order_1_approx] starting weight calculation
2024-06-14 03:33:31 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 03:33:31 root INFO     [order_1_approx] weight calculation finished
2024-06-14 03:33:32 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-14 03:33:32 root INFO     [order_1_approx] starting weight calculation
2024-06-14 03:37:29 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 03:37:29 root INFO     [order_1_approx] weight calculation finished
2024-06-14 03:37:30 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-14 03:37:30 root INFO     [order_1_approx] starting weight calculation
2024-06-14 03:41:28 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 03:41:28 root INFO     [order_1_approx] weight calculation finished
2024-06-14 03:41:29 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-14 03:41:29 root INFO     [order_1_approx] starting weight calculation
2024-06-14 03:45:27 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 03:45:27 root INFO     [order_1_approx] weight calculation finished
2024-06-14 03:45:27 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-14 03:45:28 root INFO     [order_1_approx] starting weight calculation
2024-06-14 03:49:25 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 03:49:25 root INFO     [order_1_approx] weight calculation finished
2024-06-14 03:49:26 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-14 03:49:26 root INFO     total operator prediction time: 1912.4837985038757 seconds
2024-06-14 03:49:28 root INFO     [' legitimate', ' creditor', ' accountant', ' officer', ' el'] matches ['acceptable'] is False
2024-06-14 03:49:28 root INFO     [' ', ' manageable', ' capable', ' reasonable', ' feasible'] matches ['achieveable'] is False
2024-06-14 03:49:28 root INFO     [' legitimate', ' el', ' accountant', ' ethical', ' officer'] matches ['adaptable'] is False
2024-06-14 03:49:28 root INFO     [' legitimate', ' accountant', ' officer', ' el', ' creditor'] matches ['adjustable'] is False
2024-06-14 03:49:28 root INFO     [' ', ' manageable', ' reasonable', ' capable', ' imaginable'] matches ['admirable'] is False
2024-06-14 03:49:28 root INFO     [' ', ' capable', ' manageable', ' reasonable', ' able'] matches ['adorable'] is False
2024-06-14 03:49:28 root INFO     [' ', ' reasonable', ' advisable', ' manageable', ' capable'] matches ['advisable'] is True
2024-06-14 03:49:28 root INFO     [' ', ' capable', ' manageable', ' feasible', ' affordable'] matches ['affordable'] is True
2024-06-14 03:49:28 root INFO     [' legitimate', ' el', ' creditor', ' ethical', ' officer'] matches ['avoidable'] is False
2024-06-14 03:49:28 root INFO     [' ', ' believable', ' reasonable', ' conceivable', ' capable'] matches ['believeable', 'believable'] is True
2024-06-14 03:49:28 root INFO     [' legitimate', ' creditor', ' accountant', ' officer', ' el'] matches ['considerable'] is False
2024-06-14 03:49:28 root INFO     [' ', ' contain', ' capable', ' manageable', ' maintain'] matches ['containable'] is True
2024-06-14 03:49:28 root INFO     [' legitimate', ' creditor', ' el', ' officer', ' accountant'] matches ['definable'] is False
2024-06-14 03:49:28 root INFO     [' ', ' capable', ' manageable', ' reasonable', ' deliver'] matches ['deliverable'] is True
2024-06-14 03:49:28 root INFO     [' ', ' discover', ' manageable', ' reasonable', ' capable'] matches ['discoverable'] is True
2024-06-14 03:49:28 root INFO     [' ', ' dispose', ' manageable', ' disposable', ' reasonable'] matches ['disposable'] is True
2024-06-14 03:49:28 root INFO     [' legitimate', ' creditor', ' officer', ' accountant', ' el'] matches ['downloadable'] is False
2024-06-14 03:49:28 root INFO     [' legitimate', ' el', ' ethical', ' creditor', ' officer'] matches ['editable'] is False
2024-06-14 03:49:28 root INFO     [' ', ' manageable', ' reasonable', ' capable', ' maintain'] matches ['enjoyable'] is False
2024-06-14 03:49:28 root INFO     [' legitimate', ' officer', ' creditor', ' el', ' accountant'] matches ['executable'] is False
2024-06-14 03:49:28 root INFO     [' ', ' expand', ' extend', ' manageable', ' capable'] matches ['expandable'] is True
2024-06-14 03:49:28 root INFO     [' ', ' reasonable', ' expect', ' manageable', ' capable'] matches ['expectable'] is True
2024-06-14 03:49:28 root INFO     [' ', ' reasonable', ' manageable', ' capable', ' conceivable'] matches ['explainable'] is False
2024-06-14 03:49:28 root INFO     [' ', ' extend', ' manageable', ' ext', ' capable'] matches ['extendable'] is True
2024-06-14 03:49:28 root INFO     [' ', ' reasonable', ' manageable', ' capable', ' feasible'] matches ['foreseeable'] is False
2024-06-14 03:49:28 root INFO     [' ', ' manageable', ' capable', ' reasonable', ' maintain'] matches ['identifiable'] is False
2024-06-14 03:49:28 root INFO     [' ', ' imaginable', ' manageable', ' capable', ' conceivable'] matches ['imaginable'] is True
2024-06-14 03:49:28 root INFO     [' legitimate', ' el', ' officer', ' creditor', ' ethical'] matches ['improvable'] is False
2024-06-14 03:49:28 root INFO     [' ', ' manageable', ' reasonable', ' capable', ' in'] matches ['inflatable'] is True
2024-06-14 03:49:28 root INFO     [' legitimate', ' el', ' officer', ' creditor', ' accountant'] matches ['learnable'] is False
2024-06-14 03:49:28 root INFO     [' maintain', ' ', ' manageable', ' reasonable', ' capable'] matches ['maintainable'] is True
2024-06-14 03:49:28 root INFO     [' manageable', ' ', ' manage', ' capable', ' maintain'] matches ['manageable'] is True
2024-06-14 03:49:28 root INFO     [' ', ' manageable', ' maintain', ' reasonable', ' capable'] matches ['observable'] is False
2024-06-14 03:49:28 root INFO     [' ', ' manageable', ' capable', ' maintain', ' reasonable'] matches ['performable'] is False
2024-06-14 03:49:28 root INFO     [' ', ' reasonable', ' capable', ' manageable', ' predictable'] matches ['predictable'] is True
2024-06-14 03:49:28 root INFO     [' ', ' preferable', ' capable', ' reasonable', ' pre'] matches ['preferable'] is True
2024-06-14 03:49:28 root INFO     [' ', ' prevent', ' manageable', ' reasonable', ' maintain'] matches ['preventable'] is True
2024-06-14 03:49:28 root INFO     [' legitimate', ' creditor', ' officer', ' accountant', ' ethical'] matches ['protectable'] is False
2024-06-14 03:49:28 root INFO     [' ', ' manageable', ' maintain', ' reasonable', ' publish'] matches ['publishable'] is True
2024-06-14 03:49:28 root INFO     [' ', ' manageable', ' reasonable', ' capable', ' recognizable'] matches ['recognizable', 'recognisable'] is True
2024-06-14 03:49:28 root INFO     [' recommend', ' ', ' reasonable', ' manageable', ' recommended'] matches ['recommendable'] is True
2024-06-14 03:49:28 root INFO     [' legitimate', ' creditor', ' officer', ' el', ' ethical'] matches ['reliable'] is False
2024-06-14 03:49:28 root INFO     [' ', ' reasonable', ' manageable', ' maintain', ' capable'] matches ['renewable'] is False
2024-06-14 03:49:28 root INFO     [' legitimate', ' el', ' officer', ' creditor', ' accountant'] matches ['replaceable'] is False
2024-06-14 03:49:28 root INFO     [' legitimate', ' creditor', ' officer', ' accountant', ' ethical'] matches ['representable'] is False
2024-06-14 03:49:28 root INFO     [' ', ' manageable', ' sustainable', ' maintain', ' reasonable'] matches ['survivable'] is False
2024-06-14 03:49:28 root INFO     [' sustainable', ' ', ' maintain', ' manageable', ' reasonable'] matches ['sustainable'] is True
2024-06-14 03:49:28 root INFO     [' ', ' manageable', ' reasonable', ' understandable', ' capable'] matches ['understandable'] is True
2024-06-14 03:49:28 root INFO     [' ', ' capable', ' manageable', ' reasonable', ' adjustable'] matches ['variable'] is False
2024-06-14 03:49:28 root INFO     [' legitimate', ' officer', ' creditor', ' accountant', ' ethical'] matches ['writeable', 'writable'] is False
2024-06-14 03:49:28 root INFO     verb+able_reg,50,447,547

2024-06-14 03:49:28 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='meronyms - part', prompt_templates=['A part of a {} is a', 'A piece of a {} is a', 'An element of a {} is a'], prompt_templates_zs=['A part of a {} is a', 'A piece of a {} is a', 'An element of a {} is a'], samples=[RelationSample(subject='academia', object=['college', 'university', 'institute']), RelationSample(subject='apartment', object=['bedroom', 'room', 'bathroom', 'kitchen', 'kitchenette', 'living_room', 'pantry', 'toilet', 'shower_room']), RelationSample(subject='bird', object=['feathers', 'plume', 'preen', 'croup', 'calamus', 'fowl', 'drumstick', 'syrinx', 'bill', 'rump', 'vane', 'barb', 'quill', 'shaft', 'pecker', 'pennon', 'feet', 'giblets', 'alula', 'talon', 'foot', 'pinion', 'wing', 'wishbone', 'nib', 'sac', 'giblet', 'furcula', 'bird', 'neb', 'feather', 'gland', 'oyster', 'thigh', 'plumage', 'web', 'hindquarters', 'beak', "parson's_nose", 'wishing_bone', "pope's_nose", 'spurious_wing', 'bastard_wing', 'croupe', 'air_sac', 'quill_feather', 'uropygium', "bird's_foot", 'uropygial', 'second_joint', 'uropygial_gland', 'preen_gland', 'flight_feather', 'dark_meat']), RelationSample(subject='brush', object=['bristle', 'hold', 'shank', 'grip', 'handgrip', 'handle', 'head', 'stem']), RelationSample(subject='bus', object=['seats', 'conductor', 'window', 'driver', 'roof']), RelationSample(subject='byte', object=['bit']), RelationSample(subject='car', object=['engine', 'armrest', 'headrest', 'grille', 'hinge', 'tailpipe', 'suspension', 'hood', 'horn', 'hooter', 'petrol', 'pintle', 'trunk', 'floorboard', 'bar', 'gas', 'buffer', 'door', 'stabilizer', 'seat', 'window', 'exhaust', 'tailfin', 'back', 'luggage', 'pedal', 'cowling', 'seatbelt', 'high', 'wing', 'gasoline', 'fin', 'cowl', 'silencer', 'gun', 'compartment', 'rear', 'radiator', 'accessory', 'sunroof', 'roof', 'lights', 'bumper', 'glove', 'bag', 'cushion', 'backrest', 'accelerator', 'fender', 'third', 'throttle', 'bonnet', 'air', 'gear', 'muffler', 'mirror', 'shock', 'reverse', 'anti-sway_bar', 'tail_fin', 'accelerator_pedal', 'car_seat', 'automobile_horn', 'anti-sway', 'automobile_engine', 'gasoline_engine', 'car_door', 'shock_absorber', 'luggage_compartment', 'glove_compartment', 'bumper_guard', 'exhaust_system', 'first_gear', 'high_gear', 'rear_window', 'sunshine-roof', 'third_gear', 'air_bag', 'doorlock', 'petrol_engine', 'automobile_trunk', 'auto_accessory', 'inlet_manifold', 'horn_button', 'running_board', 'stabilizer_bar', 'motor_horn', 'exhaust_manifold', 'exhaust_pipe', 'radiator_grille', 'low_gear', 'flexible_joint', 'head_restraint', 'hood_ornament', 'exhaust_valve', 'car_mirror', 'gas_pedal', 'seat_belt', 'reverse_gear', 'car_horn', 'car_window', 'suspension_system']), RelationSample(subject='castle', object=['donjon', 'tower', 'turret', 'gate', 'dungeon', 'moat', 'keep', 'great_hall']), RelationSample(subject='cat', object=['whiskers', 'coat', 'paw', 'paws', 'fur', 'eyes', 'back', 'claws', 'tail', 'teeth']), RelationSample(subject='chair', object=['seat', 'armrest', 'headrest', 'armrests', 'rest', 'pad', 'back', 'leg', 'backrest', 'legs']), RelationSample(subject='church', object=['altar', 'choir', 'vestry', 'transept', 'apse', 'sanctuary', 'rood', 'screen', 'bema', 'nave', 'tower', 'sacristy', 'corner', 'chancel', 'amen', 'chapel', 'apsis', 'side', 'narthex', 'presbytery', 'side_chapel', 'lady_chapel', 'church_tower', 'rood_screen', 'amen_corner']), RelationSample(subject='comb', object=['teeth', 'shaft', 'grip', 'tooth', 'handle']), RelationSample(subject='day', object=['hour', 'forenoon', 'eventide', 'nanosecond', 'noonday', 'femtosecond', 'hr', 'minutes', 'microsecond', 'msec', 'time', 'midnight', 'sec', 'nighttime', 'min', 'morning', 'noon', 'evening', 'dark', 'picosecond', 'daytime', 'minute', 'daylight', 's', 'high', 'even', 'quarter', 'morn', 'noontide', 'second', 'afternoon', 'twelve', 'millisecond', 'midday', 'midafternoon', 'attosecond', 'night', 'morning_time', 'high_noon', 'half-hour', 'twelve_noon', 'late-night_hour', 'early-morning_hour', 'lights-out', '60_minutes', 'small_hours', '30_minutes', '15_minutes', 'quarter-hour']), RelationSample(subject='deer', object=['antler', 'antlers', 'withers', 'flag', 'scut']), RelationSample(subject='dollar', object=['cent']), RelationSample(subject='door', object=['hinge', 'keyhole', 'threshold', 'doorframe', 'bolt', 'deadbolt', 'doorjamb', 'tumbler', 'doorpost', 'doorstep', 'doorcase', 'case', 'lock', 'casing', 'doorsill']), RelationSample(subject='dress', object=['sleeve', 'slide', 'plastron', 'zip', 'zipper', 'fastener', 'hemline', 'bodice', 'neckline', 'waistline', 'belt', 'slide_fastener', 'zip_fastener']), RelationSample(subject='filename', object=['extension', 'name']), RelationSample(subject='flower', object=['petal', 'leaf', 'anther', 'style', 'perianth', 'placenta', 'stamen', 'pistil', 'ovary', 'corolla', 'carpel', 'envelope', 'sepal', 'calyx', 'stigma', 'chlamys', 'petals', 'corona', 'perigonium', 'perigone', 'flower_petal', 'floral_leaf', 'floral_envelope', 'gynostegium']), RelationSample(subject='gigabit', object=['megabit', 'kbit', 'kb', 'kilobit', 'mb', 'mbit']), RelationSample(subject='gramm', object=['milligram', 'mg', 'grain', 'milligram', 'mcg', 'carat', 'microgram', 'ng', 'dg', 'decigram', 'nanogram', 'metric_grain', 'obolus']), RelationSample(subject='guitar', object=['string', 'deck', 'pegs', 'fret', 'strings', 'frets', 'peg', 'fingerboard']), RelationSample(subject='gun', object=['trigger', 'holder', 'safety', 'extractor', 'clip', 'magazine', 'barrel', 'hammer', 'viewfinder', 'gunsight', 'stock', 'cartridge', 'remover', 'chamber', 'ejector', 'cock', 'catch', 'finder', 'mechanism', 'gunstock', 'lock', 'action', 'muzzle', 'key', 'gunlock', 'cartridge_holder', 'gun_muzzle', 'gun-sight', 'action_mechanism', 'gun_chamber', 'gun_trigger', 'firing_mechanism', 'safety_lock', 'cartridge_extractor', 'firing_chamber', 'cartridge_ejector', 'view_finder', 'cartridge_clip', 'gun_barrel', 'safety_catch', 'cartridge_remover']), RelationSample(subject='harbor', object=['dock', 'facility', 'anchorage', 'landing', 'docking', 'dockage', 'anchorage_ground', 'docking_facility', 'landing_place', 'landing_stage']), RelationSample(subject='jail', object=['cell', 'cellblock', 'guard', 'police', 'prison_cell', 'jail_cell']), RelationSample(subject='jewellery', object=['bead', 'stone', 'wire', 'beads', 'gemstone', 'gem', 'metal', 'gold', 'silver', 'platina', 'bead', 'beads', 'jewel']), RelationSample(subject='litre', object=['millilitre', 'cc', 'ml', 'milliliter', 'cl', 'dl', 'deciliter', 'mil', 'cubic_centimetre', 'centiliter', 'decilitre', 'cubic_centimeter', 'centilitre', 'cubic_millimeter', 'cubic_millimetre']), RelationSample(subject='movie', object=['scene', 'subtitles', 'footage', 'credit', 'episode', 'shot', 'sequence', 'credits', 'caption']), RelationSample(subject='orthography', object=['hyphenation', 'punctuation', 'punctuation_mark', 'word_division', 'spelling']), RelationSample(subject='piano', object=['keyboard', 'clavier', 'loud', 'hammer', 'sounding', 'pedal', 'sustaining', 'soft', 'fingerboard', 'soundboard', 'action', 'board', 'key', 'fallboard', 'piano_action', 'action_mechanism', 'damper_block', 'fall-board', 'sounding_board', 'sustaining_pedal', 'loud_pedal', 'piano_damper', 'piano_keyboard', 'sound_hole', 'soft_pedal']), RelationSample(subject='pie', object=['crust', 'cheese', 'filling', 'fruit', 'apple', 'berries', 'glazing', 'pastry', 'icing']), RelationSample(subject='poem', object=['stanza', 'canto', 'prosody', 'rime', 'line', 'rhyme', 'verse', 'poetic_rhythm', 'rhythmic_pattern', 'verse_line', 'line_of_verse', 'line_of_poetry']), RelationSample(subject='pub', object=['bar', 'barroom', 'taproom', 'saloon', 'ginmill']), RelationSample(subject='radio', object=['receiver', 'tuner', 'radio', 'demodulator', 'transmitter', 'detector', 'receiving', 'set', 'amplifier', 'wireless', 'radio_transmitter', 'receiving_set', 'radio_receiver', 'radio_set']), RelationSample(subject='railcar', object=['suspension', 'cushion', 'shock', 'shock_absorber', 'suspension_system']), RelationSample(subject='seafront', object=['harbor', 'seaport', 'dock', 'haven', 'anchorage', 'landing', 'harbour', 'dockage', 'anchorage_ground', 'docking_facility', 'landing_place', 'landing_stage']), RelationSample(subject='shilling', object=['pence']), RelationSample(subject='shirt', object=['button', 'dickie', 'collar', 'dickey', 'sleeve', 'buttons', 'dicky', 'pocket', 'shirttail', 'shirtsleeve', 'shirtfront', 'shirt_button']), RelationSample(subject='sonata', object=['movement', 'part']), RelationSample(subject='staircase', object=['step', 'riser', 'landing', 'tread', 'stair', 'stairhead']), RelationSample(subject='sword', object=['blade', 'forte', 'hilt', 'peak', 'foible', 'point', 'pommel', 'haft', 'tip', 'knob', 'helve', 'knife_edge', 'cutting_edge']), RelationSample(subject='table', object=['tabletop', 'tableware', 'leg', 'legs']), RelationSample(subject='teapot', object=['spout', 'handle', 'knob', 'lid', 'body', 'belly', 'base', 'filter', 'tea_filter']), RelationSample(subject='telephone', object=['receiver', 'mouthpiece', 'dial', 'wire', 'screen', 'display', 'telephone_receiver']), RelationSample(subject='tonne', object=['kilogram', 'mg', 'gm', 'hg', 'grain', 'milligram', 'hundredweight', 'kilo', 'mcg', 'dag', 'carat', 'microgram', 'gramme', 'quintal', 'ng', 'gram', 'dg', 'g', 'kg', 'decigram', 'nanogram', 'myriagram', 'centner', 'metric_grain', 'myg', 'dekagram', 'decagram', 'metric_hundredweight', 'obolus', 'doppelzentner', 'hectogram', 'dkg']), RelationSample(subject='torso', object=['chest', 'arse', 'shoulder', 'bum', 'midriff', 'groin', 'deltoid', 'diaphragm', 'lat', 'pectoralis', 'behind', 'gluteus', 'middle', 'stomach', 'teres', 'thorax', 'tush', 'ab', 'rump', 'breastbone', 'buns', 'gladiolus', 'haunch', 'backside', 'buttocks', 'serratus', 'pectoral', 'stern', 'navel', 'paunch', 'seat', 'mediastinum', 'ass', 'axilla', 'back', 'belly', 'bottom', 'omphalos', 'fundament', 'acromion', 'derriere', 'hindgut', 'gut', 'gallbladder', 'saddle', 'cheek', 'waist', 'butt', 'bowel', 'keister', 'bellybutton', 'pectus', 'prat', 'loins', 'abdominal', 'rear', 'dorsum', 'posterior', 'venter', 'small', 'abdomen', 'umbilicus', 'armpit', 'waistline', 'sternum', 'scapula', 'glute', 'manubrium', 'fanny', 'side', 'midsection', 'pecs', 'hip', 'buttock', 'intestine', 'breast', 'can', 'tail', 'hindquarters', 'xiphoid_process', 'thoracic_vertebra', 'abdominal_wall', 'musculus_deltoideus', 'abdominal_cavity', 'arteria_circumflexa_scapulae', 'arteria_glutes', 'arteria_axillaris', 'axillary_fossa', 'arteria_colica', 'articulatio_humeri', 'shoulder_joint', 'gall_bladder', 'spare_tire', 'arteria_circumflexa_humeri', 'serratus_muscles', 'axillary_artery', 'gluteus_muscle', 'love_handle', 'latissimus_dorsi', 'pectoral_muscle', 'tooshie', 'abdominal_muscle', 'circumflex_humeral_artery', 'abdominal_aorta', 'vena_thoracica', 'musculus_pectoralis', 'hypochondrium', 'area_of_cardiac_dullness', 'glenoid_cavity', 'rib_cage', 'thoracic_aorta', 'omphalus', 'circumflex_scapular_artery', 'acromial_process', 'shoulder_bone', 'tail_end', 'rear_end', 'gluteal_muscle', 'inguen', 'shoulder_blade', 'rotator_cuff', 'corpus_sternum', 'dorsal_vertebra', 'teres_muscle', 'thoracic_cavity', 'axillary_cavity', 'chest_cavity', 'deltoid_muscle', 'belly_button', 'gluteal_artery', 'thoracic_vein', 'glenoid_fossa', 'nates', 'colic_artery', 'lumbar_vertebra', 'hind_end']), RelationSample(subject='tripod', object=['leg', 'stand']), RelationSample(subject='typewriter', object=['keyboard', 'typewriter', 'carriage', 'tab', 'ribbon', 'shift', 'backspace', 'action', 'key', 'typewriter_carriage', 'backspace_key', 'action_mechanism', 'typewriter_keyboard', 'shift_key', 'space_bar', 'tab_key', 'typewriter_ribbon', 'backspacer']), RelationSample(subject='window', object=['pane', 'sash', 'windowpane', 'window', 'fastener', 'glass', 'frame', 'case', 'windowsill', 'mullion', 'jamb', 'lock', 'casing', 'sash_lock', 'window_glass', 'sash_fastener', 'pane_of_glass', 'window_lock', 'window_sash', 'window_frame']), RelationSample(subject='womb', object=['cervix', 'caul', 'placenta', 'oviduct', 'veil', 'myometrium', 'endometrium', 'uterine_artery', 'embryonic_membrane', 'uterine_cervix', 'uterine_cavity', 'fallopian_tube', 'uterine_tube', 'cervix_uteri', 'arteria_uterina'])], _domain=None, _range=None)
2024-06-14 03:49:31 root INFO     starting operator prediction
2024-06-14 03:49:31 root INFO     using no context
2024-06-14 03:49:31 root INFO     [order_1_approx] starting weight calculation
2024-06-14 03:53:30 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 03:53:30 root INFO     [order_1_approx] weight calculation finished
2024-06-14 03:53:31 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-14 03:53:31 root INFO     [order_1_approx] starting weight calculation
2024-06-14 03:57:28 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 03:57:28 root INFO     [order_1_approx] weight calculation finished
2024-06-14 03:57:29 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-14 03:57:29 root INFO     [order_1_approx] starting weight calculation
2024-06-14 04:01:27 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 04:01:27 root INFO     [order_1_approx] weight calculation finished
2024-06-14 04:01:27 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-14 04:01:27 root INFO     [order_1_approx] starting weight calculation
2024-06-14 04:05:25 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 04:05:25 root INFO     [order_1_approx] weight calculation finished
2024-06-14 04:05:26 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-14 04:05:27 root INFO     [order_1_approx] starting weight calculation
2024-06-14 04:09:24 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 04:09:24 root INFO     [order_1_approx] weight calculation finished
2024-06-14 04:09:25 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-14 04:09:25 root INFO     [order_1_approx] starting weight calculation
2024-06-14 04:13:21 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 04:13:21 root INFO     [order_1_approx] weight calculation finished
2024-06-14 04:13:22 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-14 04:13:22 root INFO     [order_1_approx] starting weight calculation
2024-06-14 04:17:20 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 04:17:20 root INFO     [order_1_approx] weight calculation finished
2024-06-14 04:17:21 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-14 04:17:21 root INFO     [order_1_approx] starting weight calculation
2024-06-14 04:21:19 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 04:21:19 root INFO     [order_1_approx] weight calculation finished
2024-06-14 04:21:19 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-14 04:21:19 root INFO     total operator prediction time: 1908.8484315872192 seconds
2024-06-14 04:21:22 root INFO     [' window', ' bedroom', ' p', ' roof', ' st'] matches ['bedroom', 'room', 'bathroom', 'kitchen', 'kitchenette', 'living_room', 'pantry', 'toilet', 'shower_room'] is True
2024-06-14 04:21:22 root INFO     [' lawn', ' garden', ' lover', '\n', ' d'] matches ['feathers', 'plume', 'preen', 'croup', 'calamus', 'fowl', 'drumstick', 'syrinx', 'bill', 'rump', 'vane', 'barb', 'quill', 'shaft', 'pecker', 'pennon', 'feet', 'giblets', 'alula', 'talon', 'foot', 'pinion', 'wing', 'wishbone', 'nib', 'sac', 'giblet', 'furcula', 'bird', 'neb', 'feather', 'gland', 'oyster', 'thigh', 'plumage', 'web', 'hindquarters', 'beak', "parson's_nose", 'wishing_bone', "pope's_nose", 'spurious_wing', 'bastard_wing', 'croupe', 'air_sac', 'quill_feather', 'uropygium', "bird's_foot", 'uropygial', 'second_joint', 'uropygial_gland', 'preen_gland', 'flight_feather', 'dark_meat'] is False
2024-06-14 04:21:22 root INFO     [' lawn', ' garden', '\n', ' d', ' lover'] matches ['bristle', 'hold', 'shank', 'grip', 'handgrip', 'handle', 'head', 'stem'] is False
2024-06-14 04:21:22 root INFO     [' lawn', ' garden', ' d', ' lover', '\n'] matches ['seats', 'conductor', 'window', 'driver', 'roof'] is False
2024-06-14 04:21:22 root INFO     [' lawn', ' garden', '\n', ' lover', ' d'] matches ['bit'] is False
2024-06-14 04:21:22 root INFO     [' lawn', ' garden', ' d', ' lover', '\n'] matches ['engine', 'armrest', 'headrest', 'grille', 'hinge', 'tailpipe', 'suspension', 'hood', 'horn', 'hooter', 'petrol', 'pintle', 'trunk', 'floorboard', 'bar', 'gas', 'buffer', 'door', 'stabilizer', 'seat', 'window', 'exhaust', 'tailfin', 'back', 'luggage', 'pedal', 'cowling', 'seatbelt', 'high', 'wing', 'gasoline', 'fin', 'cowl', 'silencer', 'gun', 'compartment', 'rear', 'radiator', 'accessory', 'sunroof', 'roof', 'lights', 'bumper', 'glove', 'bag', 'cushion', 'backrest', 'accelerator', 'fender', 'third', 'throttle', 'bonnet', 'air', 'gear', 'muffler', 'mirror', 'shock', 'reverse', 'anti-sway_bar', 'tail_fin', 'accelerator_pedal', 'car_seat', 'automobile_horn', 'anti-sway', 'automobile_engine', 'gasoline_engine', 'car_door', 'shock_absorber', 'luggage_compartment', 'glove_compartment', 'bumper_guard', 'exhaust_system', 'first_gear', 'high_gear', 'rear_window', 'sunshine-roof', 'third_gear', 'air_bag', 'doorlock', 'petrol_engine', 'automobile_trunk', 'auto_accessory', 'inlet_manifold', 'horn_button', 'running_board', 'stabilizer_bar', 'motor_horn', 'exhaust_manifold', 'exhaust_pipe', 'radiator_grille', 'low_gear', 'flexible_joint', 'head_restraint', 'hood_ornament', 'exhaust_valve', 'car_mirror', 'gas_pedal', 'seat_belt', 'reverse_gear', 'car_horn', 'car_window', 'suspension_system'] is False
2024-06-14 04:21:22 root INFO     [' lawn', ' garden', ' lover', ' d', '\n'] matches ['donjon', 'tower', 'turret', 'gate', 'dungeon', 'moat', 'keep', 'great_hall'] is False
2024-06-14 04:21:22 root INFO     [' lawn', ' garden', ' lover', ' d', '\n'] matches ['whiskers', 'coat', 'paw', 'paws', 'fur', 'eyes', 'back', 'claws', 'tail', 'teeth'] is False
2024-06-14 04:21:22 root INFO     [' lawn', ' garden', ' d', ' lover', '\n'] matches ['seat', 'armrest', 'headrest', 'armrests', 'rest', 'pad', 'back', 'leg', 'backrest', 'legs'] is False
2024-06-14 04:21:22 root INFO     [' lawn', ' garden', ' lover', '\n', ' d'] matches ['altar', 'choir', 'vestry', 'transept', 'apse', 'sanctuary', 'rood', 'screen', 'bema', 'nave', 'tower', 'sacristy', 'corner', 'chancel', 'amen', 'chapel', 'apsis', 'side', 'narthex', 'presbytery', 'side_chapel', 'lady_chapel', 'church_tower', 'rood_screen', 'amen_corner'] is False
2024-06-14 04:21:22 root INFO     [' lawn', ' garden', '\n', ' d', ' lover'] matches ['teeth', 'shaft', 'grip', 'tooth', 'handle'] is False
2024-06-14 04:21:22 root INFO     [' lawn', ' garden', ' lover', '\n', ' d'] matches ['hour', 'forenoon', 'eventide', 'nanosecond', 'noonday', 'femtosecond', 'hr', 'minutes', 'microsecond', 'msec', 'time', 'midnight', 'sec', 'nighttime', 'min', 'morning', 'noon', 'evening', 'dark', 'picosecond', 'daytime', 'minute', 'daylight', 's', 'high', 'even', 'quarter', 'morn', 'noontide', 'second', 'afternoon', 'twelve', 'millisecond', 'midday', 'midafternoon', 'attosecond', 'night', 'morning_time', 'high_noon', 'half-hour', 'twelve_noon', 'late-night_hour', 'early-morning_hour', 'lights-out', '60_minutes', 'small_hours', '30_minutes', '15_minutes', 'quarter-hour'] is False
2024-06-14 04:21:22 root INFO     [' window', ' st', ' p', ' sp', ' roof'] matches ['antler', 'antlers', 'withers', 'flag', 'scut'] is False
2024-06-14 04:21:22 root INFO     [' lawn', ' garden', ' d', ' lover', '\n'] matches ['cent'] is False
2024-06-14 04:21:22 root INFO     [' lawn', ' garden', '\n', ' d', ' lover'] matches ['hinge', 'keyhole', 'threshold', 'doorframe', 'bolt', 'deadbolt', 'doorjamb', 'tumbler', 'doorpost', 'doorstep', 'doorcase', 'case', 'lock', 'casing', 'doorsill'] is False
2024-06-14 04:21:22 root INFO     [' lawn', ' garden', ' lover', ' d', '\n'] matches ['sleeve', 'slide', 'plastron', 'zip', 'zipper', 'fastener', 'hemline', 'bodice', 'neckline', 'waistline', 'belt', 'slide_fastener', 'zip_fastener'] is False
2024-06-14 04:21:22 root INFO     [' lawn', ' garden', ' lover', ' d', '\n'] matches ['extension', 'name'] is False
2024-06-14 04:21:22 root INFO     [' lawn', ' garden', ' d', ' lover', ' b'] matches ['petal', 'leaf', 'anther', 'style', 'perianth', 'placenta', 'stamen', 'pistil', 'ovary', 'corolla', 'carpel', 'envelope', 'sepal', 'calyx', 'stigma', 'chlamys', 'petals', 'corona', 'perigonium', 'perigone', 'flower_petal', 'floral_leaf', 'floral_envelope', 'gynostegium'] is False
2024-06-14 04:21:22 root INFO     [' window', ' st', ' p', ' ', ' sp'] matches ['megabit', 'kbit', 'kb', 'kilobit', 'mb', 'mbit'] is False
2024-06-14 04:21:22 root INFO     [' p', ' st', ' window', ' par', ' bell'] matches ['string', 'deck', 'pegs', 'fret', 'strings', 'frets', 'peg', 'fingerboard'] is True
2024-06-14 04:21:22 root INFO     [' lawn', ' garden', ' lover', ' d', '\n'] matches ['trigger', 'holder', 'safety', 'extractor', 'clip', 'magazine', 'barrel', 'hammer', 'viewfinder', 'gunsight', 'stock', 'cartridge', 'remover', 'chamber', 'ejector', 'cock', 'catch', 'finder', 'mechanism', 'gunstock', 'lock', 'action', 'muzzle', 'key', 'gunlock', 'cartridge_holder', 'gun_muzzle', 'gun-sight', 'action_mechanism', 'gun_chamber', 'gun_trigger', 'firing_mechanism', 'safety_lock', 'cartridge_extractor', 'firing_chamber', 'cartridge_ejector', 'view_finder', 'cartridge_clip', 'gun_barrel', 'safety_catch', 'cartridge_remover'] is False
2024-06-14 04:21:22 root INFO     [' window', ' st', ' p', ' roof', ' bell'] matches ['dock', 'facility', 'anchorage', 'landing', 'docking', 'dockage', 'anchorage_ground', 'docking_facility', 'landing_place', 'landing_stage'] is False
2024-06-14 04:21:22 root INFO     [' window', ' st', ' p', ' c', ' windows'] matches ['cell', 'cellblock', 'guard', 'police', 'prison_cell', 'jail_cell'] is False
2024-06-14 04:21:22 root INFO     [' st', ' m', ' sp', ' p', ' bell'] matches ['bead', 'stone', 'wire', 'beads', 'gemstone', 'gem', 'metal', 'gold', 'silver', 'platina', 'bead', 'beads', 'jewel'] is True
2024-06-14 04:21:22 root INFO     [' window', ' st', ' p', ' ', ' bell'] matches ['millilitre', 'cc', 'ml', 'milliliter', 'cl', 'dl', 'deciliter', 'mil', 'cubic_centimetre', 'centiliter', 'decilitre', 'cubic_centimeter', 'centilitre', 'cubic_millimeter', 'cubic_millimetre'] is False
2024-06-14 04:21:22 root INFO     [' lawn', ' garden', ' d', ' lover', ' b'] matches ['scene', 'subtitles', 'footage', 'credit', 'episode', 'shot', 'sequence', 'credits', 'caption'] is False
2024-06-14 04:21:22 root INFO     [' window', ' p', ' ', ' st', ' windows'] matches ['hyphenation', 'punctuation', 'punctuation_mark', 'word_division', 'spelling'] is False
2024-06-14 04:21:22 root INFO     [' window', ' p', ' piano', ' roof', ' music'] matches ['keyboard', 'clavier', 'loud', 'hammer', 'sounding', 'pedal', 'sustaining', 'soft', 'fingerboard', 'soundboard', 'action', 'board', 'key', 'fallboard', 'piano_action', 'action_mechanism', 'damper_block', 'fall-board', 'sounding_board', 'sustaining_pedal', 'loud_pedal', 'piano_damper', 'piano_keyboard', 'sound_hole', 'soft_pedal'] is True
2024-06-14 04:21:22 root INFO     [' lawn', ' garden', ' d', ' b', ' lover'] matches ['crust', 'cheese', 'filling', 'fruit', 'apple', 'berries', 'glazing', 'pastry', 'icing'] is False
2024-06-14 04:21:22 root INFO     [' window', ' st', ' p', ' bell', ' '] matches ['stanza', 'canto', 'prosody', 'rime', 'line', 'rhyme', 'verse', 'poetic_rhythm', 'rhythmic_pattern', 'verse_line', 'line_of_verse', 'line_of_poetry'] is True
2024-06-14 04:21:22 root INFO     [' lawn', ' garden', ' d', ' lover', ' b'] matches ['bar', 'barroom', 'taproom', 'saloon', 'ginmill'] is False
2024-06-14 04:21:22 root INFO     [' lawn', ' garden', ' d', ' lover', '\n'] matches ['receiver', 'tuner', 'radio', 'demodulator', 'transmitter', 'detector', 'receiving', 'set', 'amplifier', 'wireless', 'radio_transmitter', 'receiving_set', 'radio_receiver', 'radio_set'] is False
2024-06-14 04:21:22 root INFO     [' st', ' window', ' p', ' ', ' m'] matches ['harbor', 'seaport', 'dock', 'haven', 'anchorage', 'landing', 'harbour', 'dockage', 'anchorage_ground', 'docking_facility', 'landing_place', 'landing_stage'] is False
2024-06-14 04:21:22 root INFO     [' lawn', ' garden', ' d', '\n', ' lover'] matches ['button', 'dickie', 'collar', 'dickey', 'sleeve', 'buttons', 'dicky', 'pocket', 'shirttail', 'shirtsleeve', 'shirtfront', 'shirt_button'] is False
2024-06-14 04:21:22 root INFO     [' st', ' window', ' p', ' roof', ' '] matches ['movement', 'part'] is False
2024-06-14 04:21:22 root INFO     [' window', ' roof', ' p', ' st', ' '] matches ['step', 'riser', 'landing', 'tread', 'stair', 'stairhead'] is True
2024-06-14 04:21:22 root INFO     [' lawn', ' garden', '\n', ' lover', ' d'] matches ['blade', 'forte', 'hilt', 'peak', 'foible', 'point', 'pommel', 'haft', 'tip', 'knob', 'helve', 'knife_edge', 'cutting_edge'] is False
2024-06-14 04:21:22 root INFO     [' lawn', ' garden', ' d', ' lover', '\n'] matches ['tabletop', 'tableware', 'leg', 'legs'] is False
2024-06-14 04:21:22 root INFO     [' window', ' st', ' roof', ' bell', ' sp'] matches ['spout', 'handle', 'knob', 'lid', 'body', 'belly', 'base', 'filter', 'tea_filter'] is True
2024-06-14 04:21:22 root INFO     [' p', ' st', ' window', ' bell', ' par'] matches ['receiver', 'mouthpiece', 'dial', 'wire', 'screen', 'display', 'telephone_receiver'] is False
2024-06-14 04:21:22 root INFO     [' window', ' st', ' ', ' p', ' bell'] matches ['kilogram', 'mg', 'gm', 'hg', 'grain', 'milligram', 'hundredweight', 'kilo', 'mcg', 'dag', 'carat', 'microgram', 'gramme', 'quintal', 'ng', 'gram', 'dg', 'g', 'kg', 'decigram', 'nanogram', 'myriagram', 'centner', 'metric_grain', 'myg', 'dekagram', 'decagram', 'metric_hundredweight', 'obolus', 'doppelzentner', 'hectogram', 'dkg'] is False
2024-06-14 04:21:22 root INFO     [' st', ' p', ' ', ' m', ' window'] matches ['chest', 'arse', 'shoulder', 'bum', 'midriff', 'groin', 'deltoid', 'diaphragm', 'lat', 'pectoralis', 'behind', 'gluteus', 'middle', 'stomach', 'teres', 'thorax', 'tush', 'ab', 'rump', 'breastbone', 'buns', 'gladiolus', 'haunch', 'backside', 'buttocks', 'serratus', 'pectoral', 'stern', 'navel', 'paunch', 'seat', 'mediastinum', 'ass', 'axilla', 'back', 'belly', 'bottom', 'omphalos', 'fundament', 'acromion', 'derriere', 'hindgut', 'gut', 'gallbladder', 'saddle', 'cheek', 'waist', 'butt', 'bowel', 'keister', 'bellybutton', 'pectus', 'prat', 'loins', 'abdominal', 'rear', 'dorsum', 'posterior', 'venter', 'small', 'abdomen', 'umbilicus', 'armpit', 'waistline', 'sternum', 'scapula', 'glute', 'manubrium', 'fanny', 'side', 'midsection', 'pecs', 'hip', 'buttock', 'intestine', 'breast', 'can', 'tail', 'hindquarters', 'xiphoid_process', 'thoracic_vertebra', 'abdominal_wall', 'musculus_deltoideus', 'abdominal_cavity', 'arteria_circumflexa_scapulae', 'arteria_glutes', 'arteria_axillaris', 'axillary_fossa', 'arteria_colica', 'articulatio_humeri', 'shoulder_joint', 'gall_bladder', 'spare_tire', 'arteria_circumflexa_humeri', 'serratus_muscles', 'axillary_artery', 'gluteus_muscle', 'love_handle', 'latissimus_dorsi', 'pectoral_muscle', 'tooshie', 'abdominal_muscle', 'circumflex_humeral_artery', 'abdominal_aorta', 'vena_thoracica', 'musculus_pectoralis', 'hypochondrium', 'area_of_cardiac_dullness', 'glenoid_cavity', 'rib_cage', 'thoracic_aorta', 'omphalus', 'circumflex_scapular_artery', 'acromial_process', 'shoulder_bone', 'tail_end', 'rear_end', 'gluteal_muscle', 'inguen', 'shoulder_blade', 'rotator_cuff', 'corpus_sternum', 'dorsal_vertebra', 'teres_muscle', 'thoracic_cavity', 'axillary_cavity', 'chest_cavity', 'deltoid_muscle', 'belly_button', 'gluteal_artery', 'thoracic_vein', 'glenoid_fossa', 'nates', 'colic_artery', 'lumbar_vertebra', 'hind_end'] is True
2024-06-14 04:21:22 root INFO     [' window', ' st', ' bell', ' sp', ' p'] matches ['leg', 'stand'] is True
2024-06-14 04:21:22 root INFO     [' window', ' p', ' st', ' roof', ' bell'] matches ['keyboard', 'typewriter', 'carriage', 'tab', 'ribbon', 'shift', 'backspace', 'action', 'key', 'typewriter_carriage', 'backspace_key', 'action_mechanism', 'typewriter_keyboard', 'shift_key', 'space_bar', 'tab_key', 'typewriter_ribbon', 'backspacer'] is False
2024-06-14 04:21:22 root INFO     [' lawn', ' garden', ' lover', '\n', ' d'] matches ['pane', 'sash', 'windowpane', 'window', 'fastener', 'glass', 'frame', 'case', 'windowsill', 'mullion', 'jamb', 'lock', 'casing', 'sash_lock', 'window_glass', 'sash_fastener', 'pane_of_glass', 'window_lock', 'window_sash', 'window_frame'] is False
2024-06-14 04:21:22 root INFO     meronyms - part,50,456,583

2024-06-14 04:21:22 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='synonyms - exact', prompt_templates=['Another word for {} is ', 'Another way to say {} is', 'A different manner of saying {} is'], prompt_templates_zs=['Another word for {} is ', 'Another way to say {} is', 'A different manner of saying {} is'], samples=[RelationSample(subject='airplane', object=['aeroplane', 'plane']), RelationSample(subject='auto', object=['car', 'automobile', 'motorcar']), RelationSample(subject='baby', object=['infant', 'babe']), RelationSample(subject='bicycle', object=['bike', 'wheel', 'cycle']), RelationSample(subject='child', object=['kid', 'youngster', 'minor', 'shaver', 'nipper', 'small_fry', 'tiddler', 'tike', 'tyke', 'fry', 'nestling']), RelationSample(subject='cloth', object=['fabric', 'material', 'textile']), RelationSample(subject='clothes', object=['clothing', 'apparel', 'dress']), RelationSample(subject='confused', object=['baffled', 'befuddled', 'bemused', 'bewildered', 'confounded', 'lost', 'mazed', 'mixed-up']), RelationSample(subject='dollars', object=['bucks']), RelationSample(subject='emphasis', object=['accent', 'accentuaion', 'importance', 'stress', 'significance']), RelationSample(subject='father', object=['dad', 'daddy']), RelationSample(subject='flower', object=['blossom', 'bloom']), RelationSample(subject='harbor', object=['seaport', 'haven', 'harbour']), RelationSample(subject='help', object=['aid', 'assist']), RelationSample(subject='hieroglyph', object=['hieroglyphic', 'pictogram']), RelationSample(subject='homogeneous', object=['uniform', 'unvarying']), RelationSample(subject='honest', object=['sincere', 'ingenuous', 'true', 'direct', 'truthful']), RelationSample(subject='identical', object=['same', 'indistinguishable']), RelationSample(subject='incorrect', object=['wrong', 'counterfactual', 'erroneous', 'inaccurate', 'specious', 'unsound', 'untrue', 'false']), RelationSample(subject='intelligent', object=['clever', 'smart']), RelationSample(subject='jewel', object=['gem', 'stone']), RelationSample(subject='lad', object=['chap', 'fellow', 'feller', 'fella', 'gent', 'blighter', 'cuss', 'bloke']), RelationSample(subject='lady', object=['madam', 'dame', "ma'am", 'gentlewoman', 'madame', 'woman']), RelationSample(subject='lazy', object=['indolent', 'faineant', 'otiose', 'slothful', 'work-shy']), RelationSample(subject='list', object=['listing', 'enumeration']), RelationSample(subject='loyal', object=['faithful', 'true', 'dependable', 'devoted', 'reliable']), RelationSample(subject='market', object=['marketplace', 'mart', 'bazaar']), RelationSample(subject='mend', object=['repair', 'fix', 'fixing', 'fixture', 'mending', 'reparation', 'patch', 'darn', 'darning']), RelationSample(subject='mesh', object=['gauze', 'netting', 'veiling', 'hairnet', 'reseau', 'net', 'save-all', 'snood', 'sparker', 'tulle', 'wirework', 'grillwork']), RelationSample(subject='monument', object=['memorial']), RelationSample(subject='mother', object=['mom', 'mommy', 'mum']), RelationSample(subject='murder', object=['slaying', 'slay', 'execution']), RelationSample(subject='new', object=['modern', 'recent']), RelationSample(subject='obsolete', object=['outdated', 'out-of-date', 'superannuated']), RelationSample(subject='organized', object=['arranged', 'configured', 'corporate', 'incorporated', 're-formed', 'reorganized', 'reorganised']), RelationSample(subject='package', object=['parcel', 'pack', 'packet', 'bundle']), RelationSample(subject='phone', object=['telephone', 'cell', 'cellphone', 'smartphone']), RelationSample(subject='portion', object=['part', 'component_part', 'component', 'constituent']), RelationSample(subject='railway', object=['railroad']), RelationSample(subject='rational', object=['logical', 'coherent', 'reasonable', 'sane']), RelationSample(subject='reasonable', object=['sensible']), RelationSample(subject='rock', object=['stone']), RelationSample(subject='shore', object=['coast', 'strand', 'bank', 'beach', '']), RelationSample(subject='snake', object=['serpent', 'ophidian']), RelationSample(subject='sofa', object=['couch', 'lounge']), RelationSample(subject='spouse', object=['partner', 'mate', 'better_half']), RelationSample(subject='style', object=['manner', 'mode', 'fashion', 'way']), RelationSample(subject='sweets', object=['confectionery', 'dessert', 'confection']), RelationSample(subject='villain', object=['scoundrel', 'rascal']), RelationSample(subject='vocabulary', object=['lexicon', 'wordbook', 'dictionary', 'glossary'])], _domain=None, _range=None)
2024-06-14 04:21:24 root INFO     starting operator prediction
2024-06-14 04:21:24 root INFO     using no context
2024-06-14 04:21:24 root INFO     [order_1_approx] starting weight calculation
2024-06-14 04:25:24 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 04:25:24 root INFO     [order_1_approx] weight calculation finished
2024-06-14 04:25:25 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-14 04:25:25 root INFO     [order_1_approx] starting weight calculation
2024-06-14 04:29:24 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 04:29:24 root INFO     [order_1_approx] weight calculation finished
2024-06-14 04:29:25 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-14 04:29:25 root INFO     [order_1_approx] starting weight calculation
2024-06-14 04:33:22 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 04:33:22 root INFO     [order_1_approx] weight calculation finished
2024-06-14 04:33:23 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-14 04:33:23 root INFO     [order_1_approx] starting weight calculation
2024-06-14 04:37:21 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 04:37:21 root INFO     [order_1_approx] weight calculation finished
2024-06-14 04:37:22 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-14 04:37:22 root INFO     [order_1_approx] starting weight calculation
2024-06-14 04:41:20 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 04:41:20 root INFO     [order_1_approx] weight calculation finished
2024-06-14 04:41:20 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-14 04:41:21 root INFO     [order_1_approx] starting weight calculation
2024-06-14 04:45:18 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 04:45:18 root INFO     [order_1_approx] weight calculation finished
2024-06-14 04:45:19 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-14 04:45:19 root INFO     [order_1_approx] starting weight calculation
2024-06-14 04:49:18 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 04:49:18 root INFO     [order_1_approx] weight calculation finished
2024-06-14 04:49:19 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-14 04:49:19 root INFO     [order_1_approx] starting weight calculation
2024-06-14 04:53:17 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 04:53:17 root INFO     [order_1_approx] weight calculation finished
2024-06-14 04:53:18 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-14 04:53:18 root INFO     total operator prediction time: 1914.064644575119 seconds
2024-06-14 04:53:21 root INFO     [' ', ' m', ' d', ' l', ' a'] matches ['aeroplane', 'plane'] is False
2024-06-14 04:53:21 root INFO     [' t', 'ubb', ' m', ' res', ' cob'] matches ['car', 'automobile', 'motorcar'] is False
2024-06-14 04:53:21 root INFO     [' t', 'ubb', ' m', ' cob', ' res'] matches ['infant', 'babe'] is False
2024-06-14 04:53:21 root INFO     [' ', ' m', ' d', ' l', ' b'] matches ['bike', 'wheel', 'cycle'] is False
2024-06-14 04:53:21 root INFO     [' t', 'ubb', ' m', ' cob', ' res'] matches ['fabric', 'material', 'textile'] is False
2024-06-14 04:53:21 root INFO     [' ', ' d', ' t', ' l', ' m'] matches ['clothing', 'apparel', 'dress'] is False
2024-06-14 04:53:21 root INFO     [' ', ' d', ' m', ' l', ' g'] matches ['baffled', 'befuddled', 'bemused', 'bewildered', 'confounded', 'lost', 'mazed', 'mixed-up'] is False
2024-06-14 04:53:21 root INFO     [' t', 'ubb', ' m', ' cob', ' res'] matches ['accent', 'accentuaion', 'importance', 'stress', 'significance'] is False
2024-06-14 04:53:21 root INFO     [' t', 'ubb', ' m', ' cob', ' res'] matches ['dad', 'daddy'] is False
2024-06-14 04:53:21 root INFO     [' t', 'ubb', ' m', ' cob', ' res'] matches ['blossom', 'bloom'] is False
2024-06-14 04:53:21 root INFO     [' t', 'ubb', ' m', ' cob', ' res'] matches ['aid', 'assist'] is False
2024-06-14 04:53:21 root INFO     [' ', ' d', ' p', ' g', ' t'] matches ['hieroglyphic', 'pictogram'] is False
2024-06-14 04:53:21 root INFO     [' ', ' d', ' m', ' l', ' g'] matches ['uniform', 'unvarying'] is False
2024-06-14 04:53:21 root INFO     [' ', ' d', ' m', ' l', ' real'] matches ['sincere', 'ingenuous', 'true', 'direct', 'truthful'] is False
2024-06-14 04:53:21 root INFO     [' ', ' d', ' m', ' same', ' t'] matches ['same', 'indistinguishable'] is True
2024-06-14 04:53:21 root INFO     [' ', ' m', ' d', ' t', ' a'] matches ['wrong', 'counterfactual', 'erroneous', 'inaccurate', 'specious', 'unsound', 'untrue', 'false'] is False
2024-06-14 04:53:21 root INFO     [' ', ' m', ' d', ' smart', ' g'] matches ['clever', 'smart'] is True
2024-06-14 04:53:21 root INFO     [' ', ' d', ' l', ' g', ' w'] matches ['gem', 'stone'] is False
2024-06-14 04:53:21 root INFO     [' ', ' d', ' l', ' m', ' g'] matches ['madam', 'dame', "ma'am", 'gentlewoman', 'madame', 'woman'] is False
2024-06-14 04:53:21 root INFO     [' ', ' d', ' l', ' t', ' g'] matches ['indolent', 'faineant', 'otiose', 'slothful', 'work-shy'] is False
2024-06-14 04:53:21 root INFO     ['ubb', ' t', ' m', ' cob', 'With'] matches ['listing', 'enumeration'] is False
2024-06-14 04:53:21 root INFO     [' ', ' l', ' d', ' m', ' g'] matches ['faithful', 'true', 'dependable', 'devoted', 'reliable'] is False
2024-06-14 04:53:21 root INFO     [' t', 'ubb', ' m', ' cob', ' res'] matches ['marketplace', 'mart', 'bazaar'] is False
2024-06-14 04:53:21 root INFO     [' ', ' d', ' m', ' l', ' one'] matches ['repair', 'fix', 'fixing', 'fixture', 'mending', 'reparation', 'patch', 'darn', 'darning'] is False
2024-06-14 04:53:21 root INFO     [' ', ' d', ' l', ' g', ' t'] matches ['gauze', 'netting', 'veiling', 'hairnet', 'reseau', 'net', 'save-all', 'snood', 'sparker', 'tulle', 'wirework', 'grillwork'] is False
2024-06-14 04:53:21 root INFO     [' ', ' d', ' m', ' g', ' t'] matches ['memorial'] is False
2024-06-14 04:53:21 root INFO     [' t', 'ubb', ' m', ' cob', ' res'] matches ['mom', 'mommy', 'mum'] is False
2024-06-14 04:53:21 root INFO     [' t', 'ubb', ' m', ' cob', ' res'] matches ['modern', 'recent'] is False
2024-06-14 04:53:21 root INFO     [' ', ' m', ' d', ' t', ' l'] matches ['outdated', 'out-of-date', 'superannuated'] is False
2024-06-14 04:53:21 root INFO     [' t', 'ubb', ' m', ' res', ' cob'] matches ['parcel', 'pack', 'packet', 'bundle'] is False
2024-06-14 04:53:21 root INFO     [' t', 'ubb', ' m', ' cob', ' res'] matches ['telephone', 'cell', 'cellphone', 'smartphone'] is False
2024-06-14 04:53:21 root INFO     [' ', ' d', ' t', ' l', ' g'] matches ['railroad'] is False
2024-06-14 04:53:21 root INFO     [' t', 'ubb', ' m', ' cob', ' res'] matches ['logical', 'coherent', 'reasonable', 'sane'] is False
2024-06-14 04:53:21 root INFO     [' t', 'ubb', ' m', ' cob', ' res'] matches ['stone'] is False
2024-06-14 04:53:21 root INFO     [' t', 'ubb', ' m', ' cob', ' res'] matches ['coast', 'strand', 'bank', 'beach', ''] is False
2024-06-14 04:53:21 root INFO     [' ', ' d', ' l', ' s', ' g'] matches ['serpent', 'ophidian'] is False
2024-06-14 04:53:21 root INFO     [' ', ' d', ' l', ' m', ' p'] matches ['couch', 'lounge'] is False
2024-06-14 04:53:21 root INFO     [' ', ' d', ' m', ' p', ' t'] matches ['partner', 'mate', 'better_half'] is False
2024-06-14 04:53:21 root INFO     [' t', 'ubb', ' m', ' cob', ' res'] matches ['manner', 'mode', 'fashion', 'way'] is False
2024-06-14 04:53:21 root INFO     [' ', ' d', ' t', ' l', ' c'] matches ['confectionery', 'dessert', 'confection'] is False
2024-06-14 04:53:21 root INFO     [' ', ' d', ' m', ' l', ' t'] matches ['scoundrel', 'rascal'] is False
2024-06-14 04:53:21 root INFO     [' ', ' d', ' t', ' m', ' l'] matches ['lexicon', 'wordbook', 'dictionary', 'glossary'] is False
2024-06-14 04:53:21 root INFO     synonyms - exact,50,458,623

2024-06-14 04:53:21 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='synonyms - intensity', prompt_templates=['A more intense word for {} is ', 'A more extreme version of {} is ', 'An intensified form of {} is '], prompt_templates_zs=['A more intense word for {} is ', 'A more extreme version of {} is ', 'An intensified form of {} is '], samples=[RelationSample(subject='afraid', object=['terrified', 'horrified', 'scared', 'stiff', 'petrified', 'fearful', 'panicky']), RelationSample(subject='angry', object=['furious', 'enraged', 'outraged', 'aggrivated', 'irate', 'seething']), RelationSample(subject='ask', object=['beg', 'implore', 'pray', 'entreat', 'supplicate', 'insist']), RelationSample(subject='bad', object=['awful', 'atrocious', 'abominable', 'dreadful', 'painful', 'terrible', 'unspeakable']), RelationSample(subject='boring', object=['tedious', 'deadening', 'dull', 'ho-hum', 'irksome', 'tiresome', 'wearisome']), RelationSample(subject='cat', object=['lion', 'tiger', 'leopard', 'panther', 'jaguar']), RelationSample(subject='chuckle', object=['laugh', 'guffaw', 'chortle', 'guffaw', 'snicker', 'snigger', 'titter', 'roar']), RelationSample(subject='confused', object=['lost', 'bewildered', 'trapped', 'desperate']), RelationSample(subject='creative', object=['ingenious', 'inventive', 'demiurgic', 'deviceful', 'innovational', 'innovative', 'innovatory', 'original', 'originative']), RelationSample(subject='cry', object=['scream', 'shriek', 'screech', 'screeching']), RelationSample(subject='damp', object=['drenched', 'dripping', 'saturated', 'soaked', 'soaking', 'sodden', 'sopping', 'soppy', 'soused', 'wringing-wet']), RelationSample(subject='dinner', object=['feast', 'banquet', 'fiesta']), RelationSample(subject='dislike', object=['hate', 'abhor', 'detest', 'loathe', 'abominate', 'execrate', 'contemn', 'despise', 'scorn', 'disdain']), RelationSample(subject='doze', object=['sleep', 'slumber']), RelationSample(subject='drizzle', object=['rain', 'shower', 'raifall', 'deluge']), RelationSample(subject='excited', object=['agitated', 'nervous']), RelationSample(subject='faith', object=['fanatism', 'fanaticism', 'zealotry']), RelationSample(subject='giggle', object=['laugh', 'guffaw', 'chortle', 'guffaw', 'snicker', 'snigger', 'titter', 'roar']), RelationSample(subject='guilty', object=['remorseful', 'sorrowful', 'unworthy']), RelationSample(subject='happy', object=['ecstatic', 'enraptured', 'rapturous', 'rapt', 'rhapsodic']), RelationSample(subject='house', object=['palace', 'castle']), RelationSample(subject='hungry', object=['starving', 'famished', 'peckish', 'ravenous', 'starved']), RelationSample(subject='indulge', object=['pamper', 'spoil', 'coddle']), RelationSample(subject='interesting', object=['exciting', 'exhilarant', 'exhilarating', 'exhilarative', 'eye-popping', 'inspiring', 'intoxicating', 'rousing', 'stimulating', 'stirring', 'arresting', 'interesting', 'intriguing', 'moving', 'provocative', 'heady', 'thrilling']), RelationSample(subject='irritate', object=['enrage', 'incense', 'infuriate', 'ire', 'mad', 'madden', 'steam', 'umbrage']), RelationSample(subject='jog', object=['run', 'scarper', 'flee', 'fly']), RelationSample(subject='lake', object=['sea', 'ocean']), RelationSample(subject='like', object=['love', 'care', 'fond', 'crush', 'infatuate']), RelationSample(subject='love', object=['adore', 'fetishize', 'idolize', 'idolise', 'worship', 'hero-worship', 'revere']), RelationSample(subject='monkey', object=['gorilla']), RelationSample(subject='nap', object=['sleep', 'slumber']), RelationSample(subject='necessary', object=['essential', 'indispensable', 'vital', 'required']), RelationSample(subject='opposed', object=['averse', 'antipathetic', 'antipathetical', 'indisposed', 'loath', 'loth']), RelationSample(subject='pain', object=['torment', 'torture', 'agony']), RelationSample(subject='pony', object=['horse']), RelationSample(subject='poorly', object=['afflicted', 'sick', 'ill', 'stricken']), RelationSample(subject='rain', object=['deluge', 'shower']), RelationSample(subject='sad', object=['desparate', 'despondent', 'despairing', 'desponding', 'forlorn', 'hopeless', 'melancholy']), RelationSample(subject='sea', object=['ocean']), RelationSample(subject='snack', object=['meal', 'eat']), RelationSample(subject='sniffles', object=['pneumonia']), RelationSample(subject='soon', object=['immediately', 'promptly', 'straightaway']), RelationSample(subject='strong', object=['powerful', 'forceful', 'super', 'potent']), RelationSample(subject='tasty', object=['delicious', 'delectable', 'luscious', 'pleasant-tasting', 'scrumptious', 'toothsome', 'yummy', 'mouth-watering', 'ambrosial', 'heavenly']), RelationSample(subject='tired', object=['exhausted', 'drained']), RelationSample(subject='unfortunate', object=['tragic', 'woeful', 'grievous', 'wretched', 'miserable', 'awful', 'lamentable', 'regrettable', 'desperate', 'hopeless', 'disastrous']), RelationSample(subject='unhappy', object=['miserable', 'suffering', 'wretched']), RelationSample(subject='want', object=['crave', 'hunger', 'thirst', 'starve', 'lust']), RelationSample(subject='warm', object=['hot', 'fiery', 'flaming', 'heated', 'red-hot', 'sizzling', 'sensual', 'sultry', 'torrid', 'white-hot']), RelationSample(subject='well', object=['flourishing', 'robust', 'booming', 'prospering', 'prosperous', 'thriving'])], _domain=None, _range=None)
2024-06-14 04:53:23 root INFO     starting operator prediction
2024-06-14 04:53:23 root INFO     using no context
2024-06-14 04:53:23 root INFO     [order_1_approx] starting weight calculation
2024-06-14 04:57:22 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 04:57:22 root INFO     [order_1_approx] weight calculation finished
2024-06-14 04:57:23 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-14 04:57:23 root INFO     [order_1_approx] starting weight calculation
2024-06-14 05:01:22 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 05:01:22 root INFO     [order_1_approx] weight calculation finished
2024-06-14 05:01:23 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-14 05:01:23 root INFO     [order_1_approx] starting weight calculation
2024-06-14 05:05:20 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 05:05:20 root INFO     [order_1_approx] weight calculation finished
2024-06-14 05:05:21 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-14 05:05:21 root INFO     [order_1_approx] starting weight calculation
2024-06-14 05:09:19 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 05:09:19 root INFO     [order_1_approx] weight calculation finished
2024-06-14 05:09:19 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-14 05:09:19 root INFO     [order_1_approx] starting weight calculation
2024-06-14 05:13:17 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 05:13:17 root INFO     [order_1_approx] weight calculation finished
2024-06-14 05:13:18 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-14 05:13:18 root INFO     [order_1_approx] starting weight calculation
2024-06-14 05:17:17 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 05:17:17 root INFO     [order_1_approx] weight calculation finished
2024-06-14 05:17:18 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-14 05:17:18 root INFO     [order_1_approx] starting weight calculation
2024-06-14 05:21:15 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 05:21:15 root INFO     [order_1_approx] weight calculation finished
2024-06-14 05:21:16 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-14 05:21:16 root INFO     [order_1_approx] starting weight calculation
2024-06-14 05:25:13 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 05:25:13 root INFO     [order_1_approx] weight calculation finished
2024-06-14 05:25:14 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-14 05:25:14 root INFO     total operator prediction time: 1910.5213532447815 seconds
2024-06-14 05:25:16 root INFO     [' afraid', ' scared', ' ', ' g', ' frightened'] matches ['terrified', 'horrified', 'scared', 'stiff', 'petrified', 'fearful', 'panicky'] is True
2024-06-14 05:25:16 root INFO     [' angry', ' upset', ' g', ' annoyed', ' mad'] matches ['furious', 'enraged', 'outraged', 'aggrivated', 'irate', 'seething'] is False
2024-06-14 05:25:16 root INFO     [' gossip', ' sed', 'c', ' sexually', ' hum'] matches ['beg', 'implore', 'pray', 'entreat', 'supplicate', 'insist'] is False
2024-06-14 05:25:16 root INFO     [' gossip', ' sed', 'c', ' hum', ' sexually'] matches ['awful', 'atrocious', 'abominable', 'dreadful', 'painful', 'terrible', 'unspeakable'] is False
2024-06-14 05:25:16 root INFO     [' bored', ' ', ' g', ' enjoy', ' delighted'] matches ['tedious', 'deadening', 'dull', 'ho-hum', 'irksome', 'tiresome', 'wearisome'] is False
2024-06-14 05:25:16 root INFO     [' ', ' g', ' happy', ' m', ' enjoy'] matches ['laugh', 'guffaw', 'chortle', 'guffaw', 'snicker', 'snigger', 'titter', 'roar'] is False
2024-06-14 05:25:16 root INFO     [' bored', ' delighted', ' annoyed', ' confused', ' angry'] matches ['lost', 'bewildered', 'trapped', 'desperate'] is False
2024-06-14 05:25:16 root INFO     [' ', ' enjoy', ' bored', ' g', ' happy'] matches ['ingenious', 'inventive', 'demiurgic', 'deviceful', 'innovational', 'innovative', 'innovatory', 'original', 'originative'] is False
2024-06-14 05:25:16 root INFO     [' gossip', ' sed', 'c', ' gir', ' hum'] matches ['scream', 'shriek', 'screech', 'screeching'] is False
2024-06-14 05:25:16 root INFO     [' g', ' ', ' d', ' m', ' enjoy'] matches ['feast', 'banquet', 'fiesta'] is False
2024-06-14 05:25:16 root INFO     [' enjoy', ' dislike', ' love', ' g', ' '] matches ['hate', 'abhor', 'detest', 'loathe', 'abominate', 'execrate', 'contemn', 'despise', 'scorn', 'disdain'] is False
2024-06-14 05:25:16 root INFO     [' ', ' g', ' d', ' m', ' enjoy'] matches ['sleep', 'slumber'] is False
2024-06-14 05:25:16 root INFO     [' ', ' g', ' d', ' m', ' enjoy'] matches ['rain', 'shower', 'raifall', 'deluge'] is False
2024-06-14 05:25:16 root INFO     [' g', ' happy', ' ', ' enjoy', ' be'] matches ['laugh', 'guffaw', 'chortle', 'guffaw', 'snicker', 'snigger', 'titter', 'roar'] is False
2024-06-14 05:25:16 root INFO     [' g', ' happy', ' ', ' angry', ' sad'] matches ['remorseful', 'sorrowful', 'unworthy'] is False
2024-06-14 05:25:16 root INFO     [' g', ' ', ' be', ' d', ' enjoy'] matches ['palace', 'castle'] is False
2024-06-14 05:25:16 root INFO     [' hungry', ' g', ' ', ' thirsty', ' d'] matches ['starving', 'famished', 'peckish', 'ravenous', 'starved'] is False
2024-06-14 05:25:16 root INFO     [' gossip', ' sed', 'c', ' hum', ' sexually'] matches ['exciting', 'exhilarant', 'exhilarating', 'exhilarative', 'eye-popping', 'inspiring', 'intoxicating', 'rousing', 'stimulating', 'stirring', 'arresting', 'interesting', 'intriguing', 'moving', 'provocative', 'heady', 'thrilling'] is False
2024-06-14 05:25:16 root INFO     [' ', ' enjoy', ' g', ' be', ' m'] matches ['enrage', 'incense', 'infuriate', 'ire', 'mad', 'madden', 'steam', 'umbrage'] is False
2024-06-14 05:25:16 root INFO     [' ', ' g', ' m', ' enjoy', ' happy'] matches ['run', 'scarper', 'flee', 'fly'] is False
2024-06-14 05:25:16 root INFO     [' gossip', ' sed', ' sexually', 'c', ' hum'] matches ['sea', 'ocean'] is False
2024-06-14 05:25:16 root INFO     [' gossip', ' sed', 'c', ' gir', ' sexually'] matches ['love', 'care', 'fond', 'crush', 'infatuate'] is False
2024-06-14 05:25:16 root INFO     [' gossip', ' sed', 'c', ' sexually', ' gir'] matches ['adore', 'fetishize', 'idolize', 'idolise', 'worship', 'hero-worship', 'revere'] is False
2024-06-14 05:25:16 root INFO     [' gossip', ' sed', ' gir', 'c', ' hum'] matches ['gorilla'] is False
2024-06-14 05:25:16 root INFO     [' ', ' g', ' enjoy', ' d', ' m'] matches ['sleep', 'slumber'] is False
2024-06-14 05:25:16 root INFO     [' gossip', ' sed', 'c', ' sexually', ' gir'] matches ['essential', 'indispensable', 'vital', 'required'] is False
2024-06-14 05:25:16 root INFO     [' gossip', ' sed', 'c', ' sexually', ' gir'] matches ['torment', 'torture', 'agony'] is False
2024-06-14 05:25:16 root INFO     [' ', ' g', ' d', ' m', ' j'] matches ['horse'] is False
2024-06-14 05:25:16 root INFO     [' ', ' g', ' enjoy', ' m', ' be'] matches ['afflicted', 'sick', 'ill', 'stricken'] is False
2024-06-14 05:25:16 root INFO     [' gossip', ' sed', 'c', ' gir', ' sexually'] matches ['deluge', 'shower'] is False
2024-06-14 05:25:16 root INFO     [' happy', ' g', ' sad', ' delighted', ' upset'] matches ['desparate', 'despondent', 'despairing', 'desponding', 'forlorn', 'hopeless', 'melancholy'] is False
2024-06-14 05:25:16 root INFO     [' gossip', ' sed', 'c', ' gir', ' sexually'] matches ['ocean'] is False
2024-06-14 05:25:16 root INFO     [' ', ' g', ' enjoy', ' m', ' d'] matches ['meal', 'eat'] is False
2024-06-14 05:25:16 root INFO     [' gossip', ' sed', ' hum', 'c', ' sexually'] matches ['immediately', 'promptly', 'straightaway'] is False
2024-06-14 05:25:16 root INFO     [' gossip', ' sed', 'c', ' sexually', ' hum'] matches ['powerful', 'forceful', 'super', 'potent'] is False
2024-06-14 05:25:16 root INFO     [' ', ' g', ' enjoy', ' m', ' d'] matches ['delicious', 'delectable', 'luscious', 'pleasant-tasting', 'scrumptious', 'toothsome', 'yummy', 'mouth-watering', 'ambrosial', 'heavenly'] is False
2024-06-14 05:25:16 root INFO     [' tired', ' bored', ' exhausted', ' excited', ' happy'] matches ['exhausted', 'drained'] is True
2024-06-14 05:25:16 root INFO     [' ', ' g', ' happy', ' be', ' unhappy'] matches ['tragic', 'woeful', 'grievous', 'wretched', 'miserable', 'awful', 'lamentable', 'regrettable', 'desperate', 'hopeless', 'disastrous'] is False
2024-06-14 05:25:16 root INFO     [' happy', ' unhappy', ' sad', ' delighted', ' upset'] matches ['miserable', 'suffering', 'wretched'] is False
2024-06-14 05:25:16 root INFO     [' gossip', ' sed', 'c', ' sexually', ' hum'] matches ['crave', 'hunger', 'thirst', 'starve', 'lust'] is False
2024-06-14 05:25:16 root INFO     [' gossip', ' sed', 'c', ' sexually', ' hum'] matches ['hot', 'fiery', 'flaming', 'heated', 'red-hot', 'sizzling', 'sensual', 'sultry', 'torrid', 'white-hot'] is False
2024-06-14 05:25:16 root INFO     synonyms - intensity,50,460,662

2024-06-14 05:25:16 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='hypernyms - misc', prompt_templates=['The {} falls into the category of', 'The {} is classified as a', 'The {} is a type of'], prompt_templates_zs=['The {} falls into the category of', 'The {} is classified as a', 'The {} is a type of'], samples=[RelationSample(subject='armchair', object=['chair', 'seat', 'piece_of_furniture', 'article_of_furniture', 'furnishing', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity']), RelationSample(subject='blender', object=['appliance', 'mixer', 'kitchen_utensil', 'utensil', 'implement', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity']), RelationSample(subject='bracelet', object=['jewelry', 'band', 'strip', 'slip', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity', 'jewellery', 'adornment', 'decoration', 'ornament', 'ornamentation', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity']), RelationSample(subject='brooch', object=['jewelry', 'jewellery', 'adornment', 'decoration', 'ornament', 'ornamentation', 'artifact', 'artefact', 'unit', 'object', 'physical_object', '']), RelationSample(subject='cake', object=['dessert', 'baked_goods', 'food', 'solid_food', 'course', 'nutriment', 'nourishment', 'nutrition', 'sustenance', 'aliment', 'alimentation', 'victuals', 'food', 'nutrient', 'substance', 'matter', 'physical_entity', 'entity']), RelationSample(subject='computer', object=['device', 'machine', 'gadget', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity', 'expert', 'person', 'individual', 'someone', 'somebody', 'mortal', 'soul', 'causal_agent', 'cause', 'causal_agency', 'organism', 'being', 'physical_entity', 'living_thing', 'animate_thing', 'entity', 'unit', 'object', 'physical_object', '']), RelationSample(subject='croissant', object=['pastry', 'bun', 'roll', 'bread', 'breadstuff', 'staff_of_life', 'baked_goods', 'starches', 'food', 'solid_food', 'foodstuff', 'food_product', 'solid', 'food', 'nutrient', 'matter', 'substance', 'physical_entity', 'entity']), RelationSample(subject='cup', object=['tableware', 'crockery', 'dishware', 'ware', 'article', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity', 'container']), RelationSample(subject='denim', object=['fabric', 'cloth', 'material', 'textile', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity', 'garment', 'clothing', 'article_of_clothing', 'vesture', 'wear', 'wearable', 'habiliment', 'consumer_goods', 'covering', 'commodity', 'trade_good', 'good', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity']), RelationSample(subject='deodorant', object=['toiletry', 'toilet_articles', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity']), RelationSample(subject='desk', object=['furniture', 'table', 'piece_of_furniture', 'article_of_furniture', 'furnishing', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity']), RelationSample(subject='diary', object=['journal', 'writing', 'written_material', 'piece_of_writing', 'written_communication', 'written_language', 'black_and_white', 'communication', 'abstraction', 'abstract_entity', 'entity', 'journal', 'book', 'volume', 'product', 'production', 'creation', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity']), RelationSample(subject='dishwasher', object=['appliance', 'machine', 'entity', 'unit', 'object', 'physical_object', 'white_goods', 'home_appliance', 'household_appliance', 'durables', 'durable_goods', 'consumer_durables', 'consumer_goods', 'commodity', 'trade_good', 'good', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity']), RelationSample(subject='dress', object=['clothes', 'garment', 'clothing', 'article_of_clothing', 'vesture', 'wear', 'wearable', 'habiliment', 'consumer_goods', 'covering', 'commodity', 'trade_good', 'good', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity', '']), RelationSample(subject='fridge', object=['appliance', 'icebox', 'white_goods', 'home_appliance', 'household_appliance', 'appliance', 'durables', 'durable_goods', 'consumer_durables', 'consumer_goods', 'commodity', 'trade_good', 'good', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity']), RelationSample(subject='gasoline', object=['fuel', 'hydrocarbon', 'substance', 'organic_compound', 'matter', 'compound', 'chemical_compound', 'physical_entity', 'chemical', 'chemical_substance', 'entity', 'material', 'stuff', 'substance', 'part', 'portion', 'component_part', 'component', 'constituent', 'relation', 'abstraction', 'abstract_entity']), RelationSample(subject='grapefruit', object=['citrus', 'citrus_fruit', 'citrous_fruit', 'fruit', 'edible_fruit', 'fruit', 'produce', 'green_goods', 'green_groceries', 'garden_truck', 'food', 'matter', 'natural_object', 'physical_entity', 'unit', 'entity', 'object', 'physical_object']), RelationSample(subject='hairnet', object=['net', 'network', 'mesh', 'meshing', 'meshwork', 'fabric', 'cloth', 'material', 'textile', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity']), RelationSample(subject='hairpin', object=['pin', 'fastener', 'fastening', 'holdfast', 'fixing', 'restraint', 'constraint', 'device', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity']), RelationSample(subject='hamburger', object=['sandwich', 'snack_food', 'dish', 'nutriment', 'nourishment', 'nutrition', 'sustenance', 'aliment', 'alimentation', 'victuals', 'food', 'nutrient', 'substance', 'matter', 'physical_entity', 'entity', 'beef', 'boeuf', 'meat', 'food', 'solid_food', 'solid', 'matter', 'physical_entity', 'entity']), RelationSample(subject='jacket', object=['clothes', 'coat', 'overgarment', 'outer_garment', 'garment', 'clothing', 'article_of_clothing', 'vesture', 'wear', 'wearable', 'habiliment', 'consumer_goods', 'covering', 'commodity', 'trade_good', 'good', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity', '']), RelationSample(subject='jeans', object=['trousers', 'pants', 'workwear', 'garment', 'clothing', 'clothes', 'article_of_clothing', 'vesture', 'wear', 'wearable', 'habiliment', 'consumer_goods', 'covering', 'commodity', 'trade_good', 'good', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity', '']), RelationSample(subject='juicer', object=['utensil', 'physical_entity', 'entity', 'unit', 'object', 'physical_object', 'squeezer', 'kitchen_utensil', 'implement', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity']), RelationSample(subject='lemon', object=['citrus', 'citrus_fruit', 'citrous_fruit', 'fruit', 'edible_fruit', 'fruit', 'produce', 'green_goods', 'green_groceries', 'garden_truck', 'food', 'matter', 'natural_object', 'physical_entity', 'unit', 'entity', 'object', 'physical_object']), RelationSample(subject='lotion', object=['toiletry', 'toilet_articles', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity', '']), RelationSample(subject='mascara', object=['makeup', 'make-up', 'war_paint', 'cosmetic', 'toiletry', 'toilet_articles', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity']), RelationSample(subject='necklace', object=['jewelry', 'jewellery', 'adornment', 'decoration', 'ornament', 'ornamentation', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity']), RelationSample(subject='notebook', object=['book', 'volume', 'product', 'production', 'creation', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity', 'portable_computer', 'personal_computer', 'pc', 'microcomputer', 'digital_computer', 'computer', 'computing_machine', 'computing_device', 'data_processor', 'electronic_computer', 'information_processing_system', 'machine', 'device', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity']), RelationSample(subject='notepad', object=['pad', 'pad_of_paper', 'tablet', 'paper', 'material', 'stuff', 'substance', 'matter', 'part', 'portion', 'component_part', 'component', 'constituent', 'physical_entity', 'relation', 'entity', 'abstraction', 'abstract_entity']), RelationSample(subject='pastry', object=['food', 'dough', 'concoction', 'mixture', 'intermixture', 'foodstuff', 'food_product', 'food', 'nutrient', 'substance', 'matter', 'physical_entity', 'entity', 'baked_goods', 'solid_food', 'solid', 'matter', 'physical_entity', 'entity']), RelationSample(subject='peach', object=['fruit', 'drupe', 'stone_fruit', 'edible_fruit', 'fruit', 'produce', 'green_goods', 'green_groceries', 'garden_truck', 'food', 'matter', 'natural_object', 'physical_entity', 'unit', 'entity', 'object', 'physical_object']), RelationSample(subject='perfume', object=['toiletry', 'toilet_articles', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity']), RelationSample(subject='photo', object=['picture', 'image', 'representation', 'creation', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity']), RelationSample(subject='pie', object=['pastry', 'baked_goods', 'food', 'solid_food', 'solid', 'matter', 'physical_entity', 'entity', 'indo-european', 'indo-european_language', 'indo-hittite', 'natural_language', 'tongue', 'language', 'linguistic_communication', 'communication', 'abstraction', 'abstract_entity', 'entity']), RelationSample(subject='plum', object=['fruit', 'drupe', 'stone_fruit', 'edible_fruit', 'fruit', 'produce', 'green_goods', 'green_groceries', 'garden_truck', 'food', 'matter', 'natural_object', 'physical_entity', 'unit', 'entity', 'object', 'physical_object']), RelationSample(subject='postcard', object=['card', 'correspondence', 'first_class', '1st_class', 'first-class_mail', '1st-class_mail', 'written_communication', 'written_language', 'black_and_white', 'mail', 'communication', 'message', 'abstraction', 'abstract_entity', 'entity']), RelationSample(subject='shelf', object=['furniture', 'support', 'piece_of_furniture', 'article_of_furniture', 'furnishing', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity']), RelationSample(subject='shirt', object=['clothes', 'garment', 'clothing', 'garment', 'clothing', 'article_of_clothing', 'vesture', 'wear', 'wearable', 'habiliment', 'consumer_goods', 'covering', 'commodity', 'trade_good', 'good', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity', '']), RelationSample(subject='sidewalk', object=['walk', 'walkway', 'paseo', 'path', 'way', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity']), RelationSample(subject='skirt', object=['clothes', 'garment', 'clothing', 'garment', 'clothing', 'article_of_clothing', 'vesture', 'wear', 'wearable', 'habiliment', 'consumer_goods', 'covering', 'commodity', 'trade_good', 'good', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity', '']), RelationSample(subject='sofa', object=['furniture', 'seat', 'piece_of_furniture', 'article_of_furniture', 'furnishing', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity']), RelationSample(subject='stapler', object=['device', 'machine', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity']), RelationSample(subject='sunscreen', object=['cream', 'lotion', 'ointment', 'emollient', 'toiletry', 'toilet_articles', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity']), RelationSample(subject='sweater', object=['clothes', 'garment', 'clothing', 'article_of_clothing', 'vesture', 'wear', 'wearable', 'habiliment', 'consumer_goods', 'covering', 'commodity', 'trade_good', 'good', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity', '']), RelationSample(subject='toaster', object=['appliance', 'entity', 'unit', 'object', 'physical_object', 'kitchen_appliance', 'home_appliance', 'household_appliance', 'durables', 'durable_goods', 'consumer_durables', 'consumer_goods', 'commodity', 'trade_good', 'good', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity']), RelationSample(subject='toothbrush', object=['brush', 'toiletry', 'toilet_articles', 'implement', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity', 'mustache', 'moustache', 'facial_hair', 'hair', 'body_covering', 'covering', 'natural_covering', 'cover', 'natural_object', 'unit', 'object', 'physical_object', 'physical_entity', 'entity']), RelationSample(subject='tub', object=['container', 'vessel', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity']), RelationSample(subject='tv', object=['device', 'machine', 'receiver', 'receiving_system', 'set', 'electronic_equipment', 'equipment', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity', 'broadcasting', 'telecommunication', 'telecom', 'medium', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity']), RelationSample(subject='vase', object=['jar', 'vessel', 'container', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity']), RelationSample(subject='wristband', object=['band', 'strip', 'slip', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity', 'band', 'strip', 'slip', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity'])], _domain=None, _range=None)
2024-06-14 05:25:18 root INFO     starting operator prediction
2024-06-14 05:25:18 root INFO     using no context
2024-06-14 05:25:18 root INFO     [order_1_approx] starting weight calculation
2024-06-14 05:29:18 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 05:29:18 root INFO     [order_1_approx] weight calculation finished
2024-06-14 05:29:19 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-14 05:29:19 root INFO     [order_1_approx] starting weight calculation
2024-06-14 05:33:16 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 05:33:16 root INFO     [order_1_approx] weight calculation finished
2024-06-14 05:33:17 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-14 05:33:17 root INFO     [order_1_approx] starting weight calculation
2024-06-14 05:37:12 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 05:37:12 root INFO     [order_1_approx] weight calculation finished
2024-06-14 05:37:13 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-14 05:37:13 root INFO     [order_1_approx] starting weight calculation
2024-06-14 05:41:07 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 05:41:07 root INFO     [order_1_approx] weight calculation finished
2024-06-14 05:41:08 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-14 05:41:08 root INFO     [order_1_approx] starting weight calculation
2024-06-14 05:45:07 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 05:45:07 root INFO     [order_1_approx] weight calculation finished
2024-06-14 05:45:08 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-14 05:45:08 root INFO     [order_1_approx] starting weight calculation
2024-06-14 05:49:04 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 05:49:04 root INFO     [order_1_approx] weight calculation finished
2024-06-14 05:49:05 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-14 05:49:05 root INFO     [order_1_approx] starting weight calculation
2024-06-14 05:53:02 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 05:53:02 root INFO     [order_1_approx] weight calculation finished
2024-06-14 05:53:03 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-14 05:53:03 root INFO     [order_1_approx] starting weight calculation
2024-06-14 05:57:00 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 05:57:00 root INFO     [order_1_approx] weight calculation finished
2024-06-14 05:57:01 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-14 05:57:01 root INFO     total operator prediction time: 1902.7056612968445 seconds
2024-06-14 05:57:03 root INFO     [' clothes', ' furniture', ' clothing', ' appliance', ' '] matches ['chair', 'seat', 'piece_of_furniture', 'article_of_furniture', 'furnishing', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity'] is False
2024-06-14 05:57:03 root INFO     [' clothes', ' appliance', ' clothing', ' item', ' device'] matches ['appliance', 'mixer', 'kitchen_utensil', 'utensil', 'implement', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity'] is True
2024-06-14 05:57:03 root INFO     [' clothes', ' clothing', ' item', ' cloth', ' article'] matches ['jewelry', 'band', 'strip', 'slip', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity', 'jewellery', 'adornment', 'decoration', 'ornament', 'ornamentation', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity'] is False
2024-06-14 05:57:03 root INFO     [' clothes', ' clothing', ' item', ' ', ' cloth'] matches ['jewelry', 'jewellery', 'adornment', 'decoration', 'ornament', 'ornamentation', 'artifact', 'artefact', 'unit', 'object', 'physical_object', ''] is False
2024-06-14 05:57:03 root INFO     [' ', ' ch', ' cl', ' m', ' g'] matches ['dessert', 'baked_goods', 'food', 'solid_food', 'course', 'nutriment', 'nourishment', 'nutrition', 'sustenance', 'aliment', 'alimentation', 'victuals', 'food', 'nutrient', 'substance', 'matter', 'physical_entity', 'entity'] is False
2024-06-14 05:57:03 root INFO     [' ', ' ch', ' cl', ' m', ' g'] matches ['device', 'machine', 'gadget', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity', 'expert', 'person', 'individual', 'someone', 'somebody', 'mortal', 'soul', 'causal_agent', 'cause', 'causal_agency', 'organism', 'being', 'physical_entity', 'living_thing', 'animate_thing', 'entity', 'unit', 'object', 'physical_object', ''] is False
2024-06-14 05:57:03 root INFO     [' clothes', ' clothing', ' cloth', ' item', ' '] matches ['pastry', 'bun', 'roll', 'bread', 'breadstuff', 'staff_of_life', 'baked_goods', 'starches', 'food', 'solid_food', 'foodstuff', 'food_product', 'solid', 'food', 'nutrient', 'matter', 'substance', 'physical_entity', 'entity'] is False
2024-06-14 05:57:03 root INFO     [' ', ' ch', ' cl', ' m', ' g'] matches ['tableware', 'crockery', 'dishware', 'ware', 'article', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity', 'container'] is False
2024-06-14 05:57:03 root INFO     [' clothes', ' clothing', ' cloth', ' garment', ' item'] matches ['fabric', 'cloth', 'material', 'textile', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity', 'garment', 'clothing', 'article_of_clothing', 'vesture', 'wear', 'wearable', 'habiliment', 'consumer_goods', 'covering', 'commodity', 'trade_good', 'good', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity'] is True
2024-06-14 05:57:03 root INFO     [' clothes', ' clothing', ' item', ' appliance', ' device'] matches ['toiletry', 'toilet_articles', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity'] is False
2024-06-14 05:57:03 root INFO     [' clothes', ' furniture', ' appliance', ' clothing', ' item'] matches ['furniture', 'table', 'piece_of_furniture', 'article_of_furniture', 'furnishing', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity'] is True
2024-06-14 05:57:03 root INFO     [' clothes', ' clothing', ' item', ' appliance', ' '] matches ['journal', 'writing', 'written_material', 'piece_of_writing', 'written_communication', 'written_language', 'black_and_white', 'communication', 'abstraction', 'abstract_entity', 'entity', 'journal', 'book', 'volume', 'product', 'production', 'creation', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity'] is False
2024-06-14 05:57:03 root INFO     [' appliance', ' clothes', ' device', ' kitchen', ' machine'] matches ['appliance', 'machine', 'entity', 'unit', 'object', 'physical_object', 'white_goods', 'home_appliance', 'household_appliance', 'durables', 'durable_goods', 'consumer_durables', 'consumer_goods', 'commodity', 'trade_good', 'good', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity'] is True
2024-06-14 05:57:03 root INFO     [' ', ' ch', ' cl', ' m', ' clothes'] matches ['clothes', 'garment', 'clothing', 'article_of_clothing', 'vesture', 'wear', 'wearable', 'habiliment', 'consumer_goods', 'covering', 'commodity', 'trade_good', 'good', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity', ''] is True
2024-06-14 05:57:03 root INFO     [' appliance', ' clothes', ' device', ' clothing', ' kitchen'] matches ['appliance', 'icebox', 'white_goods', 'home_appliance', 'household_appliance', 'appliance', 'durables', 'durable_goods', 'consumer_durables', 'consumer_goods', 'commodity', 'trade_good', 'good', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity'] is True
2024-06-14 05:57:03 root INFO     [' clothes', ' clothing', ' item', ' ', ' device'] matches ['fuel', 'hydrocarbon', 'substance', 'organic_compound', 'matter', 'compound', 'chemical_compound', 'physical_entity', 'chemical', 'chemical_substance', 'entity', 'material', 'stuff', 'substance', 'part', 'portion', 'component_part', 'component', 'constituent', 'relation', 'abstraction', 'abstract_entity'] is False
2024-06-14 05:57:03 root INFO     [' clothes', ' item', ' clothing', ' ', ' appliance'] matches ['citrus', 'citrus_fruit', 'citrous_fruit', 'fruit', 'edible_fruit', 'fruit', 'produce', 'green_goods', 'green_groceries', 'garden_truck', 'food', 'matter', 'natural_object', 'physical_entity', 'unit', 'entity', 'object', 'physical_object'] is False
2024-06-14 05:57:03 root INFO     [' clothes', ' clothing', ' item', ' appliance', ' '] matches ['sandwich', 'snack_food', 'dish', 'nutriment', 'nourishment', 'nutrition', 'sustenance', 'aliment', 'alimentation', 'victuals', 'food', 'nutrient', 'substance', 'matter', 'physical_entity', 'entity', 'beef', 'boeuf', 'meat', 'food', 'solid_food', 'solid', 'matter', 'physical_entity', 'entity'] is False
2024-06-14 05:57:03 root INFO     [' clothes', ' clothing', ' item', ' garment', ' cloth'] matches ['clothes', 'coat', 'overgarment', 'outer_garment', 'garment', 'clothing', 'article_of_clothing', 'vesture', 'wear', 'wearable', 'habiliment', 'consumer_goods', 'covering', 'commodity', 'trade_good', 'good', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity', ''] is True
2024-06-14 05:57:03 root INFO     [' clothes', ' clothing', ' cloth', ' ', ' garment'] matches ['trousers', 'pants', 'workwear', 'garment', 'clothing', 'clothes', 'article_of_clothing', 'vesture', 'wear', 'wearable', 'habiliment', 'consumer_goods', 'covering', 'commodity', 'trade_good', 'good', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity', ''] is True
2024-06-14 05:57:03 root INFO     [' clothes', ' appliance', ' device', ' clothing', ' item'] matches ['utensil', 'physical_entity', 'entity', 'unit', 'object', 'physical_object', 'squeezer', 'kitchen_utensil', 'implement', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity'] is False
2024-06-14 05:57:03 root INFO     [' clothes', ' clothing', ' item', ' ', ' garment'] matches ['citrus', 'citrus_fruit', 'citrous_fruit', 'fruit', 'edible_fruit', 'fruit', 'produce', 'green_goods', 'green_groceries', 'garden_truck', 'food', 'matter', 'natural_object', 'physical_entity', 'unit', 'entity', 'object', 'physical_object'] is False
2024-06-14 05:57:03 root INFO     [' clothes', ' clothing', ' item', ' ', ' article'] matches ['makeup', 'make-up', 'war_paint', 'cosmetic', 'toiletry', 'toilet_articles', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity'] is False
2024-06-14 05:57:03 root INFO     [' clothes', ' clothing', ' item', ' article', ' accessory'] matches ['jewelry', 'jewellery', 'adornment', 'decoration', 'ornament', 'ornamentation', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity'] is False
2024-06-14 05:57:03 root INFO     [' clothes', ' clothing', ' item', ' cloth', ' device'] matches ['book', 'volume', 'product', 'production', 'creation', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity', 'portable_computer', 'personal_computer', 'pc', 'microcomputer', 'digital_computer', 'computer', 'computing_machine', 'computing_device', 'data_processor', 'electronic_computer', 'information_processing_system', 'machine', 'device', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity'] is True
2024-06-14 05:57:03 root INFO     [' clothes', ' clothing', ' cloth', ' item', ' '] matches ['pad', 'pad_of_paper', 'tablet', 'paper', 'material', 'stuff', 'substance', 'matter', 'part', 'portion', 'component_part', 'component', 'constituent', 'physical_entity', 'relation', 'entity', 'abstraction', 'abstract_entity'] is False
2024-06-14 05:57:03 root INFO     [' clothes', ' clothing', ' item', ' cloth', ' '] matches ['food', 'dough', 'concoction', 'mixture', 'intermixture', 'foodstuff', 'food_product', 'food', 'nutrient', 'substance', 'matter', 'physical_entity', 'entity', 'baked_goods', 'solid_food', 'solid', 'matter', 'physical_entity', 'entity'] is False
2024-06-14 05:57:03 root INFO     [' clothes', ' clothing', ' item', ' ', ' cloth'] matches ['fruit', 'drupe', 'stone_fruit', 'edible_fruit', 'fruit', 'produce', 'green_goods', 'green_groceries', 'garden_truck', 'food', 'matter', 'natural_object', 'physical_entity', 'unit', 'entity', 'object', 'physical_object'] is False
2024-06-14 05:57:03 root INFO     [' ', ' ch', ' cl', ' m', ' g'] matches ['picture', 'image', 'representation', 'creation', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity'] is False
2024-06-14 05:57:03 root INFO     [' ', ' ch', ' cl', ' m', ' clothes'] matches ['pastry', 'baked_goods', 'food', 'solid_food', 'solid', 'matter', 'physical_entity', 'entity', 'indo-european', 'indo-european_language', 'indo-hittite', 'natural_language', 'tongue', 'language', 'linguistic_communication', 'communication', 'abstraction', 'abstract_entity', 'entity'] is False
2024-06-14 05:57:03 root INFO     [' clothes', ' clothing', ' item', ' ', ' cloth'] matches ['fruit', 'drupe', 'stone_fruit', 'edible_fruit', 'fruit', 'produce', 'green_goods', 'green_groceries', 'garden_truck', 'food', 'matter', 'natural_object', 'physical_entity', 'unit', 'entity', 'object', 'physical_object'] is False
2024-06-14 05:57:03 root INFO     [' clothes', ' item', ' clothing', ' ', ' cloth'] matches ['card', 'correspondence', 'first_class', '1st_class', 'first-class_mail', '1st-class_mail', 'written_communication', 'written_language', 'black_and_white', 'mail', 'communication', 'message', 'abstraction', 'abstract_entity', 'entity'] is False
2024-06-14 05:57:03 root INFO     [' clothes', ' item', ' clothing', ' article', ' device'] matches ['furniture', 'support', 'piece_of_furniture', 'article_of_furniture', 'furnishing', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity'] is True
2024-06-14 05:57:03 root INFO     [' ', ' ch', ' cl', ' m', ' clothes'] matches ['clothes', 'garment', 'clothing', 'garment', 'clothing', 'article_of_clothing', 'vesture', 'wear', 'wearable', 'habiliment', 'consumer_goods', 'covering', 'commodity', 'trade_good', 'good', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity', ''] is True
2024-06-14 05:57:03 root INFO     [' clothes', ' clothing', ' cloth', ' garment', ' dress'] matches ['clothes', 'garment', 'clothing', 'garment', 'clothing', 'article_of_clothing', 'vesture', 'wear', 'wearable', 'habiliment', 'consumer_goods', 'covering', 'commodity', 'trade_good', 'good', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity', ''] is True
2024-06-14 05:57:03 root INFO     [' clothes', ' furniture', ' clothing', ' item', ' '] matches ['furniture', 'seat', 'piece_of_furniture', 'article_of_furniture', 'furnishing', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity'] is True
2024-06-14 05:57:03 root INFO     [' clothes', ' device', ' item', ' clothing', ' appliance'] matches ['device', 'machine', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity'] is True
2024-06-14 05:57:03 root INFO     [' clothes', ' clothing', ' cloth', ' garment', ' item'] matches ['clothes', 'garment', 'clothing', 'article_of_clothing', 'vesture', 'wear', 'wearable', 'habiliment', 'consumer_goods', 'covering', 'commodity', 'trade_good', 'good', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity', ''] is True
2024-06-14 05:57:03 root INFO     [' appliance', ' clothes', ' device', ' item', ' clothing'] matches ['appliance', 'entity', 'unit', 'object', 'physical_object', 'kitchen_appliance', 'home_appliance', 'household_appliance', 'durables', 'durable_goods', 'consumer_durables', 'consumer_goods', 'commodity', 'trade_good', 'good', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity'] is True
2024-06-14 05:57:03 root INFO     [' ', ' ch', ' cl', ' m', ' g'] matches ['device', 'machine', 'receiver', 'receiving_system', 'set', 'electronic_equipment', 'equipment', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity', 'broadcasting', 'telecommunication', 'telecom', 'medium', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity'] is False
2024-06-14 05:57:03 root INFO     [' clothes', ' item', ' clothing', ' article', ' appliance'] matches ['jar', 'vessel', 'container', 'artifact', 'artefact', 'unit', 'object', 'physical_object', 'physical_entity', 'entity'] is False
2024-06-14 05:57:03 root INFO     hypernyms - misc,50,476,687

2024-06-14 05:57:04 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='hyponyms - misc', prompt_templates=['A more specific term for a {} is', 'A narrower term for a {} is', 'An example of a {} is'], prompt_templates_zs=['A more specific term for a {} is', 'A narrower term for a {} is', 'An example of a {} is'], samples=[RelationSample(subject='backpack', object=['daypack', 'kitbag', 'kit_bag']), RelationSample(subject='bag', object=['pouch', 'backpack', 'knapsack', 'packsack', 'rucksack', 'haversack', 'beanbag', 'bladder', 'pouch', 'carryall', 'holdall', 'tote', 'tote', 'drawstring', 'dust', 'vacuum', 'envelope', 'gasbag', 'gamebag', 'golf', 'gunnysack', 'gunny', 'burlap', 'ice', 'mailbag', 'postbag', 'nosebag', 'feedbag', 'pannier', 'plastic', 'purse', 'ragbag', 'rosin', 'sachet', 'sack', 'poke', 'paper', 'carrier', 'saddlebag', 'sandbag', 'schoolbag', 'shopping', 'sick_bag', 'sickbag', 'skin', 'sleeping', 'sweat', 'tea', 'toilet', 'sponge', 'tool', 'tucker-bag']), RelationSample(subject='bed', object=['bunk', 'berth', 'built', 'built-in', 'bunk', 'cot', 'camp', 'couch', 'deathbed', 'double', 'four-poster', 'hammock', 'sack', 'marriage_bed', 'murphy', 'plank-bed', 'platform', 'sickbed', 'single_bed', 'sleigh', 'trundle', 'truckle', 'truckle', 'twin', 'water', 'semi-double', 'semidouble']), RelationSample(subject='boat', object=['ferry', 'ark', 'barge', 'flatboat', 'hoy', 'lighter', 'bumboat', 'canal_boat', 'narrow_boat', 'narrowboat', 'ferryboat', 'fireboat', 'gondola', 'guard_boat', 'gunboat', 'junk', 'longboat', 'lugger', 'mackinaw', 'mackinaw', 'mailboat', 'mail', 'packet', 'packet', 'motorboat', 'powerboat', 'pilot', 'police', 'punt', 'river_boat', 'scow', 'sea_boat', 'small_boat', 'steamboat', 'surfboat', 'tender_boat', 'pinnace', 'cutter_boat', 'tugboat', 'tug', 'towboat', 'tower_boat', 'motorboat', 'yacht', 'sail', 'row', 'canoe', 'kayak', 'paddle', 'paddle_boat']), RelationSample(subject='book', object=['paperback', 'album', 'folio', 'hardback', 'hardcover', 'journal', 'novel', 'order', 'paper-back', 'softback', 'soft-cover', 'picture', 'sketchbook', 'sketch', 'notebook']), RelationSample(subject='brush', object=['toothbrush', 'bottlebrush', 'bristle', 'clothesbrush', 'hairbrush', 'nailbrush', 'paintbrush', 'sable', 'scrub', 'scrubbing', 'scrubber', 'shaving_brush']), RelationSample(subject='burger', object=['hamburger', 'cheeseburger', '50', '50_burger', 'angus_burger', 'banquet_burger', 'barbecue_burger', 'bøfsandwich', 'utter_burge', 'buffalo_burger', 'california_burger', 'chili_burger', 'curry_burger', 'hamdog', 'salmon_burger', 'rice_burger', 'veggie_burger']), RelationSample(subject='camera', object=['camcorder', 'box_camera', 'box_kodak', 'candid_camera', 'digital_camera', 'flash_camera', 'motion-picture_camera', 'movie_camera', 'cine-camera', 'point-and-shoot_camera', 'point-and-shoot', 'polaroid_camera', 'polaroid_land_camera', 'polaroid', 'portrait_camera', 'reflex_camera', 'webcam', 'webcamera', 'sound_camera']), RelationSample(subject='candy', object=['lollipop', 'candy_bar', 'carob_bar', 'hard_candy', 'brandyball', 'patty', 'bonbon', 'brittle', 'toffee', 'toffy', 'butterscotch', 'candy_cane', 'candy_corn', 'caramel', 'cotton_candy', 'spun_sugar', 'candyfloss', 'dragee', 'fondant', 'fudge', 'gumdrop', 'honey_crisp', 'mint', 'mint_candy', 'horehound', 'jelly_bean', 'jelly_egg', 'kiss', 'candy_kiss', 'licorice', 'liquorice', 'life_saver', 'sucker', 'all-day_sucker', 'lozenge', 'marshmallow', 'marzipan', 'marchpane', 'nougat', 'nougat_bar', 'nut_bar', 'peanut_bar', 'popcorn_ball', 'praline', 'rock_candy', 'rock', 'sugar_candy', 'sugarplum', 'taffy', 'truffle', 'chocolate_truffle', 'turkish_delight', 'easter_egg']), RelationSample(subject='car', object=['limousine', 'convertible', 'ambulance', 'beach', 'wagon', 'station', 'estate', 'waggon', 'bus', 'jalopy', 'heap', 'cab', 'hack', 'taxi', 'taxicab', 'compact', 'coupe', 'cruiser', 'police', 'patrol', 'prowl', 'squad', 'electric', 'hardtop', 'hatchback', 'hot-rod', 'jeep', 'landrover', 'limo', 'loaner', 'minicar', 'minivan', 'model', 'pace', 'racer', 'race', 'racing', 'roadster', 'runabout', 'two-seater', 'sedan', 'saloon', 'sports', 'sport', 'sport', 'suv', 'stanley', 'steamer', 'stock', 'subcompact', 'touring', 'tourer', 'used', 'secondhand']), RelationSample(subject='church', object=['chapel', 'abbey', 'basilica', 'cathedral', 'duomo', 'kirk']), RelationSample(subject='citrus', object=['lemon', 'orange', 'lime', 'mandarin', 'tangerine', 'yuzu']), RelationSample(subject='cloud', object=['thundercloud', 'cirrocumulus', 'cirrocumulus', 'cirrostratus', 'cirrus', 'contrail', 'condensation', 'trail', 'cumulonimbus', 'cumulonimbus', 'cumulus', 'nacreous', 'nebule', 'nimbus', 'rain', 'storm', 'stratus', 'mushroom', 'smoke']), RelationSample(subject='collar', object=['choker', 'ruff', 'ruffle', 'clerical', 'roman_collar', 'dog_collar', 'eton_collar', 'rabato_collar', 'rebato_collar', 'turtleneck', 'polo-neck', 'neckpiece']), RelationSample(subject='color', object=['white', 'black', 'blue', 'green', 'red', 'yello', 'orange', 'vermilion', 'amber', 'chartreuse', 'teal', 'violet', 'magenta', 'rose', 'azure', 'cyan', 'indigo', 'purple', 'brown']), RelationSample(subject='computer', object=['laptop', 'desktop', 'tablet', 'smartphone', 'supercomputer', 'iphone', 'ipad']), RelationSample(subject='container', object=['bag', 'handbag', 'pocketbook', 'purse', 'basket', 'handbasket', 'bin', 'bowl', 'pipe', 'bowl', 'box', 'bread-bin', 'breadbox', 'bunker', 'can', 'tin', 'canister', 'cannister', 'capsule', 'cargo', 'case', 'display', 'showcase', 'vitrine', 'cassette', 'cup', 'cylinder', 'dice', 'cup', 'box', 'dish', 'dispenser', 'drawer', 'dumpster', 'empty', 'envelope', 'glass', 'bag', 'bottle', 'mailer', 'manger', 'trough', 'measure', 'mold', 'mould', 'cast', 'package', 'parcel', 'pan', 'pod', 'pot', 'flowerpot', 'flask', 'receptacle', 'reliquary', 'saltcellar', 'savings', 'bank', 'coin', 'money', 'bank', 'scuttle', 'coal', 'scuttle', 'shaker', 'spoon', 'thimble', 'capsule', 'vessel', 'basket', 'bin', 'waste-paper', 'wastebasket', 'waste', 'file', 'can', 'pot', 'workbasket', 'workbox', 'workbag']), RelationSample(subject='cookware', object=['pot', 'baster', 'chafing', 'dish', 'cooker', 'sheet', 'tray', 'enamelware', 'grid', 'gridiron', 'griddle', 'pan', 'poacher', 'skimmer', 'steamer', 'turner']), RelationSample(subject='cup', object=['teacup', 'beaker', 'chalice', 'goblet', 'coffee_cup', 'dixie', 'paper_cup', 'grace', 'kylix', 'cylix', 'mustache_cup', 'moustache_cup', 'scyphus', 'grail']), RelationSample(subject='cushion', object=['pincushion', 'pillow', 'air', 'inflatable', 'gaddi', 'hassock', 'headrest', 'pillow', 'seat']), RelationSample(subject='cutlery', object=['knife', 'fork', 'spoon', 'tablefork', 'teaspoon', 'dessert_spoon', 'salad_fork', 'carving_fork']), RelationSample(subject='dessert', object=['cake', 'ambrosia', 'baked_alaska', 'blancmange', 'charlotte', 'compote', 'fruit_compote', 'dumpling', 'flan', 'frozen_dessert', 'junket', 'mold', 'mould', 'mousse', 'pavlova', 'peach_melba', 'pudding', 'pud', 'pudding', 'syllabub', 'sillabub', 'tiramisu', 'whip', 'zabaglione', 'sabayon', 'charlotte_russe', 'apple_dumpling', 'frozen_custard', 'soft_ice_cream', 'frozen_pudding', 'frozen_yogurt', 'ice-cream_cake', 'icebox_cake', 'ice-cream_cone', 'ice-cream_sundae', 'sundae', 'ice', 'frappe', 'ice_cream', 'icecream', 'ice_lolly', 'lolly', 'lollipop', 'popsicle', 'ice_milk', 'parfait', 'sherbert', 'sherbet', 'snowball', 'snowball', 'split', 'chocolate_mousse', 'trifle', 'brown_betty', 'chocolate_pudding', 'duff', 'plum_duff', 'flummery', 'nesselrode', 'nesselrode_pudding', 'pease_pudding', 'plum_pudding', 'christmas_pudding', 'roly-poly', 'roly-poly_pudding', 'steamed_pudding', 'suet_pudding', 'tapioca_pudding', 'vanilla_pudding', 'prune_whip', 'water_ice', 'sorbet', 'chocolate_ice_cream', 'neapolitan_ice_cream', 'peach_ice_cream', 'strawberry_ice_cream', 'tutti-frutti', 'vanilla_ice_cream', 'banana_split', 'tipsy_cake', 'spotted_dick', 'choc-ice']), RelationSample(subject='dress', object=['gown', 'caftan', 'kaftan', 'chemise', 'sack', 'shift', 'coatdress', 'cocktail_dress', 'sheath', 'dirndl', 'gown', 'jumper', 'pinafore', 'pinny', 'kirtle', 'morning', 'evening', 'muumuu', 'polonaise', 'sari', 'saree', 'shirtdress', 'strapless', 'sundress']), RelationSample(subject='drum', object=['tambourine', 'bass_drum', 'gran_casa', 'bongo', 'bongo_drum', 'snare_drum', 'snare', 'side_drum', 'tabor', 'tabour', 'tambour', 'tenor_drum', 'tom-tom', 'timbrel', 'djembe', 'doumbek', 'darbuka']), RelationSample(subject='emotion', object=['anger', 'choler', 'ire', 'anxiety', 'conditioned_emotional_response', 'cer', 'conditioned_emotion', 'emotional_state', 'spirit', 'fear', 'fearfulness', 'fright', 'fear', 'reverence', 'awe', 'veneration', 'hate', 'hatred', 'joy', 'joyousness', 'joyfulness', 'love', 'annoyance', 'chafe', 'vexation', 'bad_temper', 'ill_temper', 'dander', 'hackles', 'fury', 'rage', 'madness', 'huffiness', 'indignation', 'outrage', 'infuriation', 'enragement', 'umbrage', 'offense', 'offence', 'angst', 'anxiousness', 'disquiet', 'concern', 'care', 'fear', 'discomfiture', 'discomposure', 'disconcertion', 'disconcertment', 'edginess', 'uneasiness', 'inquietude', 'disquietude', 'insecurity', 'jitteriness', 'jumpiness', 'nervousness', 'restiveness', 'scruple', 'qualm', 'misgiving', 'sinking', 'sinking_feeling', 'worry', 'trouble', 'ecstasy', 'rapture', 'transport', 'exaltation', 'raptus', 'embarrassment', 'gratification', 'satisfaction', 'happiness', 'felicity', 'state', 'unhappiness', 'alarm', 'dismay', 'consternation', 'apprehension', 'apprehensiveness', 'dread', 'creeps', 'frisson', 'shiver', 'chill', 'quiver', 'shudder', 'thrill', 'tingle', 'horror', 'hysteria', 'intimidation', 'panic', 'terror', 'affright', 'scare', 'panic_attack', 'stage_fright', 'timidity', 'timidness', 'timorousness', 'abhorrence', 'abomination', 'detestation', 'execration', 'loathing', 'odium', 'despisal', 'despising', 'hostility', 'enmity', 'ill_will', 'malevolence', 'malignity', 'misanthropy', 'misogamy', 'misogyny', 'misogynism', 'misology', 'misoneism', 'misopedia', 'murderousness', 'elation', 'high_spirits', 'lightness', 'exhilaration', 'excitement', 'exuberance', 'exultation', 'jubilance', 'jubilancy', 'jubilation', 'agape', 'agape', 'agape_love', 'amorousness', 'enamoredness', 'ardor', 'ardour', 'benevolence', 'devotion', 'devotedness', 'filial_love', 'heartstrings', 'lovingness', 'caring', 'loyalty', 'puppy_love', 'calf_love', 'crush', 'infatuation', 'worship', 'adoration', 'aggravation', 'exasperation', 'displeasure', 'frustration', 'harassment', 'torment', 'pique', 'temper', 'irritation', 'fit', 'tantrum', 'scene', 'conniption', 'irascibility', 'short_temper', 'spleen', 'quick_temper', 'lividity', 'wrath', 'dudgeon', 'high_dudgeon', 'willies', 'comfort', 'quality_of_life', 'blessedness', 'beatitude', 'beatification', 'radiance', 'embitterment', 'sadness', 'sorrow', 'sorrowfulness', 'chill', 'pall', 'foreboding', 'premonition', 'presentiment', 'boding', 'gloom', 'gloominess', 'somberness', 'sombreness', 'suspense', 'trepidation', 'swivet', 'cold_feet', 'diffidence', 'self-doubt', 'self-distrust', 'shyness', 'aggression', 'aggressiveness', 'animosity', 'animus', 'bad_blood', 'antagonism', 'belligerence', 'belligerency', 'class_feeling', 'resentment', 'bitterness', 'gall', 'rancor', 'rancour', 'maleficence', 'malice', 'maliciousness', 'spite', 'spitefulness', 'venom', 'vindictiveness', 'vengefulness', 'misocainea', 'euphoria', 'euphory', 'bang', 'boot', 'charge', 'rush', 'flush', 'thrill', 'kick', 'intoxication', 'titillation', 'triumph', 'beneficence', 'warmheartedness', 'warmth', 'nirvana', 'enlightenment', 'mourning', 'bereavement', 'poignance', 'poignancy', 'presage', 'shadow', 'hesitance', 'hesitancy', 'unassertiveness', 'warpath', 'envy', 'enviousness', 'grudge', 'score', 'grievance', 'heartburning', 'sulkiness', 'huffishness', 'covetousness', 'jealousy', 'green-eyed_monster', 'penis_envy']), RelationSample(subject='flask', object=['thermos', 'ampulla', 'canteen', 'erlenmeyer_flask', 'hipflask', 'pocket_flask', 'round-bottom_flask', 'vacuum_flask', 'vacuum_bottle', 'dewar_flask', 'dewar', 'thermos_bottle', 'thermos_flask']), RelationSample(subject='guitar', object=['ukulele', 'bass', 'bass_guitar', 'acoustic_guitar', 'cittern', 'cithern', 'cither', 'citole', 'gittern', 'electric_guitar', 'hawaiian', 'steel', 'uke']), RelationSample(subject='gun', object=['rifle', 'air', 'airgun', 'antiaircraft', 'flak', 'flack', 'pom-pom', 'ack-ack', 'breechloader', 'cannon', 'firearm', 'piece', 'small-arm', 'gas', 'minute', 'quaker', 'set', 'spring', 'whaling']), RelationSample(subject='jewel', object=['diamond', 'ruby', 'pearl', 'emerald', 'sapphire']), RelationSample(subject='jewelry', object=['bracelet', 'bead', 'bijou', 'bling', 'bling_bling', 'bangle', 'clip', 'cufflink', 'earring', 'jewel', 'gem', 'precious_stone', 'necklace', 'pin', 'ring', 'band', 'tie_clip', 'bugle', 'anklet', 'ankle_bracelet', 'armilla', 'pendant_earring', 'drop_earring', 'eardrop', 'crown_jewel', 'diamond', 'emerald', 'pearl', 'ruby', 'sapphire', 'solitaire', 'chain', 'chain', 'string', 'strand', 'choker', 'collar', 'dog_collar', 'neckband', 'brooch', 'broach', 'breastpin', 'scatter_pin', 'stickpin', 'tie_tack', 'tiepin', 'scarfpin', 'annulet', 'engagement_ring', 'mourning_ring', 'ringlet', 'signet_ring', 'seal_ring', 'wedding_ring', 'wedding_band', 'ice', 'sparkler', 'seed_pearl', 'sunburst']), RelationSample(subject='mixer', object=['blender', 'liquidizer', 'liquidiser', 'eggbeater', 'eggwhisk', 'electric', 'whisk']), RelationSample(subject='month', object=['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december', 'jan', 'feb', 'mar', 'apr', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec']), RelationSample(subject='oven', object=['broiler', 'dutch_oven', 'gas_oven', 'rotisserie', 'tandoor']), RelationSample(subject='painting', object=['watercolor', 'abstraction', 'cityscape', 'daub', 'distemper', 'finger-painting', 'icon', 'ikon', 'landscape', 'miniature', 'illumination', 'monochrome', 'mural', 'wall', 'nude', 'nude_painting', 'oil', 'pentimento', 'sand', 'seascape', 'waterscape', 'semi-abstraction', 'still_life', 'tanka', 'water-color', 'watercolour', 'water-colour', 'fresco', 'graffitti']), RelationSample(subject='poem', object=['haiku', 'abecedarius', 'alcaic', 'alcaic_verse', 'ballad', 'lay', 'ballade', 'blank_verse', 'elegy', 'lament', 'epic_poem', 'heroic_poem', 'epic', 'epos', 'free_verse', 'vers_libre', 'lyric', 'lyric_poem', 'rondeau', 'rondel', 'sonnet', 'tanka', 'terza_rima', 'verse', 'rhyme', 'versicle']), RelationSample(subject='railway', object=['monorail', 'cable', 'funicular', 'cog', 'rack', 'elevated', 'el', 'overhead', 'metro', 'tube', 'underground', 'subway', 'rail']), RelationSample(subject='season', object=['spring', 'harvest', 'haying', 'fall', 'autumn', 'springtime', 'summer', 'summertime', 'winter', 'wintertime', 'rainy', 'dry', 'growing', 'seedtime', 'sheepshearing', 'holiday', 'high', 'peak', 'off-season', 'preseason', 'baseball', 'basketball', 'exhibition', 'concert', 'fishing', 'football', 'hockey', 'hunting', 'social', 'theatrical', 'whitsun', 'whitsuntide', 'whitweek']), RelationSample(subject='seat', object=['chair', 'bench', 'box', 'ottoman', 'pouf', 'pouffe', 'puff', 'hassock', 'sofa', 'couch', 'lounge', 'stool', 'toilet']), RelationSample(subject='shelf', object=['bookshelf', 'hob', 'mantel', 'mantelpiece', 'mantle', 'mantlepiece', 'chimneypiece', 'overmantel', 'berm']), RelationSample(subject='shirt', object=['polo', 'camise', 'dashiki', 'daishiki', 'dress', 'evening', 'hair', 'jersey', 't-shirt', 'tee', 'kurta', 'sport', 'tank', 'work-shirt']), RelationSample(subject='shoes', object=['sneakers', 'anklet', 'baby_shoes', 'balmoral', 'blucher', 'bowling_shoes', 'brogan', 'brogue', 'clodhopper', 'work_shoes', 'calceus', 'chopine', 'platform_shoes', 'chukka', 'boots', 'cleats', 'congress_shoes', 'gaiters', 'flipper_shoes', 'fin_shoes', 'ghillie', 'gillie', 'gym_shoes', 'tennis_shoes', 'loafers', 'moccasins', 'mocassins', 'oxford_shoes', 'pump_shoes', 'running_shoes', 'sabot', 'wooden_shoes', 'sandals', 'slingbacks', 'sling_shoes', 'walker_shoes', 'walking_shoes', 'wedgie', 'wing_shoes', 'tip_shoes', 'stiletto', 'heeled']), RelationSample(subject='sofa', object=['divan', 'diwan', 'convertible_sofa', 'daybed', 'loveseat', 'settee', 'squab']), RelationSample(subject='song', object=['lullaby', 'religious_song', 'anthem', 'aria', 'ballad', 'lay', 'barcarole', 'barcarolle', 'ditty', 'dirge', 'coronach', 'lament', 'requiem', 'threnody', 'drinking_song', 'folk_song', 'folksong', 'folk_ballad', 'lied', 'love_song', 'love-song', 'cradlesong', 'berceuse', 'oldie', 'golden_oldie', 'partsong', 'prothalamion', 'prothalamium', 'roundelay', 'scolion', 'banquet_song', 'serenade', 'torch_song', 'work_song']), RelationSample(subject='spice', object=['pepper', 'allspice', 'ajwain', 'cumin', 'caraway_seed', 'cardamom', 'cassia', 'cayenne', 'celery_seeds', 'chile_pepper', 'chile', 'cinnamon', 'clove', 'coriander', 'dill', 'fennel', 'fenugreek', 'frankincense', 'galangal', 'garlic', 'ginger', 'horseradish', 'jalapeño', 'juniper', 'licorice', 'mace', 'mustard', 'nutmeg', 'onion', 'paprika', 'peppercorns', 'saffron', 'savory', 'sesame', 'anise', 'sumac', 'tabasco', 'tamarind', 'turmeric', 'five_spice_powder', 'ginger', 'powdered_ginger', 'chinese_anise', 'star_anise', 'star_aniseed']), RelationSample(subject='sweater', object=['turtleneck', 'cardigan', 'pullover', 'slipover', 'turtle', 'polo-neck']), RelationSample(subject='tool', object=['rake', 'abrader', 'abradant', 'bender', 'clincher', 'comb', 'cutting_implement', 'drill', 'eolith', 'fork', 'gang', 'garden_tool', 'lawn_tool', 'grapnel', 'grapple', 'grappler', 'grappling_hook', 'grappling_iron', 'hack', 'hand_tool', 'hoe', 'jack', 'jaws_of_life', 'neolith', 'paleolith', 'pestle', 'muller', 'pounder', 'plow', 'plough', 'power_tool', 'punch', 'puncher', 'ram', 'rounder', 'saw_set', 'shaping_tool', 'strickle', 'stylus', 'style', 'tamp', 'tamper', 'tamping_bar', 'tap', 'upset', 'swage']), RelationSample(subject='toy', object=['doll', 'ball', 'balloon', 'cockhorse', 'dolly', 'dollhouse', 'house', 'frisbee', 'hobby', 'hobbyhorse', 'rocking', 'horse', 'hula-hoop', 'jack-in-the-box', 'jungle', 'gym', 'jumping', 'jack', 'kaleidoscope', 'kite', 'lego', 'meccano', 'shooter', 'pinata', 'pinwheel', 'playhouse', 'wendy', 'pogo', 'stick', 'popgun', 'rattle', 'sandbox', 'sandpile', 'sandpit', 'seesaw', 'teeter', 'teeter-totter', 'teetertotter', 'teeterboard', 'tilting', 'board', 'dandle', 'slide', 'playground', 'sliding', 'slingshot', 'sling', 'catapult', 'stick', 'horse', 'swing', 'teddy', 'bear', 'top', 'whirligig', 'teetotum', 'spinning', 'train', 'water_pistol', 'gun', 'squirt', 'squirter', 'yo-yo']), RelationSample(subject='trousers', object=['jeans', 'bellbottom_trousers', 'bell-bottoms', 'bellbottom_pants', 'breeches', 'knee_breeches', 'knee_pants', 'knickerbockers', 'knickers', 'chino', 'churidars', 'cords', 'corduroys', 'flannel', 'gabardine', 'tweed', 'white', 'jean', 'blue_jean', 'denim', 'jodhpurs', 'jodhpur_breeches', 'riding_breeches', 'long_trousers', 'long_pants', 'pajama', 'pyjama', 'pantaloon', 'pedal_pusher', 'toreador_pants', 'salwar', 'shalwar', 'short_pants', 'shorts', 'trunks', 'slacks', 'stretch_pants', 'sweat_pants', 'sweatpants', 'trews', 'britches', 'buckskins', 'plus_fours', 'trunk_hose', "levi's", 'levis', 'bermuda_shorts', 'jamaica_shorts', 'hot_pants', 'lederhosen']), RelationSample(subject='weapon', object=['gun', 'bow', 'bow', 'arrow', 'dart', 'knucks', 'knuckles', 'flamethrower', 'knife', 'missile', 'pike', 'projectile', 'slasher', 'sling', 'spear', 'lance', 'shaft', 'stun', 'baton', 'sword', 'blade', 'brand', 'steel', 'tomahawk', 'hatchet', 'fire']), RelationSample(subject='weekday', object=['monday', 'workday', 'working_day', 'work_day', 'feria', 'mon', 'tuesday', 'tues', 'wednesday', 'midweek', 'wed', 'thursday', 'th', 'friday', 'fri', 'saturday', 'sabbatum', 'sat'])], _domain=None, _range=None)
2024-06-14 05:57:06 root INFO     starting operator prediction
2024-06-14 05:57:06 root INFO     using no context
2024-06-14 05:57:06 root INFO     [order_1_approx] starting weight calculation
2024-06-14 06:01:04 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 06:01:04 root INFO     [order_1_approx] weight calculation finished
2024-06-14 06:01:05 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-14 06:01:05 root INFO     [order_1_approx] starting weight calculation
2024-06-14 06:05:04 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 06:05:04 root INFO     [order_1_approx] weight calculation finished
2024-06-14 06:05:05 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-14 06:05:05 root INFO     [order_1_approx] starting weight calculation
2024-06-14 06:09:02 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 06:09:02 root INFO     [order_1_approx] weight calculation finished
2024-06-14 06:09:03 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-14 06:09:03 root INFO     [order_1_approx] starting weight calculation
2024-06-14 06:13:02 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 06:13:02 root INFO     [order_1_approx] weight calculation finished
2024-06-14 06:13:03 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-14 06:13:03 root INFO     [order_1_approx] starting weight calculation
2024-06-14 06:17:00 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 06:17:00 root INFO     [order_1_approx] weight calculation finished
2024-06-14 06:17:01 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-14 06:17:01 root INFO     [order_1_approx] starting weight calculation
2024-06-14 06:20:59 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 06:20:59 root INFO     [order_1_approx] weight calculation finished
2024-06-14 06:20:59 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-14 06:21:00 root INFO     [order_1_approx] starting weight calculation
2024-06-14 06:24:56 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 06:24:56 root INFO     [order_1_approx] weight calculation finished
2024-06-14 06:24:57 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-14 06:24:57 root INFO     [order_1_approx] starting weight calculation
2024-06-14 06:28:54 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 06:28:54 root INFO     [order_1_approx] weight calculation finished
2024-06-14 06:28:55 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-14 06:28:55 root INFO     total operator prediction time: 1909.4401128292084 seconds
2024-06-14 06:28:58 root INFO     ['\n', '...', ' ', ' (', ' Lounge'] matches ['pouch', 'backpack', 'knapsack', 'packsack', 'rucksack', 'haversack', 'beanbag', 'bladder', 'pouch', 'carryall', 'holdall', 'tote', 'tote', 'drawstring', 'dust', 'vacuum', 'envelope', 'gasbag', 'gamebag', 'golf', 'gunnysack', 'gunny', 'burlap', 'ice', 'mailbag', 'postbag', 'nosebag', 'feedbag', 'pannier', 'plastic', 'purse', 'ragbag', 'rosin', 'sachet', 'sack', 'poke', 'paper', 'carrier', 'saddlebag', 'sandbag', 'schoolbag', 'shopping', 'sick_bag', 'sickbag', 'skin', 'sleeping', 'sweat', 'tea', 'toilet', 'sponge', 'tool', 'tucker-bag'] is False
2024-06-14 06:28:58 root INFO     ['\n', '...', ' ', ' (', ' Lounge'] matches ['ferry', 'ark', 'barge', 'flatboat', 'hoy', 'lighter', 'bumboat', 'canal_boat', 'narrow_boat', 'narrowboat', 'ferryboat', 'fireboat', 'gondola', 'guard_boat', 'gunboat', 'junk', 'longboat', 'lugger', 'mackinaw', 'mackinaw', 'mailboat', 'mail', 'packet', 'packet', 'motorboat', 'powerboat', 'pilot', 'police', 'punt', 'river_boat', 'scow', 'sea_boat', 'small_boat', 'steamboat', 'surfboat', 'tender_boat', 'pinnace', 'cutter_boat', 'tugboat', 'tug', 'towboat', 'tower_boat', 'motorboat', 'yacht', 'sail', 'row', 'canoe', 'kayak', 'paddle', 'paddle_boat'] is False
2024-06-14 06:28:58 root INFO     ['\n', '...', ' ', ' (', ' Lounge'] matches ['paperback', 'album', 'folio', 'hardback', 'hardcover', 'journal', 'novel', 'order', 'paper-back', 'softback', 'soft-cover', 'picture', 'sketchbook', 'sketch', 'notebook'] is False
2024-06-14 06:28:58 root INFO     ['\n', '...', ' ', ' Lounge', ' ('] matches ['toothbrush', 'bottlebrush', 'bristle', 'clothesbrush', 'hairbrush', 'nailbrush', 'paintbrush', 'sable', 'scrub', 'scrubbing', 'scrubber', 'shaving_brush'] is False
2024-06-14 06:28:58 root INFO     [' ', ' s', ' d', ' m', ' p'] matches ['hamburger', 'cheeseburger', '50', '50_burger', 'angus_burger', 'banquet_burger', 'barbecue_burger', 'bøfsandwich', 'utter_burge', 'buffalo_burger', 'california_burger', 'chili_burger', 'curry_burger', 'hamdog', 'salmon_burger', 'rice_burger', 'veggie_burger'] is False
2024-06-14 06:28:58 root INFO     ['\n', '...', ' ', ' (', ' Lounge'] matches ['camcorder', 'box_camera', 'box_kodak', 'candid_camera', 'digital_camera', 'flash_camera', 'motion-picture_camera', 'movie_camera', 'cine-camera', 'point-and-shoot_camera', 'point-and-shoot', 'polaroid_camera', 'polaroid_land_camera', 'polaroid', 'portrait_camera', 'reflex_camera', 'webcam', 'webcamera', 'sound_camera'] is False
2024-06-14 06:28:58 root INFO     [' ', ' s', ' p', ' apple', ' t'] matches ['lollipop', 'candy_bar', 'carob_bar', 'hard_candy', 'brandyball', 'patty', 'bonbon', 'brittle', 'toffee', 'toffy', 'butterscotch', 'candy_cane', 'candy_corn', 'caramel', 'cotton_candy', 'spun_sugar', 'candyfloss', 'dragee', 'fondant', 'fudge', 'gumdrop', 'honey_crisp', 'mint', 'mint_candy', 'horehound', 'jelly_bean', 'jelly_egg', 'kiss', 'candy_kiss', 'licorice', 'liquorice', 'life_saver', 'sucker', 'all-day_sucker', 'lozenge', 'marshmallow', 'marzipan', 'marchpane', 'nougat', 'nougat_bar', 'nut_bar', 'peanut_bar', 'popcorn_ball', 'praline', 'rock_candy', 'rock', 'sugar_candy', 'sugarplum', 'taffy', 'truffle', 'chocolate_truffle', 'turkish_delight', 'easter_egg'] is False
2024-06-14 06:28:58 root INFO     ['\n', '...', ' ', ' (', ' Lounge'] matches ['chapel', 'abbey', 'basilica', 'cathedral', 'duomo', 'kirk'] is False
2024-06-14 06:28:58 root INFO     [' ', ' s', ' apple', ' p', ' m'] matches ['lemon', 'orange', 'lime', 'mandarin', 'tangerine', 'yuzu'] is False
2024-06-14 06:28:58 root INFO     ['\n', '...', ' ', ' Lounge', ' ('] matches ['thundercloud', 'cirrocumulus', 'cirrocumulus', 'cirrostratus', 'cirrus', 'contrail', 'condensation', 'trail', 'cumulonimbus', 'cumulonimbus', 'cumulus', 'nacreous', 'nebule', 'nimbus', 'rain', 'storm', 'stratus', 'mushroom', 'smoke'] is False
2024-06-14 06:28:58 root INFO     ['\n', ' ', '...', ' (', ' Lounge'] matches ['choker', 'ruff', 'ruffle', 'clerical', 'roman_collar', 'dog_collar', 'eton_collar', 'rabato_collar', 'rebato_collar', 'turtleneck', 'polo-neck', 'neckpiece'] is False
2024-06-14 06:28:58 root INFO     ['\n', '...', ' ', ' (', ' Lounge'] matches ['white', 'black', 'blue', 'green', 'red', 'yello', 'orange', 'vermilion', 'amber', 'chartreuse', 'teal', 'violet', 'magenta', 'rose', 'azure', 'cyan', 'indigo', 'purple', 'brown'] is False
2024-06-14 06:28:58 root INFO     ['\n', '...', ' ', ' (', ' Lounge'] matches ['laptop', 'desktop', 'tablet', 'smartphone', 'supercomputer', 'iphone', 'ipad'] is False
2024-06-14 06:28:58 root INFO     ['\n', '...', ' ', ' (', ' Lounge'] matches ['bag', 'handbag', 'pocketbook', 'purse', 'basket', 'handbasket', 'bin', 'bowl', 'pipe', 'bowl', 'box', 'bread-bin', 'breadbox', 'bunker', 'can', 'tin', 'canister', 'cannister', 'capsule', 'cargo', 'case', 'display', 'showcase', 'vitrine', 'cassette', 'cup', 'cylinder', 'dice', 'cup', 'box', 'dish', 'dispenser', 'drawer', 'dumpster', 'empty', 'envelope', 'glass', 'bag', 'bottle', 'mailer', 'manger', 'trough', 'measure', 'mold', 'mould', 'cast', 'package', 'parcel', 'pan', 'pod', 'pot', 'flowerpot', 'flask', 'receptacle', 'reliquary', 'saltcellar', 'savings', 'bank', 'coin', 'money', 'bank', 'scuttle', 'coal', 'scuttle', 'shaker', 'spoon', 'thimble', 'capsule', 'vessel', 'basket', 'bin', 'waste-paper', 'wastebasket', 'waste', 'file', 'can', 'pot', 'workbasket', 'workbox', 'workbag'] is False
2024-06-14 06:28:58 root INFO     [' kitchen', ' ', ' s', ' dish', ' t'] matches ['pot', 'baster', 'chafing', 'dish', 'cooker', 'sheet', 'tray', 'enamelware', 'grid', 'gridiron', 'griddle', 'pan', 'poacher', 'skimmer', 'steamer', 'turner'] is True
2024-06-14 06:28:58 root INFO     ['\n', ' ', '...', ' Lounge', ' ('] matches ['teacup', 'beaker', 'chalice', 'goblet', 'coffee_cup', 'dixie', 'paper_cup', 'grace', 'kylix', 'cylix', 'mustache_cup', 'moustache_cup', 'scyphus', 'grail'] is False
2024-06-14 06:28:58 root INFO     [' ', ' p', ' table', ' s', ' m'] matches ['pincushion', 'pillow', 'air', 'inflatable', 'gaddi', 'hassock', 'headrest', 'pillow', 'seat'] is False
2024-06-14 06:28:58 root INFO     [' table', ' kitchen', ' ', ' s', ' p'] matches ['knife', 'fork', 'spoon', 'tablefork', 'teaspoon', 'dessert_spoon', 'salad_fork', 'carving_fork'] is True
2024-06-14 06:28:58 root INFO     [' ', ' s', ' d', ' m', ' p'] matches ['cake', 'ambrosia', 'baked_alaska', 'blancmange', 'charlotte', 'compote', 'fruit_compote', 'dumpling', 'flan', 'frozen_dessert', 'junket', 'mold', 'mould', 'mousse', 'pavlova', 'peach_melba', 'pudding', 'pud', 'pudding', 'syllabub', 'sillabub', 'tiramisu', 'whip', 'zabaglione', 'sabayon', 'charlotte_russe', 'apple_dumpling', 'frozen_custard', 'soft_ice_cream', 'frozen_pudding', 'frozen_yogurt', 'ice-cream_cake', 'icebox_cake', 'ice-cream_cone', 'ice-cream_sundae', 'sundae', 'ice', 'frappe', 'ice_cream', 'icecream', 'ice_lolly', 'lolly', 'lollipop', 'popsicle', 'ice_milk', 'parfait', 'sherbert', 'sherbet', 'snowball', 'snowball', 'split', 'chocolate_mousse', 'trifle', 'brown_betty', 'chocolate_pudding', 'duff', 'plum_duff', 'flummery', 'nesselrode', 'nesselrode_pudding', 'pease_pudding', 'plum_pudding', 'christmas_pudding', 'roly-poly', 'roly-poly_pudding', 'steamed_pudding', 'suet_pudding', 'tapioca_pudding', 'vanilla_pudding', 'prune_whip', 'water_ice', 'sorbet', 'chocolate_ice_cream', 'neapolitan_ice_cream', 'peach_ice_cream', 'strawberry_ice_cream', 'tutti-frutti', 'vanilla_ice_cream', 'banana_split', 'tipsy_cake', 'spotted_dick', 'choc-ice'] is False
2024-06-14 06:28:58 root INFO     ['\n', '...', ' ', ' (', ' Lounge'] matches ['gown', 'caftan', 'kaftan', 'chemise', 'sack', 'shift', 'coatdress', 'cocktail_dress', 'sheath', 'dirndl', 'gown', 'jumper', 'pinafore', 'pinny', 'kirtle', 'morning', 'evening', 'muumuu', 'polonaise', 'sari', 'saree', 'shirtdress', 'strapless', 'sundress'] is False
2024-06-14 06:28:58 root INFO     [' ', ' s', ' p', ' t', ' d'] matches ['tambourine', 'bass_drum', 'gran_casa', 'bongo', 'bongo_drum', 'snare_drum', 'snare', 'side_drum', 'tabor', 'tabour', 'tambour', 'tenor_drum', 'tom-tom', 'timbrel', 'djembe', 'doumbek', 'darbuka'] is False
2024-06-14 06:28:58 root INFO     [' ', ' s', ' car', ' p', ' t'] matches ['anger', 'choler', 'ire', 'anxiety', 'conditioned_emotional_response', 'cer', 'conditioned_emotion', 'emotional_state', 'spirit', 'fear', 'fearfulness', 'fright', 'fear', 'reverence', 'awe', 'veneration', 'hate', 'hatred', 'joy', 'joyousness', 'joyfulness', 'love', 'annoyance', 'chafe', 'vexation', 'bad_temper', 'ill_temper', 'dander', 'hackles', 'fury', 'rage', 'madness', 'huffiness', 'indignation', 'outrage', 'infuriation', 'enragement', 'umbrage', 'offense', 'offence', 'angst', 'anxiousness', 'disquiet', 'concern', 'care', 'fear', 'discomfiture', 'discomposure', 'disconcertion', 'disconcertment', 'edginess', 'uneasiness', 'inquietude', 'disquietude', 'insecurity', 'jitteriness', 'jumpiness', 'nervousness', 'restiveness', 'scruple', 'qualm', 'misgiving', 'sinking', 'sinking_feeling', 'worry', 'trouble', 'ecstasy', 'rapture', 'transport', 'exaltation', 'raptus', 'embarrassment', 'gratification', 'satisfaction', 'happiness', 'felicity', 'state', 'unhappiness', 'alarm', 'dismay', 'consternation', 'apprehension', 'apprehensiveness', 'dread', 'creeps', 'frisson', 'shiver', 'chill', 'quiver', 'shudder', 'thrill', 'tingle', 'horror', 'hysteria', 'intimidation', 'panic', 'terror', 'affright', 'scare', 'panic_attack', 'stage_fright', 'timidity', 'timidness', 'timorousness', 'abhorrence', 'abomination', 'detestation', 'execration', 'loathing', 'odium', 'despisal', 'despising', 'hostility', 'enmity', 'ill_will', 'malevolence', 'malignity', 'misanthropy', 'misogamy', 'misogyny', 'misogynism', 'misology', 'misoneism', 'misopedia', 'murderousness', 'elation', 'high_spirits', 'lightness', 'exhilaration', 'excitement', 'exuberance', 'exultation', 'jubilance', 'jubilancy', 'jubilation', 'agape', 'agape', 'agape_love', 'amorousness', 'enamoredness', 'ardor', 'ardour', 'benevolence', 'devotion', 'devotedness', 'filial_love', 'heartstrings', 'lovingness', 'caring', 'loyalty', 'puppy_love', 'calf_love', 'crush', 'infatuation', 'worship', 'adoration', 'aggravation', 'exasperation', 'displeasure', 'frustration', 'harassment', 'torment', 'pique', 'temper', 'irritation', 'fit', 'tantrum', 'scene', 'conniption', 'irascibility', 'short_temper', 'spleen', 'quick_temper', 'lividity', 'wrath', 'dudgeon', 'high_dudgeon', 'willies', 'comfort', 'quality_of_life', 'blessedness', 'beatitude', 'beatification', 'radiance', 'embitterment', 'sadness', 'sorrow', 'sorrowfulness', 'chill', 'pall', 'foreboding', 'premonition', 'presentiment', 'boding', 'gloom', 'gloominess', 'somberness', 'sombreness', 'suspense', 'trepidation', 'swivet', 'cold_feet', 'diffidence', 'self-doubt', 'self-distrust', 'shyness', 'aggression', 'aggressiveness', 'animosity', 'animus', 'bad_blood', 'antagonism', 'belligerence', 'belligerency', 'class_feeling', 'resentment', 'bitterness', 'gall', 'rancor', 'rancour', 'maleficence', 'malice', 'maliciousness', 'spite', 'spitefulness', 'venom', 'vindictiveness', 'vengefulness', 'misocainea', 'euphoria', 'euphory', 'bang', 'boot', 'charge', 'rush', 'flush', 'thrill', 'kick', 'intoxication', 'titillation', 'triumph', 'beneficence', 'warmheartedness', 'warmth', 'nirvana', 'enlightenment', 'mourning', 'bereavement', 'poignance', 'poignancy', 'presage', 'shadow', 'hesitance', 'hesitancy', 'unassertiveness', 'warpath', 'envy', 'enviousness', 'grudge', 'score', 'grievance', 'heartburning', 'sulkiness', 'huffishness', 'covetousness', 'jealousy', 'green-eyed_monster', 'penis_envy'] is True
2024-06-14 06:28:58 root INFO     [' ', ' s', ' t', ' m', ' p'] matches ['thermos', 'ampulla', 'canteen', 'erlenmeyer_flask', 'hipflask', 'pocket_flask', 'round-bottom_flask', 'vacuum_flask', 'vacuum_bottle', 'dewar_flask', 'dewar', 'thermos_bottle', 'thermos_flask'] is False
2024-06-14 06:28:58 root INFO     [' ', ' guitar', ' s', ' d', ' p'] matches ['ukulele', 'bass', 'bass_guitar', 'acoustic_guitar', 'cittern', 'cithern', 'cither', 'citole', 'gittern', 'electric_guitar', 'hawaiian', 'steel', 'uke'] is False
2024-06-14 06:28:58 root INFO     ['\n', '...', ' ', ' (', ' Lounge'] matches ['rifle', 'air', 'airgun', 'antiaircraft', 'flak', 'flack', 'pom-pom', 'ack-ack', 'breechloader', 'cannon', 'firearm', 'piece', 'small-arm', 'gas', 'minute', 'quaker', 'set', 'spring', 'whaling'] is False
2024-06-14 06:28:58 root INFO     [' ', ' s', ' v', ' p', ' car'] matches ['diamond', 'ruby', 'pearl', 'emerald', 'sapphire'] is False
2024-06-14 06:28:58 root INFO     [' ', ' s', ' d', ' p', ' to'] matches ['bracelet', 'bead', 'bijou', 'bling', 'bling_bling', 'bangle', 'clip', 'cufflink', 'earring', 'jewel', 'gem', 'precious_stone', 'necklace', 'pin', 'ring', 'band', 'tie_clip', 'bugle', 'anklet', 'ankle_bracelet', 'armilla', 'pendant_earring', 'drop_earring', 'eardrop', 'crown_jewel', 'diamond', 'emerald', 'pearl', 'ruby', 'sapphire', 'solitaire', 'chain', 'chain', 'string', 'strand', 'choker', 'collar', 'dog_collar', 'neckband', 'brooch', 'broach', 'breastpin', 'scatter_pin', 'stickpin', 'tie_tack', 'tiepin', 'scarfpin', 'annulet', 'engagement_ring', 'mourning_ring', 'ringlet', 'signet_ring', 'seal_ring', 'wedding_ring', 'wedding_band', 'ice', 'sparkler', 'seed_pearl', 'sunburst'] is False
2024-06-14 06:28:58 root INFO     [' ', ' s', ' p', ' t', ' m'] matches ['blender', 'liquidizer', 'liquidiser', 'eggbeater', 'eggwhisk', 'electric', 'whisk'] is False
2024-06-14 06:28:58 root INFO     ['\n', '...', ' ', ' (', 'f'] matches ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december', 'jan', 'feb', 'mar', 'apr', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'] is False
2024-06-14 06:28:58 root INFO     [' ', ' s', ' p', ' car', ' paint'] matches ['watercolor', 'abstraction', 'cityscape', 'daub', 'distemper', 'finger-painting', 'icon', 'ikon', 'landscape', 'miniature', 'illumination', 'monochrome', 'mural', 'wall', 'nude', 'nude_painting', 'oil', 'pentimento', 'sand', 'seascape', 'waterscape', 'semi-abstraction', 'still_life', 'tanka', 'water-color', 'watercolour', 'water-colour', 'fresco', 'graffitti'] is False
2024-06-14 06:28:58 root INFO     [' s', ' ', ' t', ' p', ' j'] matches ['haiku', 'abecedarius', 'alcaic', 'alcaic_verse', 'ballad', 'lay', 'ballade', 'blank_verse', 'elegy', 'lament', 'epic_poem', 'heroic_poem', 'epic', 'epos', 'free_verse', 'vers_libre', 'lyric', 'lyric_poem', 'rondeau', 'rondel', 'sonnet', 'tanka', 'terza_rima', 'verse', 'rhyme', 'versicle'] is False
2024-06-14 06:28:58 root INFO     ['\n', '...', ' ', ' Lounge', ' ('] matches ['spring', 'harvest', 'haying', 'fall', 'autumn', 'springtime', 'summer', 'summertime', 'winter', 'wintertime', 'rainy', 'dry', 'growing', 'seedtime', 'sheepshearing', 'holiday', 'high', 'peak', 'off-season', 'preseason', 'baseball', 'basketball', 'exhibition', 'concert', 'fishing', 'football', 'hockey', 'hunting', 'social', 'theatrical', 'whitsun', 'whitsuntide', 'whitweek'] is False
2024-06-14 06:28:58 root INFO     ['\n', '...', ' ', ' (', ' Lounge'] matches ['chair', 'bench', 'box', 'ottoman', 'pouf', 'pouffe', 'puff', 'hassock', 'sofa', 'couch', 'lounge', 'stool', 'toilet'] is True
2024-06-14 06:28:58 root INFO     [' ', ' s', ' table', ' t', ' box'] matches ['bookshelf', 'hob', 'mantel', 'mantelpiece', 'mantle', 'mantlepiece', 'chimneypiece', 'overmantel', 'berm'] is False
2024-06-14 06:28:58 root INFO     ['\n', '...', ' ', ' (', ' Lounge'] matches ['polo', 'camise', 'dashiki', 'daishiki', 'dress', 'evening', 'hair', 'jersey', 't-shirt', 'tee', 'kurta', 'sport', 'tank', 'work-shirt'] is False
2024-06-14 06:28:58 root INFO     [' ', ' d', ' p', ' s', ' car'] matches ['sneakers', 'anklet', 'baby_shoes', 'balmoral', 'blucher', 'bowling_shoes', 'brogan', 'brogue', 'clodhopper', 'work_shoes', 'calceus', 'chopine', 'platform_shoes', 'chukka', 'boots', 'cleats', 'congress_shoes', 'gaiters', 'flipper_shoes', 'fin_shoes', 'ghillie', 'gillie', 'gym_shoes', 'tennis_shoes', 'loafers', 'moccasins', 'mocassins', 'oxford_shoes', 'pump_shoes', 'running_shoes', 'sabot', 'wooden_shoes', 'sandals', 'slingbacks', 'sling_shoes', 'walker_shoes', 'walking_shoes', 'wedgie', 'wing_shoes', 'tip_shoes', 'stiletto', 'heeled'] is False
2024-06-14 06:28:58 root INFO     [' table', ' ', ' p', ' t', ' desk'] matches ['divan', 'diwan', 'convertible_sofa', 'daybed', 'loveseat', 'settee', 'squab'] is False
2024-06-14 06:28:58 root INFO     ['\n', '...', ' ', ' (', ' Lounge'] matches ['lullaby', 'religious_song', 'anthem', 'aria', 'ballad', 'lay', 'barcarole', 'barcarolle', 'ditty', 'dirge', 'coronach', 'lament', 'requiem', 'threnody', 'drinking_song', 'folk_song', 'folksong', 'folk_ballad', 'lied', 'love_song', 'love-song', 'cradlesong', 'berceuse', 'oldie', 'golden_oldie', 'partsong', 'prothalamion', 'prothalamium', 'roundelay', 'scolion', 'banquet_song', 'serenade', 'torch_song', 'work_song'] is False
2024-06-14 06:28:58 root INFO     [' s', ' ', ' p', ' m', ' kitchen'] matches ['pepper', 'allspice', 'ajwain', 'cumin', 'caraway_seed', 'cardamom', 'cassia', 'cayenne', 'celery_seeds', 'chile_pepper', 'chile', 'cinnamon', 'clove', 'coriander', 'dill', 'fennel', 'fenugreek', 'frankincense', 'galangal', 'garlic', 'ginger', 'horseradish', 'jalapeño', 'juniper', 'licorice', 'mace', 'mustard', 'nutmeg', 'onion', 'paprika', 'peppercorns', 'saffron', 'savory', 'sesame', 'anise', 'sumac', 'tabasco', 'tamarind', 'turmeric', 'five_spice_powder', 'ginger', 'powdered_ginger', 'chinese_anise', 'star_anise', 'star_aniseed'] is False
2024-06-14 06:28:58 root INFO     [' ', ' p', ' d', ' t', ' s'] matches ['turtleneck', 'cardigan', 'pullover', 'slipover', 'turtle', 'polo-neck'] is False
2024-06-14 06:28:58 root INFO     ['\n', '...', ' ', ' (', 'f'] matches ['rake', 'abrader', 'abradant', 'bender', 'clincher', 'comb', 'cutting_implement', 'drill', 'eolith', 'fork', 'gang', 'garden_tool', 'lawn_tool', 'grapnel', 'grapple', 'grappler', 'grappling_hook', 'grappling_iron', 'hack', 'hand_tool', 'hoe', 'jack', 'jaws_of_life', 'neolith', 'paleolith', 'pestle', 'muller', 'pounder', 'plow', 'plough', 'power_tool', 'punch', 'puncher', 'ram', 'rounder', 'saw_set', 'shaping_tool', 'strickle', 'stylus', 'style', 'tamp', 'tamper', 'tamping_bar', 'tap', 'upset', 'swage'] is False
2024-06-14 06:28:58 root INFO     [' ', ' t', ' s', ' table', ' p'] matches ['doll', 'ball', 'balloon', 'cockhorse', 'dolly', 'dollhouse', 'house', 'frisbee', 'hobby', 'hobbyhorse', 'rocking', 'horse', 'hula-hoop', 'jack-in-the-box', 'jungle', 'gym', 'jumping', 'jack', 'kaleidoscope', 'kite', 'lego', 'meccano', 'shooter', 'pinata', 'pinwheel', 'playhouse', 'wendy', 'pogo', 'stick', 'popgun', 'rattle', 'sandbox', 'sandpile', 'sandpit', 'seesaw', 'teeter', 'teeter-totter', 'teetertotter', 'teeterboard', 'tilting', 'board', 'dandle', 'slide', 'playground', 'sliding', 'slingshot', 'sling', 'catapult', 'stick', 'horse', 'swing', 'teddy', 'bear', 'top', 'whirligig', 'teetotum', 'spinning', 'train', 'water_pistol', 'gun', 'squirt', 'squirter', 'yo-yo'] is False
2024-06-14 06:28:58 root INFO     [' ', ' d', ' car', ' p', ' s'] matches ['jeans', 'bellbottom_trousers', 'bell-bottoms', 'bellbottom_pants', 'breeches', 'knee_breeches', 'knee_pants', 'knickerbockers', 'knickers', 'chino', 'churidars', 'cords', 'corduroys', 'flannel', 'gabardine', 'tweed', 'white', 'jean', 'blue_jean', 'denim', 'jodhpurs', 'jodhpur_breeches', 'riding_breeches', 'long_trousers', 'long_pants', 'pajama', 'pyjama', 'pantaloon', 'pedal_pusher', 'toreador_pants', 'salwar', 'shalwar', 'short_pants', 'shorts', 'trunks', 'slacks', 'stretch_pants', 'sweat_pants', 'sweatpants', 'trews', 'britches', 'buckskins', 'plus_fours', 'trunk_hose', "levi's", 'levis', 'bermuda_shorts', 'jamaica_shorts', 'hot_pants', 'lederhosen'] is False
2024-06-14 06:28:58 root INFO     ['\n', '...', ' ', ' (', ' Lounge'] matches ['gun', 'bow', 'bow', 'arrow', 'dart', 'knucks', 'knuckles', 'flamethrower', 'knife', 'missile', 'pike', 'projectile', 'slasher', 'sling', 'spear', 'lance', 'shaft', 'stun', 'baton', 'sword', 'blade', 'brand', 'steel', 'tomahawk', 'hatchet', 'fire'] is False
2024-06-14 06:28:58 root INFO     [' ', ' s', ' m', ' p', ' t'] matches ['monday', 'workday', 'working_day', 'work_day', 'feria', 'mon', 'tuesday', 'tues', 'wednesday', 'midweek', 'wed', 'thursday', 'th', 'friday', 'fri', 'saturday', 'sabbatum', 'sat'] is False
2024-06-14 06:28:58 root INFO     hyponyms - misc,50,480,728

2024-06-14 06:28:58 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='hypernyms - animals', prompt_templates=['The {} falls into the category of', 'The {} is classified as a', 'The {} is a type of'], prompt_templates_zs=['The {} falls into the category of', 'The {} is classified as a', 'The {} is a type of'], samples=[RelationSample(subject='allosaurus', object=['dinosaur', 'reptile', 'bird', 'archosaur', 'archosaurian', 'archosaurian_reptile', '']), RelationSample(subject='anaconda', object=['snake', 'reptile', 'boa', 'serpent', 'ophidian']), RelationSample(subject='ant', object=['insect', 'invertebrate', 'creature', 'beast', 'hymenopteran', 'being', 'animal', 'organism', 'fauna', 'arthropod', 'hymenopterous_insect', 'animate_being', 'physical_hymenopteron', 'physical_entity', 'hymenopter', 'living_thing']), RelationSample(subject='beaver', object=['rodent', 'vertebrate', 'creature', 'beast', 'animal', 'organism', 'fauna', 'placental', 'chordate', 'eutherian', 'mammal', 'mammalian', 'eutherian_mammal', 'gnawer', 'animate_being', 'living_thing', 'placental_mammal', 'craniate', '']), RelationSample(subject='bee', object=['insect', 'invertebrate', 'creature', 'beast', 'hymenopteran', 'being', 'animal', 'insect', 'organism', 'fauna', 'arthropod', 'hymenopterous_insect', 'animate_being', 'hymenopteron', 'hymenopter', 'living_thing']), RelationSample(subject='beetle', object=['insect', 'invertebrate', 'creature', 'beast', 'being', 'animal', 'insect', 'organism', 'fauna', 'arthropod', 'animate_being', 'living_thing']), RelationSample(subject='buffalo', object=['bovid', 'mammal', 'bison', 'cow', 'vertebrate', 'creature', 'ungulate', 'beast', 'being', 'animal', 'organism', 'fauna', 'placental', 'artiodactyl', 'ruminant', 'chordate', 'eutherian', 'mammalian', 'bovine', 'animate_being', 'eutherian_mammal', 'placental_mammal', 'craniate', 'physical_hoofed_mammal', 'physical_entity', 'even-toed_ungulate', 'artiodactyl_mammal', 'living_thing']), RelationSample(subject='butterfly', object=['insect', 'creature', 'beast', 'lepidopteran', 'animal', 'organism', 'fauna', 'arthropod', 'lepidopterous_insect', 'lepidopteron', 'animate_being', 'living_thing']), RelationSample(subject='cat', object=['feline', 'beast', 'animal', 'organism', 'fauna', 'placental', 'carnivore', 'chordate', 'felid', 'eutherian', 'mammal', 'mammalian', 'eutherian_mammal', 'animate_being', 'placental_mammal', 'craniate', '']), RelationSample(subject='chicken', object=['fowl', 'bird', 'vertebrate', 'poultry', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'poultry', 'chordate', 'domestic_fowl', 'animate_being', 'gallinaceous_bird', 'craniate', 'gallinacean', 'living_thing']), RelationSample(subject='chimpanzee', object=['primate', 'vertebrate', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'placental', 'hominid', 'chordate', 'eutherian', 'mammal', 'ape', 'mammalian', 'animate_being', 'eutherian_mammal', 'placental_mammal', 'craniate', 'physical_physical_entity', 'living_thing']), RelationSample(subject='chinchilla', object=['rodent', 'vertebrate', 'creature', 'beast', 'animal', 'organism', 'fauna', 'placental', 'chordate', 'eutherian', 'mammal', 'mammalian', 'eutherian_mammal', 'gnawer', 'animate_being', 'living_thing', 'placental_mammal', 'craniate', '']), RelationSample(subject='cobra', object=['snake', 'reptile', 'elapid', 'elapid_snake', 'serpent', 'ophidian']), RelationSample(subject='cockroach', object=['insect', 'invertebrate', 'creature', 'beast', 'dictyopterous_insect', 'being', 'animal', 'organism', 'fauna', 'arthropod', 'animate_being', 'physical_entity', 'living_thing']), RelationSample(subject='cow', object=['bovid', 'mammal', 'cattle', 'vertebrate', 'creature', 'ungulate', 'beast', 'being', 'animal', 'organism', 'fauna', 'placental', 'artiodactyl', 'ruminant', 'chordate', 'eutherian', 'mammalian', 'animate_being', 'eutherian_mammal', 'placental_mammal', 'craniate', 'physical_hoofed_mammal', 'physical_entity', 'even-toed_ungulate', 'artiodactyl_mammal', 'living_thing']), RelationSample(subject='coyote', object=['canine', 'vertebrate', 'creature', 'beast', 'canid', 'being', 'animal', 'organism', 'fauna', 'placental', 'carnivore', 'chordate', 'eutherian', 'mammal', 'mammalian', 'animate_being', 'eutherian_mammal', 'locomote', 'placental_mammal', 'craniate', 'domesticated_animal', 'physical_entity', 'domestic_animal', 'living_thing']), RelationSample(subject='deer', object=['bovid', 'mammal', 'vertebrate', 'creature', 'ungulate', 'beast', 'being', 'animal', 'organism', 'fauna', 'placental', 'artiodactyl', 'ruminant', 'chordate', 'eutherian', 'mammalian', 'bovine', 'animate_being', 'eutherian_mammal', 'placental_mammal', 'craniate', 'physical_hoofed_mammal', 'physical_entity', 'even-toed_ungulate', 'artiodactyl_mammal', 'living_thing']), RelationSample(subject='dog', object=['canine', 'vertebrate', 'creature', 'beast', 'canid', 'being', 'animal', 'organism', 'fauna', 'placental', 'carnivore', 'chordate', 'eutherian', 'mammal', 'mammalian', 'animate_being', 'eutherian_mammal', 'locomote', 'placental_mammal', 'craniate', 'domesticated_animal', 'physical_entity', 'domestic_animal', 'living_thing']), RelationSample(subject='duck', object=['fowl', 'bird', 'vertebrate', 'poultry', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'poultry', 'chordate', 'domestic_fowl', 'waterfowl', 'water_fowl', 'animate_being', 'anseriform_bird', 'craniate', 'living_thing']), RelationSample(subject='eagle', object=['raptor', 'bird', 'vertebrate', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'chordate', 'animate_being', 'craniate', 'iving_thing', 'raptorial_bird', 'bird_of_prey', '']), RelationSample(subject='falcon', object=['raptor', 'bird', 'vertebrate', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'chordate', 'animate_being', 'craniate', 'living_thing', 'raptorial_bird', 'bird_of_prey', '']), RelationSample(subject='fox', object=['canine', 'vertebrate', 'creature', 'beast', 'canid', 'being', 'animal', 'organism', 'fauna', 'placental', 'carnivore', 'chordate', 'eutherian', 'mammal', 'mammalian', 'animate_being', 'eutherian_mammal', 'locomote', 'placental_mammal', 'craniate', 'domesticated_animal', 'physical_entity', 'domestic_animal', 'living_thing']), RelationSample(subject='gibbon', object=['primate', 'vertebrate', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'placental', 'chordate', 'eutherian', 'mammal', 'ape', 'mammalian', 'animate_being', 'eutherian_mammal', 'placental_mammal', 'craniate', 'physical_physical_entity', 'living_thing']), RelationSample(subject='goat', object=['bovid', 'mammal', 'vertebrate', 'ungulate', 'beast', 'being', 'animal', 'organism', 'fauna', 'placental', 'artiodactyl', 'chordate', 'eutherian', 'mammalian', 'animate_being', 'eutherian_mammal', 'placental_mammal', 'craniate', 'hoofed_mammal', 'even-toed_ungulate', 'artiodactyl_mammal', 'living_thing']), RelationSample(subject='goose', object=['fowl', 'bird', 'vertebrate', 'poultry', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'poultry', 'chordate', 'domestic_fowl', 'waterfowl', 'water_fowl', 'animate_being', 'anseriform_bird', 'craniate', 'living_thing']), RelationSample(subject='gorilla', object=['primate', 'vertebrate', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'placental', 'hominid', 'chordate', 'eutherian', 'mammal', 'ape', 'mammalian', 'animate_being', 'eutherian_mammal', 'placental_mammal', 'craniate', 'physical_physical_entity', 'living_thing']), RelationSample(subject='hawk', object=['raptor', 'bird', 'vertebrate', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'chordate', 'animate_being', 'craniate', 'living_thing', 'raptorial_bird', 'bird_of_prey', '']), RelationSample(subject='human', object=['primate', 'vertebrate', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'placental', 'hominid', 'chordate', 'eutherian', 'mammal', 'ape', 'mammalian', 'animate_being', 'eutherian_mammal', 'placental_mammal', 'craniate', 'physical_physical_entity', 'living_thing']), RelationSample(subject='jackal', object=['canine', 'vertebrate', 'creature', 'beast', 'canid', 'being', 'animal', 'organism', 'fauna', 'placental', 'carnivore', 'chordate', 'eutherian', 'mammal', 'mammalian', 'animate_being', 'eutherian_mammal', 'locomote', 'placental_mammal', 'craniate', 'domesticated_animal', 'physical_entity', 'domestic_animal', 'living_thing']), RelationSample(subject='jaguar', object=['feline', 'cat', 'beast', 'animal', 'organism', 'fauna', 'placental', 'carnivore', 'chordate', 'felid', 'eutherian', 'mammal', 'mammalian', 'eutherian_mammal', 'animate_being', 'placental_mammal', 'craniate', 'big_cat']), RelationSample(subject='leopard', object=['feline', 'cat', 'beast', 'animal', 'organism', 'fauna', 'placental', 'carnivore', 'causal_agent', 'chordate', 'felid', 'eutherian', 'mammal', 'mammalian', 'eutherian_mammal', 'animate_being', 'placental_mammal', 'craniate', 'big_cat']), RelationSample(subject='lion', object=['feline', 'cat', 'beast', 'animal', 'organism', 'fauna', 'placental', 'carnivore', 'chordate', 'felid', 'eutherian', 'mammal', 'mammalian', 'eutherian_mammal', 'animate_being', 'placental_mammal', 'craniate', 'big_cat']), RelationSample(subject='mamba', object=['snake', 'reptile', 'elapid', 'elapid_snake', 'serpent', 'ophidian']), RelationSample(subject='mouse', object=['rodent', 'vertebrate', 'creature', 'beast', 'animal', 'organism', 'fauna', 'placental', 'chordate', 'eutherian', 'mammal', 'mammalian', 'eutherian_mammal', 'gnawer', 'animate_being', 'living_thing', 'placental_mammal', 'craniate', '']), RelationSample(subject='orangutan', object=['primate', 'vertebrate', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'placental', 'hominid', 'chordate', 'eutherian', 'mammal', 'ape', 'mammalian', 'animate_being', 'eutherian_mammal', 'placental_mammal', 'craniate', 'physical_physical_entity', 'living_thing']), RelationSample(subject='owl', object=['raptor', 'bird', 'vertebrate', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'chordate', 'animate_being', 'craniate', 'living_thing', 'raptorial_bird', 'bird_of_prey', '']), RelationSample(subject='pony', object=['bovid', 'mammal', 'horse', 'vertebrate', 'creature', 'beast', 'animal', 'organism', 'fauna', 'placental', 'eutherian', 'mammal', 'equine', 'mammalian', 'equid', 'living_thing', 'odd-toed_ungulate', 'animate_being', 'eutherian_mammal', 'perissodactyl', 'placental_mammal', 'craniate', 'hoofed_mammal', 'physical_entity', 'perissodactyl_mammal', 'equus_caballus']), RelationSample(subject='porcupine', object=['rodent', 'vertebrate', 'creature', 'beast', 'animal', 'organism', 'fauna', 'placental', 'chordate', 'eutherian', 'mammal', 'mammalian', 'eutherian_mammal', 'gnawer', 'animate_being', 'living_thing', 'placental_mammal', 'craniate', '']), RelationSample(subject='quail', object=['fowl', 'bird', 'vertebrate', 'poultry', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'poultry', 'chordate', 'wild_fowl', 'wildfowl', 'animate_being', 'gallinaceous_bird', 'craniate', 'gallinacean', 'living_thing']), RelationSample(subject='rattlesnake', object=['snake', 'reptile', 'pit_viper', 'serpent', 'ophidian']), RelationSample(subject='squirrel', object=['rodent', 'vertebrate', 'creature', 'beast', 'animal', 'organism', 'fauna', 'placental', 'chordate', 'eutherian', 'mammal', 'mammalian', 'eutherian_mammal', 'gnawer', 'animate_being', 'living_thing', 'placental_mammal', 'craniate', '']), RelationSample(subject='stegosaurus', object=['dinosaur', 'reptile', 'armored_dinosaur', 'archosaur', 'archosaurian', 'archosaurian_reptile', '']), RelationSample(subject='tiger', object=['feline', 'cat', 'beast', 'animal', 'organism', 'fauna', 'placental', 'carnivore', 'chordate', 'felid', 'eutherian', 'mammal', 'mammalian', 'eutherian_mammal', 'animate_being', 'placental_mammal', 'craniate', 'big_cat']), RelationSample(subject='triceratops', object=['dinosaur', 'reptile', 'ceratopsian', 'horned_dinosaur', 'archosaur', 'archosaurian', 'archosaurian_reptile', '']), RelationSample(subject='turkey', object=['fowl', 'bird', 'vertebrate', 'poultry', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'poultry', 'chordate', 'domestic_fowl', 'animate_being', 'gallinaceous_bird', 'craniate', 'gallinacean', 'living_thing']), RelationSample(subject='tyrannosaurus', object=['dinosaur', 'reptile', 'theropod', 'theropod_dinosaur', 'bird-footed_dinosaur', 'archosaur', 'archosaurian', 'archosaurian_reptile', '']), RelationSample(subject='velociraptor', object=['dinosaur', 'reptile', 'maniraptor', 'archosaur', 'archosaurian', 'archosaurian_reptile', '']), RelationSample(subject='viper', object=['snake', 'reptile', 'snake', 'serpent', 'ophidian']), RelationSample(subject='vulture', object=['raptor', 'bird', 'vertebrate', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'chordate', 'animate_being', 'craniate', 'living_thing', 'raptorial_bird', 'bird_of_prey', '']), RelationSample(subject='wolf', object=['canine', 'vertebrate', 'creature', 'beast', 'canid', 'being', 'animal', 'organism', 'fauna', 'placental', 'carnivore', 'chordate', 'eutherian', 'mammal', 'mammalian', 'animate_being', 'eutherian_mammal', 'locomote', 'placental_mammal', 'craniate', 'domesticated_animal', 'physical_entity', 'domestic_animal', 'living_thing'])], _domain=None, _range=None)
2024-06-14 06:29:00 root INFO     starting operator prediction
2024-06-14 06:29:00 root INFO     using no context
2024-06-14 06:29:00 root INFO     [order_1_approx] starting weight calculation
2024-06-14 06:33:02 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 06:33:02 root INFO     [order_1_approx] weight calculation finished
2024-06-14 06:33:03 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-14 06:33:03 root INFO     [order_1_approx] starting weight calculation
2024-06-14 06:37:03 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 06:37:03 root INFO     [order_1_approx] weight calculation finished
2024-06-14 06:37:04 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-14 06:37:04 root INFO     [order_1_approx] starting weight calculation
2024-06-14 06:41:04 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 06:41:04 root INFO     [order_1_approx] weight calculation finished
2024-06-14 06:41:05 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-14 06:41:05 root INFO     [order_1_approx] starting weight calculation
2024-06-14 06:45:05 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 06:45:05 root INFO     [order_1_approx] weight calculation finished
2024-06-14 06:45:06 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-14 06:45:06 root INFO     [order_1_approx] starting weight calculation
2024-06-14 06:49:04 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 06:49:04 root INFO     [order_1_approx] weight calculation finished
2024-06-14 06:49:05 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-14 06:49:05 root INFO     [order_1_approx] starting weight calculation
2024-06-14 06:53:03 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 06:53:03 root INFO     [order_1_approx] weight calculation finished
2024-06-14 06:53:04 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-14 06:53:04 root INFO     [order_1_approx] starting weight calculation
2024-06-14 06:57:03 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 06:57:03 root INFO     [order_1_approx] weight calculation finished
2024-06-14 06:57:04 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-14 06:57:04 root INFO     [order_1_approx] starting weight calculation
2024-06-14 07:01:01 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 07:01:01 root INFO     [order_1_approx] weight calculation finished
2024-06-14 07:01:02 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-14 07:01:02 root INFO     total operator prediction time: 1922.1240575313568 seconds
2024-06-14 07:01:05 root INFO     [' rept', ' dinosaur', ' rapt', ' mammal', ' bird'] matches ['dinosaur', 'reptile', 'bird', 'archosaur', 'archosaurian', 'archosaurian_reptile', ''] is True
2024-06-14 07:01:05 root INFO     [' snake', ' rept', ' bird', ' rapt', ' mammal'] matches ['snake', 'reptile', 'boa', 'serpent', 'ophidian'] is True
2024-06-14 07:01:05 root INFO     [' rear', '\n', ' rural', ' p', ' r'] matches ['insect', 'invertebrate', 'creature', 'beast', 'hymenopteran', 'being', 'animal', 'organism', 'fauna', 'arthropod', 'hymenopterous_insect', 'animate_being', 'physical_hymenopteron', 'physical_entity', 'hymenopter', 'living_thing'] is False
2024-06-14 07:01:05 root INFO     [' rodent', ' mammal', ' rept', ' bird', ' rapt'] matches ['rodent', 'vertebrate', 'creature', 'beast', 'animal', 'organism', 'fauna', 'placental', 'chordate', 'eutherian', 'mammal', 'mammalian', 'eutherian_mammal', 'gnawer', 'animate_being', 'living_thing', 'placental_mammal', 'craniate', ''] is True
2024-06-14 07:01:05 root INFO     [' rear', '\n', ' p', ' rural', ' r'] matches ['insect', 'invertebrate', 'creature', 'beast', 'hymenopteran', 'being', 'animal', 'insect', 'organism', 'fauna', 'arthropod', 'hymenopterous_insect', 'animate_being', 'hymenopteron', 'hymenopter', 'living_thing'] is False
2024-06-14 07:01:05 root INFO     [' rept', ' bird', ' rodent', ' insect', ' mammal'] matches ['insect', 'invertebrate', 'creature', 'beast', 'being', 'animal', 'insect', 'organism', 'fauna', 'arthropod', 'animate_being', 'living_thing'] is True
2024-06-14 07:01:05 root INFO     [' mammal', ' f', ' rapt', ' bird', ' rept'] matches ['bovid', 'mammal', 'bison', 'cow', 'vertebrate', 'creature', 'ungulate', 'beast', 'being', 'animal', 'organism', 'fauna', 'placental', 'artiodactyl', 'ruminant', 'chordate', 'eutherian', 'mammalian', 'bovine', 'animate_being', 'eutherian_mammal', 'placental_mammal', 'craniate', 'physical_hoofed_mammal', 'physical_entity', 'even-toed_ungulate', 'artiodactyl_mammal', 'living_thing'] is True
2024-06-14 07:01:05 root INFO     [' bird', ' rept', ' insect', ' rapt', ' animal'] matches ['insect', 'creature', 'beast', 'lepidopteran', 'animal', 'organism', 'fauna', 'arthropod', 'lepidopterous_insect', 'lepidopteron', 'animate_being', 'living_thing'] is True
2024-06-14 07:01:05 root INFO     [' rear', '\n', ' p', ' rural', ' r'] matches ['feline', 'beast', 'animal', 'organism', 'fauna', 'placental', 'carnivore', 'chordate', 'felid', 'eutherian', 'mammal', 'mammalian', 'eutherian_mammal', 'animate_being', 'placental_mammal', 'craniate', ''] is False
2024-06-14 07:01:05 root INFO     [' bird', ' f', ' av', ' rept', ' rapt'] matches ['fowl', 'bird', 'vertebrate', 'poultry', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'poultry', 'chordate', 'domestic_fowl', 'animate_being', 'gallinaceous_bird', 'craniate', 'gallinacean', 'living_thing'] is True
2024-06-14 07:01:05 root INFO     [' mammal', ' rept', ' pr', ' rodent', ' animal'] matches ['primate', 'vertebrate', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'placental', 'hominid', 'chordate', 'eutherian', 'mammal', 'ape', 'mammalian', 'animate_being', 'eutherian_mammal', 'placental_mammal', 'craniate', 'physical_physical_entity', 'living_thing'] is True
2024-06-14 07:01:05 root INFO     [' rodent', ' mammal', ' rept', ' bird', ' f'] matches ['rodent', 'vertebrate', 'creature', 'beast', 'animal', 'organism', 'fauna', 'placental', 'chordate', 'eutherian', 'mammal', 'mammalian', 'eutherian_mammal', 'gnawer', 'animate_being', 'living_thing', 'placental_mammal', 'craniate', ''] is True
2024-06-14 07:01:05 root INFO     [' rept', ' snake', ' bird', ' rapt', ' rodent'] matches ['snake', 'reptile', 'elapid', 'elapid_snake', 'serpent', 'ophidian'] is True
2024-06-14 07:01:05 root INFO     [' rodent', ' bird', ' ', ' p', ' rat'] matches ['insect', 'invertebrate', 'creature', 'beast', 'dictyopterous_insect', 'being', 'animal', 'organism', 'fauna', 'arthropod', 'animate_being', 'physical_entity', 'living_thing'] is False
2024-06-14 07:01:05 root INFO     [' rear', '\n', ' rural', ' p', ' r'] matches ['bovid', 'mammal', 'cattle', 'vertebrate', 'creature', 'ungulate', 'beast', 'being', 'animal', 'organism', 'fauna', 'placental', 'artiodactyl', 'ruminant', 'chordate', 'eutherian', 'mammalian', 'animate_being', 'eutherian_mammal', 'placental_mammal', 'craniate', 'physical_hoofed_mammal', 'physical_entity', 'even-toed_ungulate', 'artiodactyl_mammal', 'living_thing'] is False
2024-06-14 07:01:05 root INFO     [' rapt', ' rodent', ' mammal', ' bird', ' rept'] matches ['canine', 'vertebrate', 'creature', 'beast', 'canid', 'being', 'animal', 'organism', 'fauna', 'placental', 'carnivore', 'chordate', 'eutherian', 'mammal', 'mammalian', 'animate_being', 'eutherian_mammal', 'locomote', 'placental_mammal', 'craniate', 'domesticated_animal', 'physical_entity', 'domestic_animal', 'living_thing'] is True
2024-06-14 07:01:05 root INFO     [' mammal', ' rodent', ' f', ' rapt', ' animal'] matches ['bovid', 'mammal', 'vertebrate', 'creature', 'ungulate', 'beast', 'being', 'animal', 'organism', 'fauna', 'placental', 'artiodactyl', 'ruminant', 'chordate', 'eutherian', 'mammalian', 'bovine', 'animate_being', 'eutherian_mammal', 'placental_mammal', 'craniate', 'physical_hoofed_mammal', 'physical_entity', 'even-toed_ungulate', 'artiodactyl_mammal', 'living_thing'] is True
2024-06-14 07:01:05 root INFO     [' rear', '\n', ' rural', ' p', ' r'] matches ['canine', 'vertebrate', 'creature', 'beast', 'canid', 'being', 'animal', 'organism', 'fauna', 'placental', 'carnivore', 'chordate', 'eutherian', 'mammal', 'mammalian', 'animate_being', 'eutherian_mammal', 'locomote', 'placental_mammal', 'craniate', 'domesticated_animal', 'physical_entity', 'domestic_animal', 'living_thing'] is False
2024-06-14 07:01:05 root INFO     [' bird', ' av', ' rept', ' f', ' mammal'] matches ['fowl', 'bird', 'vertebrate', 'poultry', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'poultry', 'chordate', 'domestic_fowl', 'waterfowl', 'water_fowl', 'animate_being', 'anseriform_bird', 'craniate', 'living_thing'] is True
2024-06-14 07:01:05 root INFO     [' rapt', ' bird', ' rept', ' mammal', ' f'] matches ['raptor', 'bird', 'vertebrate', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'chordate', 'animate_being', 'craniate', 'iving_thing', 'raptorial_bird', 'bird_of_prey', ''] is True
2024-06-14 07:01:05 root INFO     [' rapt', ' bird', ' f', ' rept', ' av'] matches ['raptor', 'bird', 'vertebrate', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'chordate', 'animate_being', 'craniate', 'living_thing', 'raptorial_bird', 'bird_of_prey', ''] is True
2024-06-14 07:01:05 root INFO     [' rear', '\n', ' p', ' rural', 'ait'] matches ['canine', 'vertebrate', 'creature', 'beast', 'canid', 'being', 'animal', 'organism', 'fauna', 'placental', 'carnivore', 'chordate', 'eutherian', 'mammal', 'mammalian', 'animate_being', 'eutherian_mammal', 'locomote', 'placental_mammal', 'craniate', 'domesticated_animal', 'physical_entity', 'domestic_animal', 'living_thing'] is False
2024-06-14 07:01:05 root INFO     [' bird', ' mammal', ' rept', ' rodent', ' rapt'] matches ['primate', 'vertebrate', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'placental', 'chordate', 'eutherian', 'mammal', 'ape', 'mammalian', 'animate_being', 'eutherian_mammal', 'placental_mammal', 'craniate', 'physical_physical_entity', 'living_thing'] is True
2024-06-14 07:01:05 root INFO     [' mammal', ' f', ' rodent', ' animal', ' bird'] matches ['bovid', 'mammal', 'vertebrate', 'ungulate', 'beast', 'being', 'animal', 'organism', 'fauna', 'placental', 'artiodactyl', 'chordate', 'eutherian', 'mammalian', 'animate_being', 'eutherian_mammal', 'placental_mammal', 'craniate', 'hoofed_mammal', 'even-toed_ungulate', 'artiodactyl_mammal', 'living_thing'] is True
2024-06-14 07:01:05 root INFO     [' bird', ' f', ' rept', ' av', ' mammal'] matches ['fowl', 'bird', 'vertebrate', 'poultry', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'poultry', 'chordate', 'domestic_fowl', 'waterfowl', 'water_fowl', 'animate_being', 'anseriform_bird', 'craniate', 'living_thing'] is True
2024-06-14 07:01:05 root INFO     [' mammal', ' rept', ' rodent', ' animal', ' '] matches ['primate', 'vertebrate', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'placental', 'hominid', 'chordate', 'eutherian', 'mammal', 'ape', 'mammalian', 'animate_being', 'eutherian_mammal', 'placental_mammal', 'craniate', 'physical_physical_entity', 'living_thing'] is True
2024-06-14 07:01:05 root INFO     [' rear', '\n', ' p', ' rural', ' r'] matches ['raptor', 'bird', 'vertebrate', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'chordate', 'animate_being', 'craniate', 'living_thing', 'raptorial_bird', 'bird_of_prey', ''] is False
2024-06-14 07:01:05 root INFO     [' rear', '\n', ' rural', ' p', ' r'] matches ['primate', 'vertebrate', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'placental', 'hominid', 'chordate', 'eutherian', 'mammal', 'ape', 'mammalian', 'animate_being', 'eutherian_mammal', 'placental_mammal', 'craniate', 'physical_physical_entity', 'living_thing'] is False
2024-06-14 07:01:05 root INFO     [' rapt', ' rodent', ' rept', ' bird', ' mammal'] matches ['canine', 'vertebrate', 'creature', 'beast', 'canid', 'being', 'animal', 'organism', 'fauna', 'placental', 'carnivore', 'chordate', 'eutherian', 'mammal', 'mammalian', 'animate_being', 'eutherian_mammal', 'locomote', 'placental_mammal', 'craniate', 'domesticated_animal', 'physical_entity', 'domestic_animal', 'living_thing'] is True
2024-06-14 07:01:05 root INFO     [' mammal', ' rapt', ' rept', ' f', ' rodent'] matches ['feline', 'cat', 'beast', 'animal', 'organism', 'fauna', 'placental', 'carnivore', 'chordate', 'felid', 'eutherian', 'mammal', 'mammalian', 'eutherian_mammal', 'animate_being', 'placental_mammal', 'craniate', 'big_cat'] is True
2024-06-14 07:01:05 root INFO     [' mammal', ' rept', ' f', ' rapt', ' rodent'] matches ['feline', 'cat', 'beast', 'animal', 'organism', 'fauna', 'placental', 'carnivore', 'causal_agent', 'chordate', 'felid', 'eutherian', 'mammal', 'mammalian', 'eutherian_mammal', 'animate_being', 'placental_mammal', 'craniate', 'big_cat'] is True
2024-06-14 07:01:05 root INFO     [' mammal', ' rapt', ' bird', ' rept', ' animal'] matches ['feline', 'cat', 'beast', 'animal', 'organism', 'fauna', 'placental', 'carnivore', 'chordate', 'felid', 'eutherian', 'mammal', 'mammalian', 'eutherian_mammal', 'animate_being', 'placental_mammal', 'craniate', 'big_cat'] is True
2024-06-14 07:01:05 root INFO     [' rept', ' bird', ' snake', ' rapt', ' rodent'] matches ['snake', 'reptile', 'elapid', 'elapid_snake', 'serpent', 'ophidian'] is True
2024-06-14 07:01:05 root INFO     [' rear', '\n', ' rural', ' p', ' r'] matches ['rodent', 'vertebrate', 'creature', 'beast', 'animal', 'organism', 'fauna', 'placental', 'chordate', 'eutherian', 'mammal', 'mammalian', 'eutherian_mammal', 'gnawer', 'animate_being', 'living_thing', 'placental_mammal', 'craniate', ''] is False
2024-06-14 07:01:05 root INFO     [' mammal', ' rept', ' bird', ' pr', ' rapt'] matches ['primate', 'vertebrate', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'placental', 'hominid', 'chordate', 'eutherian', 'mammal', 'ape', 'mammalian', 'animate_being', 'eutherian_mammal', 'placental_mammal', 'craniate', 'physical_physical_entity', 'living_thing'] is True
2024-06-14 07:01:05 root INFO     [' rear', '\n', ' p', ' rural', ' r'] matches ['raptor', 'bird', 'vertebrate', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'chordate', 'animate_being', 'craniate', 'living_thing', 'raptorial_bird', 'bird_of_prey', ''] is False
2024-06-14 07:01:05 root INFO     [' mammal', ' bird', ' animal', ' rodent', ' rapt'] matches ['bovid', 'mammal', 'horse', 'vertebrate', 'creature', 'beast', 'animal', 'organism', 'fauna', 'placental', 'eutherian', 'mammal', 'equine', 'mammalian', 'equid', 'living_thing', 'odd-toed_ungulate', 'animate_being', 'eutherian_mammal', 'perissodactyl', 'placental_mammal', 'craniate', 'hoofed_mammal', 'physical_entity', 'perissodactyl_mammal', 'equus_caballus'] is True
2024-06-14 07:01:05 root INFO     [' rodent', ' mammal', ' rept', ' bird', ' f'] matches ['rodent', 'vertebrate', 'creature', 'beast', 'animal', 'organism', 'fauna', 'placental', 'chordate', 'eutherian', 'mammal', 'mammalian', 'eutherian_mammal', 'gnawer', 'animate_being', 'living_thing', 'placental_mammal', 'craniate', ''] is True
2024-06-14 07:01:05 root INFO     [' bird', ' rodent', ' rept', ' rapt', ' f'] matches ['fowl', 'bird', 'vertebrate', 'poultry', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'poultry', 'chordate', 'wild_fowl', 'wildfowl', 'animate_being', 'gallinaceous_bird', 'craniate', 'gallinacean', 'living_thing'] is True
2024-06-14 07:01:05 root INFO     [' rept', ' snake', ' mammal', ' rodent', ' '] matches ['snake', 'reptile', 'pit_viper', 'serpent', 'ophidian'] is True
2024-06-14 07:01:05 root INFO     [' rodent', ' mammal', ' bird', ' rapt', ' rept'] matches ['rodent', 'vertebrate', 'creature', 'beast', 'animal', 'organism', 'fauna', 'placental', 'chordate', 'eutherian', 'mammal', 'mammalian', 'eutherian_mammal', 'gnawer', 'animate_being', 'living_thing', 'placental_mammal', 'craniate', ''] is True
2024-06-14 07:01:05 root INFO     [' rept', ' dinosaur', ' bird', ' mammal', ' '] matches ['dinosaur', 'reptile', 'armored_dinosaur', 'archosaur', 'archosaurian', 'archosaurian_reptile', ''] is True
2024-06-14 07:01:05 root INFO     [' rept', ' mammal', ' f', ' animal', ' rapt'] matches ['feline', 'cat', 'beast', 'animal', 'organism', 'fauna', 'placental', 'carnivore', 'chordate', 'felid', 'eutherian', 'mammal', 'mammalian', 'eutherian_mammal', 'animate_being', 'placental_mammal', 'craniate', 'big_cat'] is True
2024-06-14 07:01:05 root INFO     [' rept', ' bird', ' rapt', ' mammal', ' '] matches ['dinosaur', 'reptile', 'ceratopsian', 'horned_dinosaur', 'archosaur', 'archosaurian', 'archosaurian_reptile', ''] is True
2024-06-14 07:01:05 root INFO     [' bird', ' f', ' rapt', ' rodent', ' av'] matches ['fowl', 'bird', 'vertebrate', 'poultry', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'poultry', 'chordate', 'domestic_fowl', 'animate_being', 'gallinaceous_bird', 'craniate', 'gallinacean', 'living_thing'] is True
2024-06-14 07:01:05 root INFO     [' rept', ' dinosaur', ' bird', ' rapt', ' mammal'] matches ['dinosaur', 'reptile', 'theropod', 'theropod_dinosaur', 'bird-footed_dinosaur', 'archosaur', 'archosaurian', 'archosaurian_reptile', ''] is True
2024-06-14 07:01:05 root INFO     [' rept', ' rapt', ' bird', ' mammal', ' '] matches ['dinosaur', 'reptile', 'maniraptor', 'archosaur', 'archosaurian', 'archosaurian_reptile', ''] is True
2024-06-14 07:01:05 root INFO     [' bird', ' rept', ' snake', ' rodent', ' mammal'] matches ['snake', 'reptile', 'snake', 'serpent', 'ophidian'] is True
2024-06-14 07:01:05 root INFO     [' bird', ' rept', ' rapt', ' mammal', ' rodent'] matches ['raptor', 'bird', 'vertebrate', 'creature', 'beast', 'being', 'animal', 'organism', 'fauna', 'chordate', 'animate_being', 'craniate', 'living_thing', 'raptorial_bird', 'bird_of_prey', ''] is True
2024-06-14 07:01:05 root INFO     [' rear', '\n', ' rural', ' p', ' r'] matches ['canine', 'vertebrate', 'creature', 'beast', 'canid', 'being', 'animal', 'organism', 'fauna', 'placental', 'carnivore', 'chordate', 'eutherian', 'mammal', 'mammalian', 'animate_being', 'eutherian_mammal', 'locomote', 'placental_mammal', 'craniate', 'domesticated_animal', 'physical_entity', 'domestic_animal', 'living_thing'] is False
2024-06-14 07:01:05 root INFO     hypernyms - animals,50,518,740

2024-06-14 07:01:05 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='antonyms - binary', prompt_templates=['The opposite of {} is', 'The inverse of {} is', 'Something that is {} is not'], prompt_templates_zs=['The opposite of {} is', 'The inverse of {} is', 'Something that is {} is not'], samples=[RelationSample(subject='after', object=['before', 'earlier', 'previously']), RelationSample(subject='ahead', object=['behind', 'rear', 'after', 'tail', 'beforehand']), RelationSample(subject='anterior', object=['posterior']), RelationSample(subject='backward', object=['forward', 'forwards', 'frontward', 'frontwards', 'forrad', 'forrard', 'forth', 'onward']), RelationSample(subject='before', object=['after', 'subsequently', 'later', 'afterwards', 'afterward', 'ahead']), RelationSample(subject='beginning', object=['end', 'terminal', 'ending', 'last', 'final', 'finish', 'finale', 'conclusion']), RelationSample(subject='below', object=['above', 'higher', 'up']), RelationSample(subject='climb', object=['descend', 'declivitous', 'downhill', 'downward-sloping', 'degressive', 'descendant', 'descendent', 'down', 'downward', 'downward-arching', 'drizzling', 'dropping', 'falling', 'raining']), RelationSample(subject='dead', object=['alive', 'living', 'live']), RelationSample(subject='decrement', object=['increment']), RelationSample(subject='descend', object=['ascend', 'climb', 'rise', 'upward', 'ascendent', 'ascendant']), RelationSample(subject='dive', object=['emerge']), RelationSample(subject='down', object=['up', 'above', 'ahead', 'lead', 'leading', 'aweigh', 'dormie', 'dormy', 'heavenward', 'skyward', 'risen', 'sprouted', 'upbound', 'upfield', 'upward']), RelationSample(subject='downslope', object=['upslope', 'ascent']), RelationSample(subject='drop', object=['lift', 'pick_up']), RelationSample(subject='dynamic', object=['static', 'still', 'unmoving', 'unchanging']), RelationSample(subject='employ', object=['dismiss', 'fire', 'sack', 'displace', 'terminate']), RelationSample(subject='exit', object=['entrance', 'entranceway', 'entryway', 'entry', 'entree']), RelationSample(subject='fall', object=['rise', 'upward', 'climb']), RelationSample(subject='first', object=['last', 'end', 'terminal', 'ending', 'final', 'finish', 'finale', 'conclusion']), RelationSample(subject='forget', object=['remember', 'retrieve', 'recall', 'call_back', 'call_up', 'recollect']), RelationSample(subject='forward', object=['backward', 'back', 'backwards', 'rearward', 'rearwards']), RelationSample(subject='front', object=['back', 'rear', 'forepart']), RelationSample(subject='in', object=['out', 'outer', 'exterior', 'outside']), RelationSample(subject='inbound', object=['outbound']), RelationSample(subject='inhale', object=['exhale']), RelationSample(subject='input', object=['output']), RelationSample(subject='inside', object=['outside', 'exterior', 'out']), RelationSample(subject='interior', object=['exterior', 'outdoor', 'out-of-door', 'outside']), RelationSample(subject='internal', object=['external', 'outer', 'outside']), RelationSample(subject='inverse', object=['reverse', 'reversion', 'reversal', 'turnabout', 'turnaround']), RelationSample(subject='mortal', object=['immortal']), RelationSample(subject='occupied', object=['vacant', 'free']), RelationSample(subject='off', object=['on']), RelationSample(subject='out', object=['in', 'inside']), RelationSample(subject='outward', object=['upward', 'up', 'upwards']), RelationSample(subject='over', object=['under', 'below', 'beneath']), RelationSample(subject='previously', object=['subsequently', 'later', 'afterwards', 'afterward', 'after', 'subsequent']), RelationSample(subject='proceed', object=['retreat', 'return']), RelationSample(subject='rise', object=['sink', 'drop', 'fall']), RelationSample(subject='south', object=['north']), RelationSample(subject='southeast', object=['southwest', 'northeast']), RelationSample(subject='submerge', object=['emerge']), RelationSample(subject='top', object=['bottom', 'underside', 'undersurface']), RelationSample(subject='toward', object=['away', 'off', 'forth', 'aside']), RelationSample(subject='true', object=['false', 'incorrect', 'wrong', 'mistaken']), RelationSample(subject='under', object=['over', 'above', 'up']), RelationSample(subject='up', object=['down', 'downwards', 'downward', 'downwardly']), RelationSample(subject='uphill', object=['downhill', 'decline', 'fall', 'declivitous', 'downward-sloping']), RelationSample(subject='west', object=['east'])], _domain=None, _range=None)
2024-06-14 07:01:07 root INFO     starting operator prediction
2024-06-14 07:01:07 root INFO     using no context
2024-06-14 07:01:07 root INFO     [order_1_approx] starting weight calculation
2024-06-14 07:05:06 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 07:05:06 root INFO     [order_1_approx] weight calculation finished
2024-06-14 07:05:07 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-14 07:05:07 root INFO     [order_1_approx] starting weight calculation
2024-06-14 07:09:05 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 07:09:05 root INFO     [order_1_approx] weight calculation finished
2024-06-14 07:09:06 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-14 07:09:06 root INFO     [order_1_approx] starting weight calculation
2024-06-14 07:13:04 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 07:13:04 root INFO     [order_1_approx] weight calculation finished
2024-06-14 07:13:05 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-14 07:13:05 root INFO     [order_1_approx] starting weight calculation
2024-06-14 07:17:02 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 07:17:02 root INFO     [order_1_approx] weight calculation finished
2024-06-14 07:17:03 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-14 07:17:03 root INFO     [order_1_approx] starting weight calculation
2024-06-14 07:21:00 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 07:21:00 root INFO     [order_1_approx] weight calculation finished
2024-06-14 07:21:01 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-14 07:21:01 root INFO     [order_1_approx] starting weight calculation
2024-06-14 07:24:59 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 07:24:59 root INFO     [order_1_approx] weight calculation finished
2024-06-14 07:24:59 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-14 07:25:00 root INFO     [order_1_approx] starting weight calculation
2024-06-14 07:28:56 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 07:28:56 root INFO     [order_1_approx] weight calculation finished
2024-06-14 07:28:57 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-14 07:28:57 root INFO     [order_1_approx] starting weight calculation
2024-06-14 07:32:53 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 07:32:53 root INFO     [order_1_approx] weight calculation finished
2024-06-14 07:32:54 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-14 07:32:54 root INFO     total operator prediction time: 1907.0311155319214 seconds
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', 'default', ' esc'] matches ['before', 'earlier', 'previously'] is False
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', 'default', ' esc'] matches ['behind', 'rear', 'after', 'tail', 'beforehand'] is False
2024-06-14 07:32:56 root INFO     [' ', '\n', ' to', ' back', ' the'] matches ['posterior'] is False
2024-06-14 07:32:56 root INFO     [' ', ' forward', ' backward', ' back', '\n'] matches ['forward', 'forwards', 'frontward', 'frontwards', 'forrad', 'forrard', 'forth', 'onward'] is True
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', ' sl', ' esc'] matches ['after', 'subsequently', 'later', 'afterwards', 'afterward', 'ahead'] is True
2024-06-14 07:32:56 root INFO     [' ', ' end', '\n', ' back', ' to'] matches ['end', 'terminal', 'ending', 'last', 'final', 'finish', 'finale', 'conclusion'] is True
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', ' esc', ' sl'] matches ['above', 'higher', 'up'] is False
2024-06-14 07:32:56 root INFO     [' ', '\n', ' down', ' fall', ' not'] matches ['descend', 'declivitous', 'downhill', 'downward-sloping', 'degressive', 'descendant', 'descendent', 'down', 'downward', 'downward-arching', 'drizzling', 'dropping', 'falling', 'raining'] is True
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', 'default', ' sl'] matches ['alive', 'living', 'live'] is False
2024-06-14 07:32:56 root INFO     [' ', '\n', ' to', ' down', ' back'] matches ['increment'] is False
2024-06-14 07:32:56 root INFO     [' ', '\n', ' down', ' descend', ' to'] matches ['ascend', 'climb', 'rise', 'upward', 'ascendent', 'ascendant'] is False
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', 'default', ' esc'] matches ['up', 'above', 'ahead', 'lead', 'leading', 'aweigh', 'dormie', 'dormy', 'heavenward', 'skyward', 'risen', 'sprouted', 'upbound', 'upfield', 'upward'] is False
2024-06-14 07:32:56 root INFO     [' ', '\n', ' down', ' back', ' not'] matches ['upslope', 'ascent'] is False
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', 'default', ' esc'] matches ['lift', 'pick_up'] is False
2024-06-14 07:32:56 root INFO     [' ', '\n', ' to', ' not', ' in'] matches ['static', 'still', 'unmoving', 'unchanging'] is False
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', 'default', ' esc'] matches ['dismiss', 'fire', 'sack', 'displace', 'terminate'] is False
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', ' esc', 'default'] matches ['entrance', 'entranceway', 'entryway', 'entry', 'entree'] is False
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', 'default', ' esc'] matches ['rise', 'upward', 'climb'] is False
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', 'default', ' esc'] matches ['last', 'end', 'terminal', 'ending', 'final', 'finish', 'finale', 'conclusion'] is False
2024-06-14 07:32:56 root INFO     [' ', ' back', '\n', ' come', ' not'] matches ['remember', 'retrieve', 'recall', 'call_back', 'call_up', 'recollect'] is False
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', 'default', ' esc'] matches ['backward', 'back', 'backwards', 'rearward', 'rearwards'] is False
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', ' esc', 'default'] matches ['back', 'rear', 'forepart'] is False
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', ' esc', 'default'] matches ['out', 'outer', 'exterior', 'outside'] is False
2024-06-14 07:32:56 root INFO     [' ', ' out', '\n', ' in', ' down'] matches ['outbound'] is True
2024-06-14 07:32:56 root INFO     [' ', '\n', ' out', ' to', ' the'] matches ['exhale'] is False
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', ' esc', 'default'] matches ['output'] is False
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', 'default', ' esc'] matches ['outside', 'exterior', 'out'] is False
2024-06-14 07:32:56 root INFO     [' ', '\n', ' to', ' and', ' outside'] matches ['exterior', 'outdoor', 'out-of-door', 'outside'] is True
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', 'default', ' esc'] matches ['external', 'outer', 'outside'] is False
2024-06-14 07:32:56 root INFO     [' ', '\n', ' to', ' in', ' not'] matches ['immortal'] is False
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', 'default', ' esc'] matches ['vacant', 'free'] is False
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', 'default', ' sl'] matches ['on'] is False
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', 'default', ' esc'] matches ['in', 'inside'] is False
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', ' sl', ' esc'] matches ['under', 'below', 'beneath'] is False
2024-06-14 07:32:56 root INFO     [' ', '\n', ' later', ' to', ' not'] matches ['subsequently', 'later', 'afterwards', 'afterward', 'after', 'subsequent'] is True
2024-06-14 07:32:56 root INFO     [' ', '\n', ' back', ' return', ' to'] matches ['retreat', 'return'] is True
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', ' esc', 'default'] matches ['sink', 'drop', 'fall'] is False
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', ' esc', ' sl'] matches ['north'] is False
2024-06-14 07:32:56 root INFO     [' ', '\n', ' to', ' south', ' down'] matches ['southwest', 'northeast'] is True
2024-06-14 07:32:56 root INFO     [' ', '\n', ' to', ' fall', ' not'] matches ['emerge'] is False
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', 'default', ' esc'] matches ['bottom', 'underside', 'undersurface'] is False
2024-06-14 07:32:56 root INFO     [' ', ' toward', ' away', '\n', ' to'] matches ['away', 'off', 'forth', 'aside'] is True
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', 'default', ' esc'] matches ['false', 'incorrect', 'wrong', 'mistaken'] is False
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', ' esc', 'default'] matches ['over', 'above', 'up'] is False
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', ' esc', ' sl'] matches ['down', 'downwards', 'downward', 'downwardly'] is False
2024-06-14 07:32:56 root INFO     [' ', ' down', '\n', ' downward', ' back'] matches ['downhill', 'decline', 'fall', 'declivitous', 'downward-sloping'] is True
2024-06-14 07:32:56 root INFO     ['sl', ' afterwards', ' afterward', ' esc', 'default'] matches ['east'] is False
2024-06-14 07:32:56 root INFO     antonyms - binary,50,529,776

2024-06-14 07:32:56 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='meronyms - substance', prompt_templates=['A {} is made up of', 'A {} is comprised of', '{} is made from'], prompt_templates_zs=['A {} is made up of', 'A {} is comprised of', '{} is made from'], samples=[RelationSample(subject='atmosphere', object=['gas', 'oxygen', 'hydrogen', 'nitrogen', 'ozone']), RelationSample(subject='bag', object=['leather', 'fabric', 'plastic']), RelationSample(subject='beach', object=['sand', 'silicon', 'rocks', 'pebbles', 'atomic_number_14', 'si']), RelationSample(subject='beard', object=['hair']), RelationSample(subject='body', object=['flesh', 'bones']), RelationSample(subject='boots', object=['leather', 'canvas']), RelationSample(subject='bottle', object=['glass', 'plastic']), RelationSample(subject='bowl', object=['glass', 'china', 'aluminium', 'wood', 'steel', 'plastic', 'clay']), RelationSample(subject='box', object=['cardboard', 'tin', 'boxwood', 'turkish_boxwood']), RelationSample(subject='bread', object=['flour', 'yeast', '']), RelationSample(subject='bronze', object=['copper', 'tin', 'cu', 'atomic_number_29']), RelationSample(subject='candy', object=['sugar', 'nougat', 'chocolate', 'gelatin', 'molasses', 'syrup', 'honey', 'fruit', 'nuts']), RelationSample(subject='chocolate', object=['cocoa', 'bean', 'cacao', 'cacao_bean', 'cocoa_bean']), RelationSample(subject='clothing', object=['fabric', 'leather', '']), RelationSample(subject='cloud', object=['vapor', 'water', 'vapour', 'water_vapour', 'water_vapor']), RelationSample(subject='cocktail', object=['alcohol', 'juice', 'water']), RelationSample(subject='concrete', object=['silicon', 'cement', 'water', 'sand', 'atomic_number_14', 'si']), RelationSample(subject='desk', object=['wood', 'metal', 'steel']), RelationSample(subject='diamond', object=['carbon']), RelationSample(subject='doorknob', object=['metal', 'steel', 'bronze', 'wood']), RelationSample(subject='flag', object=['fabric', 'paper']), RelationSample(subject='glacier', object=['ice', 'water', 'oxygen', 'hydrogen', 'h', 'h2o', 'atomic_number_8', 'atomic_number_1', 'o', 'water_ice']), RelationSample(subject='glass', object=['silicone']), RelationSample(subject='house', object=['bricks', 'cement', 'wood', 'clay']), RelationSample(subject='ice', object=['water', 'oxygen', 'hydrogen', 'water', 'h2o', 'atomic_number_1', 'atomic_number_8', 'h', 'o']), RelationSample(subject='icicle', object=['ice', 'water']), RelationSample(subject='jam', object=['fruit', 'sugar', 'berries']), RelationSample(subject='jeans', object=['fabric', 'denim']), RelationSample(subject='lawn', object=['grass']), RelationSample(subject='lens', object=['glass', 'plastic']), RelationSample(subject='mirror', object=['glass', 'bronze']), RelationSample(subject='money', object=['paper', 'metal', 'silver', 'gold', 'iron', 'copper', 'tin']), RelationSample(subject='ocean', object=['water']), RelationSample(subject='omelette', object=['eggs', 'egg', 'milk', 'cheese']), RelationSample(subject='pastry', object=['flour', 'egg', 'butter', 'filling']), RelationSample(subject='penny', object=['metal', 'alloy', 'bronze', 'nickel', 'zinc', 'copper', 'tin']), RelationSample(subject='pill', object=['medicine', 'drug']), RelationSample(subject='plastic', object=['polymer', 'oil', 'gas', 'coal']), RelationSample(subject='roof', object=['shingles', 'tiles', 'wood', 'metal']), RelationSample(subject='sea', object=['water']), RelationSample(subject='snow', object=['water', 'oxygen', 'hydrogen', 'flake', 'ice', 'snowflake', 'snowflakes', 'h2o', 'atomic_number_1', 'atomic_number_8', 'h', 'o']), RelationSample(subject='spoon', object=['aluminium', 'wood', 'steel']), RelationSample(subject='steel', object=['iron', 'pearlite', 'carbon', 'cementite', 'ferrite', 'iron_carbide', 'fe', 'atomic_number_26', 'alpha_iron']), RelationSample(subject='table', object=['wood', 'metal', 'plastic']), RelationSample(subject='wall', object=['cement', 'bricks', 'stones', 'rocks', 'wood', 'cardboard', 'board', 'plank', 'clay', 'mud']), RelationSample(subject='water', object=['oxygen', 'hydrogen', 'water', 'h2o', 'atomic_number_1', 'atomic_number_8', 'h', 'o']), RelationSample(subject='wig', object=['hair']), RelationSample(subject='wine', object=['grapes', 'grape']), RelationSample(subject='wire', object=['metal']), RelationSample(subject='yogurt', object=['milk'])], _domain=None, _range=None)
2024-06-14 07:32:59 root INFO     starting operator prediction
2024-06-14 07:32:59 root INFO     using no context
2024-06-14 07:32:59 root INFO     [order_1_approx] starting weight calculation
2024-06-14 07:36:58 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 07:36:58 root INFO     [order_1_approx] weight calculation finished
2024-06-14 07:36:59 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-14 07:36:59 root INFO     [order_1_approx] starting weight calculation
2024-06-14 07:40:58 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 07:40:58 root INFO     [order_1_approx] weight calculation finished
2024-06-14 07:40:59 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-14 07:40:59 root INFO     [order_1_approx] starting weight calculation
2024-06-14 07:44:56 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 07:44:56 root INFO     [order_1_approx] weight calculation finished
2024-06-14 07:44:57 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-14 07:44:57 root INFO     [order_1_approx] starting weight calculation
2024-06-14 07:48:55 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 07:48:55 root INFO     [order_1_approx] weight calculation finished
2024-06-14 07:48:55 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-14 07:48:56 root INFO     [order_1_approx] starting weight calculation
2024-06-14 07:52:54 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 07:52:54 root INFO     [order_1_approx] weight calculation finished
2024-06-14 07:52:55 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-14 07:52:55 root INFO     [order_1_approx] starting weight calculation
2024-06-14 07:56:54 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 07:56:54 root INFO     [order_1_approx] weight calculation finished
2024-06-14 07:56:54 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-14 07:56:55 root INFO     [order_1_approx] starting weight calculation
2024-06-14 08:00:52 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 08:00:52 root INFO     [order_1_approx] weight calculation finished
2024-06-14 08:00:53 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-14 08:00:53 root INFO     [order_1_approx] starting weight calculation
2024-06-14 08:04:51 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 08:04:51 root INFO     [order_1_approx] weight calculation finished
2024-06-14 08:04:52 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-14 08:04:52 root INFO     total operator prediction time: 1913.4759314060211 seconds
2024-06-14 08:04:55 root INFO     [' metal', ' stone', ' water', ' wood', ' '] matches ['gas', 'oxygen', 'hydrogen', 'nitrogen', 'ozone'] is False
2024-06-14 08:04:55 root INFO     [' plumbing', ' fabric', ' interior', ' arm', ' material'] matches ['leather', 'fabric', 'plastic'] is True
2024-06-14 08:04:55 root INFO     [' cloth', ' stone', ' wood', ' paper', ' water'] matches ['sand', 'silicon', 'rocks', 'pebbles', 'atomic_number_14', 'si'] is False
2024-06-14 08:04:55 root INFO     [' plumbing', ' fabric', ' arm', ' interior', ' wood'] matches ['hair'] is False
2024-06-14 08:04:55 root INFO     [' plumbing', ' fabric', ' arm', ' interior', ' material'] matches ['flesh', 'bones'] is False
2024-06-14 08:04:55 root INFO     [' cloth', ' wood', ' ', ' metal', ' iron'] matches ['leather', 'canvas'] is False
2024-06-14 08:04:55 root INFO     [' metal', ' wood', ' glass', ' water', ' paper'] matches ['glass', 'plastic'] is True
2024-06-14 08:04:55 root INFO     [' plumbing', ' arm', ' interior', ' fabric', ' material'] matches ['glass', 'china', 'aluminium', 'wood', 'steel', 'plastic', 'clay'] is False
2024-06-14 08:04:55 root INFO     [' plumbing', ' interior', ' fabric', ' arm', ' material'] matches ['cardboard', 'tin', 'boxwood', 'turkish_boxwood'] is False
2024-06-14 08:04:55 root INFO     [' plumbing', ' fabric', ' arm', ' interior', ' wood'] matches ['flour', 'yeast', ''] is False
2024-06-14 08:04:55 root INFO     [' stone', ' metal', ' wood', ' rock', ' iron'] matches ['copper', 'tin', 'cu', 'atomic_number_29'] is False
2024-06-14 08:04:55 root INFO     [' stone', ' wood', ' ', ' paper', ' rock'] matches ['sugar', 'nougat', 'chocolate', 'gelatin', 'molasses', 'syrup', 'honey', 'fruit', 'nuts'] is False
2024-06-14 08:04:55 root INFO     [' wood', ' metal', ' paper', ' stone', ' iron'] matches ['cocoa', 'bean', 'cacao', 'cacao_bean', 'cocoa_bean'] is False
2024-06-14 08:04:55 root INFO     [' cloth', ' clothes', ' paper', ' fabric', ' metal'] matches ['fabric', 'leather', ''] is True
2024-06-14 08:04:55 root INFO     [' plumbing', ' interior', ' fabric', ' arm', ' wood'] matches ['vapor', 'water', 'vapour', 'water_vapour', 'water_vapor'] is False
2024-06-14 08:04:55 root INFO     [' water', ' ', ' wood', ' metal', ' iron'] matches ['alcohol', 'juice', 'water'] is True
2024-06-14 08:04:55 root INFO     [' stone', ' wood', ' rock', ' concrete', ' metal'] matches ['silicon', 'cement', 'water', 'sand', 'atomic_number_14', 'si'] is False
2024-06-14 08:04:55 root INFO     [' wood', ' paper', ' stone', ' cloth', ' '] matches ['wood', 'metal', 'steel'] is True
2024-06-14 08:04:55 root INFO     [' stone', ' rock', ' wood', ' metal', ' '] matches ['carbon'] is False
2024-06-14 08:04:55 root INFO     [' wood', ' stone', ' metal', ' ', ' iron'] matches ['metal', 'steel', 'bronze', 'wood'] is True
2024-06-14 08:04:55 root INFO     [' plumbing', ' interior', ' fabric', ' arm', ' material'] matches ['fabric', 'paper'] is True
2024-06-14 08:04:55 root INFO     [' stone', ' rock', ' metal', ' wood', ' '] matches ['ice', 'water', 'oxygen', 'hydrogen', 'h', 'h2o', 'atomic_number_8', 'atomic_number_1', 'o', 'water_ice'] is False
2024-06-14 08:04:55 root INFO     [' plumbing', ' fabric', ' interior', ' arm', ' wood'] matches ['silicone'] is False
2024-06-14 08:04:55 root INFO     [' wood', ' ', ' water', ' iron', ' paper'] matches ['bricks', 'cement', 'wood', 'clay'] is True
2024-06-14 08:04:55 root INFO     [' plumbing', ' interior', ' fabric', ' arm', ' material'] matches ['water', 'oxygen', 'hydrogen', 'water', 'h2o', 'atomic_number_1', 'atomic_number_8', 'h', 'o'] is False
2024-06-14 08:04:55 root INFO     [' metal', ' wood', ' stone', ' ', ' iron'] matches ['ice', 'water'] is False
2024-06-14 08:04:55 root INFO     [' plumbing', ' interior', ' fabric', ' arm', ' material'] matches ['fruit', 'sugar', 'berries'] is False
2024-06-14 08:04:55 root INFO     [' metal', ' cloth', ' iron', ' ', ' paper'] matches ['fabric', 'denim'] is False
2024-06-14 08:04:55 root INFO     [' grass', ' paper', ' stone', ' wood', ' cloth'] matches ['grass'] is True
2024-06-14 08:04:55 root INFO     [' paper', ' stone', ' metal', ' wood', ' glass'] matches ['glass', 'plastic'] is True
2024-06-14 08:04:55 root INFO     [' stone', ' metal', ' wood', ' paper', ' glass'] matches ['glass', 'bronze'] is True
2024-06-14 08:04:55 root INFO     [' plumbing', ' interior', ' fabric', ' arm', ' material'] matches ['paper', 'metal', 'silver', 'gold', 'iron', 'copper', 'tin'] is False
2024-06-14 08:04:55 root INFO     [' water', ' stone', ' rock', ' ', ' wood'] matches ['water'] is True
2024-06-14 08:04:55 root INFO     [' ', ' metal', ' iron', ' paper', ' wood'] matches ['eggs', 'egg', 'milk', 'cheese'] is False
2024-06-14 08:04:55 root INFO     [' wood', ' paper', ' cloth', ' ', ' metal'] matches ['flour', 'egg', 'butter', 'filling'] is False
2024-06-14 08:04:55 root INFO     [' wood', ' metal', ' iron', ' paper', ' stone'] matches ['metal', 'alloy', 'bronze', 'nickel', 'zinc', 'copper', 'tin'] is True
2024-06-14 08:04:55 root INFO     [' plumbing', ' fabric', ' arm', ' interior', ' wood'] matches ['medicine', 'drug'] is False
2024-06-14 08:04:55 root INFO     [' metal', ' stone', ' wood', ' paper', ' iron'] matches ['polymer', 'oil', 'gas', 'coal'] is False
2024-06-14 08:04:55 root INFO     [' wood', ' stone', ' water', ' metal', ' '] matches ['shingles', 'tiles', 'wood', 'metal'] is True
2024-06-14 08:04:55 root INFO     [' plumbing', ' interior', ' arm', ' fabric', ' material'] matches ['water'] is False
2024-06-14 08:04:55 root INFO     [' paper', ' stone', ' wood', ' snow', ' rock'] matches ['water', 'oxygen', 'hydrogen', 'flake', 'ice', 'snowflake', 'snowflakes', 'h2o', 'atomic_number_1', 'atomic_number_8', 'h', 'o'] is True
2024-06-14 08:04:55 root INFO     [' metal', ' wood', ' ', ' iron', ' paper'] matches ['aluminium', 'wood', 'steel'] is True
2024-06-14 08:04:55 root INFO     [' plumbing', ' fabric', ' arm', ' interior', ' wood'] matches ['iron', 'pearlite', 'carbon', 'cementite', 'ferrite', 'iron_carbide', 'fe', 'atomic_number_26', 'alpha_iron'] is False
2024-06-14 08:04:55 root INFO     [' plumbing', ' arm', ' fabric', ' interior', ' wood'] matches ['wood', 'metal', 'plastic'] is True
2024-06-14 08:04:55 root INFO     [' plumbing', ' interior', ' fabric', ' arm', ' material'] matches ['cement', 'bricks', 'stones', 'rocks', 'wood', 'cardboard', 'board', 'plank', 'clay', 'mud'] is False
2024-06-14 08:04:55 root INFO     [' plumbing', ' interior', ' arm', ' fabric', ' material'] matches ['oxygen', 'hydrogen', 'water', 'h2o', 'atomic_number_1', 'atomic_number_8', 'h', 'o'] is False
2024-06-14 08:04:55 root INFO     [' plumbing', ' fabric', ' arm', ' interior', ' material'] matches ['hair'] is False
2024-06-14 08:04:55 root INFO     [' plumbing', ' fabric', ' arm', ' interior', ' material'] matches ['grapes', 'grape'] is False
2024-06-14 08:04:55 root INFO     [' plumbing', ' fabric', ' arm', ' interior', ' wood'] matches ['metal'] is False
2024-06-14 08:04:55 root INFO     [' ', ' metal', ' wood', ' stone', ' cloth'] matches ['milk'] is False
2024-06-14 08:04:55 root INFO     meronyms - substance,50,546,809

2024-06-14 08:04:55 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='meronyms - member', prompt_templates=['A {} is a member of a', 'A {} is a part of a', 'A {} belongs to a'], prompt_templates_zs=['A {} is a member of a', 'A {} is a part of a', 'A {} belongs to a'], samples=[RelationSample(subject='acrobat', object=['troupe']), RelationSample(subject='antelope', object=['herd']), RelationSample(subject='bee', object=['swarm', 'hive', 'colony', 'drift', 'cast', 'nest', 'rabble', 'stand']), RelationSample(subject='bird', object=['flock']), RelationSample(subject='book', object=['library', 'shelf', 'collection', 'accounting', 'accounting_system', 'method_of_accounting']), RelationSample(subject='calf', object=['cattle', 'herd']), RelationSample(subject='car', object=['train', 'procession']), RelationSample(subject='cat', object=['clowder', 'glaring', 'clutter', 'pounce']), RelationSample(subject='cattle', object=['herd']), RelationSample(subject='christian', object=['congregation', 'church', 'parish']), RelationSample(subject='citizen', object=['citizenry', 'country', 'state']), RelationSample(subject='college', object=['university']), RelationSample(subject='county', object=['state', 'country']), RelationSample(subject='cow', object=['herd']), RelationSample(subject='crow', object=['murder']), RelationSample(subject='division', object=['company', 'business', 'platoon', 'battle_group']), RelationSample(subject='elephant', object=['herd']), RelationSample(subject='employee', object=['staff', 'company']), RelationSample(subject='fish', object=['school']), RelationSample(subject='flower', object=['bouquet', 'bunch']), RelationSample(subject='galaxy', object=['universe']), RelationSample(subject='goose', object=['gaggle']), RelationSample(subject='juror', object=['jury']), RelationSample(subject='kitten', object=['litter']), RelationSample(subject='letter', object=['alphabet']), RelationSample(subject='lion', object=['pride']), RelationSample(subject='listener', object=['audience']), RelationSample(subject='member', object=['club', 'team', 'group', 'band', 'community']), RelationSample(subject='musician', object=['orchestra', 'band']), RelationSample(subject='nomad', object=['horde']), RelationSample(subject='page', object=['book', 'notebook', 'website', 'web-site']), RelationSample(subject='parishioner', object=['parish', 'church']), RelationSample(subject='person', object=['society', 'company', 'party', 'world']), RelationSample(subject='photo', object=['album', 'collection', 'library']), RelationSample(subject='player', object=['team', 'group', 'orchestra']), RelationSample(subject='policeman', object=['police']), RelationSample(subject='secretary', object=['staff']), RelationSample(subject='senator', object=['senate', 'house']), RelationSample(subject='sheep', object=['flock']), RelationSample(subject='shrub', object=['shrubbery']), RelationSample(subject='singer', object=['choir', 'band', 'duo', 'trio', 'quartet']), RelationSample(subject='soldier', object=['army', 'unit', 'division', 'troop']), RelationSample(subject='song', object=['album', 'collection', 'antology', 'library']), RelationSample(subject='spouse', object=['couple', 'relationship', 'family']), RelationSample(subject='star', object=['constellation', 'galaxy']), RelationSample(subject='state', object=['country', 'province']), RelationSample(subject='student', object=['class', 'school']), RelationSample(subject='tree', object=['forest', 'wood', 'grove']), RelationSample(subject='wolf', object=['pack']), RelationSample(subject='word', object=['paragraph', 'sentence', 'text'])], _domain=None, _range=None)
2024-06-14 08:04:57 root INFO     starting operator prediction
2024-06-14 08:04:57 root INFO     using no context
2024-06-14 08:04:57 root INFO     [order_1_approx] starting weight calculation
2024-06-14 08:08:58 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 08:08:58 root INFO     [order_1_approx] weight calculation finished
2024-06-14 08:08:59 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-14 08:08:59 root INFO     [order_1_approx] starting weight calculation
2024-06-14 08:12:58 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 08:12:58 root INFO     [order_1_approx] weight calculation finished
2024-06-14 08:12:59 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-14 08:12:59 root INFO     [order_1_approx] starting weight calculation
2024-06-14 08:16:56 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 08:16:56 root INFO     [order_1_approx] weight calculation finished
2024-06-14 08:16:56 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-14 08:16:57 root INFO     [order_1_approx] starting weight calculation
2024-06-14 08:20:54 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 08:20:54 root INFO     [order_1_approx] weight calculation finished
2024-06-14 08:20:55 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-14 08:20:55 root INFO     [order_1_approx] starting weight calculation
2024-06-14 08:24:54 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 08:24:54 root INFO     [order_1_approx] weight calculation finished
2024-06-14 08:24:54 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-14 08:24:55 root INFO     [order_1_approx] starting weight calculation
2024-06-14 08:28:54 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 08:28:54 root INFO     [order_1_approx] weight calculation finished
2024-06-14 08:28:54 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-14 08:28:55 root INFO     [order_1_approx] starting weight calculation
2024-06-14 08:32:52 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 08:32:52 root INFO     [order_1_approx] weight calculation finished
2024-06-14 08:32:52 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-14 08:32:53 root INFO     [order_1_approx] starting weight calculation
2024-06-14 08:36:50 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 08:36:50 root INFO     [order_1_approx] weight calculation finished
2024-06-14 08:36:51 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-14 08:36:51 root INFO     total operator prediction time: 1913.9125773906708 seconds
2024-06-14 08:36:53 root INFO     [' mob', ' ', ' parliament', ' murder', ' band'] matches ['troupe'] is False
2024-06-14 08:36:53 root INFO     [' ', ' murder', ' band', ' g', ' mob'] matches ['herd'] is False
2024-06-14 08:36:53 root INFO     ['Or', 'H', 'Eastern', 'Buff', 'ED'] matches ['swarm', 'hive', 'colony', 'drift', 'cast', 'nest', 'rabble', 'stand'] is False
2024-06-14 08:36:53 root INFO     ['Or', 'H', 'Eastern', 'ED', 'SPA'] matches ['flock'] is False
2024-06-14 08:36:53 root INFO     ['Or', 'H', 'Eastern', 'SPA', 'ED'] matches ['library', 'shelf', 'collection', 'accounting', 'accounting_system', 'method_of_accounting'] is False
2024-06-14 08:36:53 root INFO     [' ', ' band', ' g', ' army', ' murder'] matches ['cattle', 'herd'] is False
2024-06-14 08:36:53 root INFO     [' herd', ' ', ' band', ' flock', ' g'] matches ['herd'] is True
2024-06-14 08:36:53 root INFO     [' church', ' ', ' congregation', ' g', ' mob'] matches ['congregation', 'church', 'parish'] is True
2024-06-14 08:36:53 root INFO     [' parliament', ' assembly', ' crowd', ' society', ' '] matches ['citizenry', 'country', 'state'] is False
2024-06-14 08:36:53 root INFO     ['Or', 'Eastern', 'H', 'ED', 'Buff'] matches ['university'] is False
2024-06-14 08:36:53 root INFO     [' ', ' assembly', ' army', ' jury', ' murder'] matches ['state', 'country'] is False
2024-06-14 08:36:53 root INFO     ['Or', 'H', 'Eastern', 'Buff', 'Pros'] matches ['herd'] is False
2024-06-14 08:36:53 root INFO     ['Or', 'Eastern', 'H', 'ED', 'Pros'] matches ['company', 'business', 'platoon', 'battle_group'] is False
2024-06-14 08:36:53 root INFO     [' army', ' ', ' mob', ' parliament', ' murder'] matches ['herd'] is False
2024-06-14 08:36:53 root INFO     [' assembly', ' army', ' ', ' society', ' crowd'] matches ['staff', 'company'] is False
2024-06-14 08:36:53 root INFO     ['Or', 'H', 'Eastern', 'ED', 'Pros'] matches ['school'] is False
2024-06-14 08:36:53 root INFO     ['Or', 'H', 'Eastern', 'ED', 'Buff'] matches ['bouquet', 'bunch'] is False
2024-06-14 08:36:53 root INFO     [' mob', ' army', ' ', ' g', ' assembly'] matches ['universe'] is False
2024-06-14 08:36:53 root INFO     [' jury', ' assembly', ' parliament', ' ', ' mob'] matches ['jury'] is True
2024-06-14 08:36:53 root INFO     [' ', ' murder', ' g', ' band', ' c'] matches ['litter'] is False
2024-06-14 08:36:53 root INFO     [' army', ' mob', ' murder', ' parliament', ' '] matches ['pride'] is False
2024-06-14 08:36:53 root INFO     ['Or', 'Eastern', 'H', 'ED', 'Buff'] matches ['club', 'team', 'group', 'band', 'community'] is False
2024-06-14 08:36:53 root INFO     [' band', ' mob', ' assembly', ' ', ' society'] matches ['orchestra', 'band'] is True
2024-06-14 08:36:53 root INFO     [' army', ' mob', ' ', ' parliament', ' murder'] matches ['horde'] is False
2024-06-14 08:36:53 root INFO     ['Or', 'H', 'Eastern', 'SPA', 'ED'] matches ['book', 'notebook', 'website', 'web-site'] is False
2024-06-14 08:36:53 root INFO     [' ', ' assembly', ' g', ' mob', ' parliament'] matches ['parish', 'church'] is False
2024-06-14 08:36:53 root INFO     ['Or', 'H', 'Eastern', 'ED', 'Pros'] matches ['society', 'company', 'party', 'world'] is False
2024-06-14 08:36:53 root INFO     ['Or', 'Eastern', 'H', 'ED', 'SPA'] matches ['album', 'collection', 'library'] is False
2024-06-14 08:36:53 root INFO     ['Or', 'Eastern', 'H', 'ED', 'Pros'] matches ['team', 'group', 'orchestra'] is True
2024-06-14 08:36:53 root INFO     [' ', ' mob', ' police', ' army', ' g'] matches ['police'] is True
2024-06-14 08:36:53 root INFO     [' parliament', ' assembly', ' ', ' c', ' society'] matches ['staff'] is False
2024-06-14 08:36:53 root INFO     [' parliament', ' assembly', ' ', ' legislature', ' jury'] matches ['senate', 'house'] is False
2024-06-14 08:36:53 root INFO     [' flock', ' army', ' mob', ' murder', ' band'] matches ['flock'] is True
2024-06-14 08:36:53 root INFO     [' choir', ' assembly', ' band', ' ', ' flock'] matches ['choir', 'band', 'duo', 'trio', 'quartet'] is True
2024-06-14 08:36:53 root INFO     [' army', ' militia', ' assembly', ' band', ' mob'] matches ['army', 'unit', 'division', 'troop'] is True
2024-06-14 08:36:53 root INFO     [' ', ' society', ' assembly', ' family', ' congregation'] matches ['couple', 'relationship', 'family'] is True
2024-06-14 08:36:53 root INFO     ['Or', 'Eastern', 'H', 'ED', 'SPA'] matches ['constellation', 'galaxy'] is False
2024-06-14 08:36:53 root INFO     ['Or', 'Eastern', 'H', 'ED', 'SPA'] matches ['country', 'province'] is False
2024-06-14 08:36:53 root INFO     ['Or', 'Eastern', 'H', 'ED', 'Pros'] matches ['class', 'school'] is False
2024-06-14 08:36:53 root INFO     ['Or', 'H', 'Eastern', 'ED', 'Pros'] matches ['forest', 'wood', 'grove'] is False
2024-06-14 08:36:53 root INFO     ['Or', 'H', 'Eastern', 'SPA', 'ED'] matches ['pack'] is False
2024-06-14 08:36:53 root INFO     ['Or', 'Eastern', 'H', 'Pros', 'ED'] matches ['paragraph', 'sentence', 'text'] is False
2024-06-14 08:36:53 root INFO     meronyms - member,50,556,841

2024-06-14 08:36:53 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='UK_city - county', prompt_templates=['In the United Kingdom, the city of {} is in the county of', 'In the UK, the city of {} resides in the county of', 'The city of {} in the UK belongs to the county of'], prompt_templates_zs=['In the United Kingdom, the city of {} is in the county of', 'In the UK, the city of {} resides in the county of', 'The city of {} in the UK belongs to the county of'], samples=[RelationSample(subject='aberdeen', object=['aberdeenshire']), RelationSample(subject='bath', object=['somerset']), RelationSample(subject='belfast', object=['antrim']), RelationSample(subject='birmingham', object=['midlands']), RelationSample(subject='bradford', object=['yorkshire']), RelationSample(subject='brighton', object=['sussex']), RelationSample(subject='cambridge', object=['cambridgeshire']), RelationSample(subject='canterbury', object=['kent']), RelationSample(subject='cardiff', object=['glamorgan']), RelationSample(subject='carlisle', object=['cumbria']), RelationSample(subject='chester', object=['cheshire']), RelationSample(subject='chichester', object=['sussex']), RelationSample(subject='coventry', object=['midlands']), RelationSample(subject='crawley', object=['sussex']), RelationSample(subject='derby', object=['derbyshire']), RelationSample(subject='dundee', object=['lowlands']), RelationSample(subject='edinburgh', object=['lowlands']), RelationSample(subject='ely', object=['cambridgeshire']), RelationSample(subject='exeter', object=['devon']), RelationSample(subject='glasgow', object=['lowlands']), RelationSample(subject='gloucester', object=['gloucestershire']), RelationSample(subject='hereford', object=['herefordshire']), RelationSample(subject='hull', object=['yorkshire']), RelationSample(subject='inverness', object=['highlands']), RelationSample(subject='lancaster', object=['lancashire']), RelationSample(subject='leeds', object=['yorkshire']), RelationSample(subject='leicester', object=['midlands']), RelationSample(subject='lincoln', object=['lincolnshire']), RelationSample(subject='liverpool', object=['lancashire']), RelationSample(subject='newcastle', object=['northumberland']), RelationSample(subject='newport', object=['gwent']), RelationSample(subject='norwich', object=['norfolk']), RelationSample(subject='nottingham', object=['nottinghamshire']), RelationSample(subject='oxford', object=['oxfordshire']), RelationSample(subject='plymouth', object=['devon']), RelationSample(subject='portsmouth', object=['hampshire']), RelationSample(subject='preston', object=['lancashire']), RelationSample(subject='reading', object=['berkshire']), RelationSample(subject='salford', object=['manchester']), RelationSample(subject='salisbury', object=['wiltshire']), RelationSample(subject='sheffield', object=['yorkshire']), RelationSample(subject='southampton', object=['hampshire']), RelationSample(subject='stirling', object=['stirlingshire']), RelationSample(subject='swansea', object=['glamorgan']), RelationSample(subject='wakefield', object=['yorkshire']), RelationSample(subject='wells', object=['somerset']), RelationSample(subject='winchester', object=['hampshire']), RelationSample(subject='wolverhampton', object=['midlands']), RelationSample(subject='worcester', object=['worcestershire']), RelationSample(subject='york', object=['yorkshire'])], _domain=None, _range=None)
2024-06-14 08:36:56 root INFO     starting operator prediction
2024-06-14 08:36:56 root INFO     using no context
2024-06-14 08:36:56 root INFO     [order_1_approx] starting weight calculation
2024-06-14 08:40:54 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 08:40:54 root INFO     [order_1_approx] weight calculation finished
2024-06-14 08:40:55 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-14 08:40:55 root INFO     [order_1_approx] starting weight calculation
2024-06-14 08:44:52 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 08:44:52 root INFO     [order_1_approx] weight calculation finished
2024-06-14 08:44:53 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-14 08:44:53 root INFO     [order_1_approx] starting weight calculation
2024-06-14 08:48:52 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 08:48:52 root INFO     [order_1_approx] weight calculation finished
2024-06-14 08:48:52 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-14 08:48:53 root INFO     [order_1_approx] starting weight calculation
2024-06-14 08:52:50 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 08:52:50 root INFO     [order_1_approx] weight calculation finished
2024-06-14 08:52:51 lre.operators INFO     [Jacobian] FINISHED order_1_approx 4/8
2024-06-14 08:52:51 root INFO     [order_1_approx] starting weight calculation
2024-06-14 08:56:50 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 08:56:50 root INFO     [order_1_approx] weight calculation finished
2024-06-14 08:56:50 lre.operators INFO     [Jacobian] FINISHED order_1_approx 5/8
2024-06-14 08:56:51 root INFO     [order_1_approx] starting weight calculation
2024-06-14 09:00:48 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 09:00:48 root INFO     [order_1_approx] weight calculation finished
2024-06-14 09:00:50 lre.operators INFO     [Jacobian] FINISHED order_1_approx 6/8
2024-06-14 09:00:50 root INFO     [order_1_approx] starting weight calculation
2024-06-14 09:04:50 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 09:04:50 root INFO     [order_1_approx] weight calculation finished
2024-06-14 09:04:51 lre.operators INFO     [Jacobian] FINISHED order_1_approx 7/8
2024-06-14 09:04:51 root INFO     [order_1_approx] starting weight calculation
2024-06-14 09:08:51 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 09:08:51 root INFO     [order_1_approx] weight calculation finished
2024-06-14 09:08:52 lre.operators INFO     [Jacobian] FINISHED order_1_approx 8/8
2024-06-14 09:08:52 root INFO     total operator prediction time: 1915.6808197498322 seconds
2024-06-14 09:08:54 root INFO     [' north', ' l', ' sc', ' northern', ' d'] matches ['aberdeenshire'] is False
2024-06-14 09:08:54 root INFO     ['ix', 'ere', 'stores', 'orn', 'oris'] matches ['somerset'] is False
2024-06-14 09:08:54 root INFO     [' w', ' west', ' north', ' wel', ' l'] matches ['antrim'] is False
2024-06-14 09:08:54 root INFO     [' war', ' mid', ' west', ' l', ' bir'] matches ['midlands'] is True
2024-06-14 09:08:54 root INFO     [' cam', ' sus', ' l', ' west', ' c'] matches ['cambridgeshire'] is True
2024-06-14 09:08:54 root INFO     ['ix', 'ere', 'stores', 'orn', 'storage'] matches ['cheshire'] is False
2024-06-14 09:08:54 root INFO     [' l', ' not', ' der', ' north', ' le'] matches ['derbyshire'] is True
2024-06-14 09:08:54 root INFO     [' l', ' sus', ' y', ' north', ' east'] matches ['cambridgeshire'] is False
2024-06-14 09:08:54 root INFO     [' dev', ' west', ' w', ' north', ' c'] matches ['devon'] is True
2024-06-14 09:08:54 root INFO     [' sus', ' sh', ' west', ' north', ' l'] matches ['gloucestershire'] is False
2024-06-14 09:08:54 root INFO     [' west', ' w', ' sh', ' sus', ' war'] matches ['herefordshire'] is False
2024-06-14 09:08:54 root INFO     [' north', ' c', ' sc', ' west', ' high'] matches ['highlands'] is True
2024-06-14 09:08:54 root INFO     [' le', ' not', ' north', ' west', ' sh'] matches ['midlands'] is False
2024-06-14 09:08:54 root INFO     [' north', ' y', ' ty', ' northern', ' new'] matches ['northumberland'] is True
2024-06-14 09:08:54 root INFO     [' nor', ' north', ' east', ' l', ' y'] matches ['norfolk'] is True
2024-06-14 09:08:54 root INFO     [' not', ' l', ' east', ' mid', ' north'] matches ['nottinghamshire'] is True
2024-06-14 09:08:54 root INFO     [' ox', ' sus', ' l', ' west', ' y'] matches ['oxfordshire'] is True
2024-06-14 09:08:54 root INFO     [' dev', ' west', ' w', ' sus', ' y'] matches ['devon'] is True
2024-06-14 09:08:54 root INFO     ['ix', 'ere', 'stores', 'orn', 'storage'] matches ['berkshire'] is False
2024-06-14 09:08:54 root INFO     [' l', ' north', ' y', ' west', ' sus'] matches ['manchester'] is False
2024-06-14 09:08:54 root INFO     [' sh', ' sus', ' north', ' wil', ' west'] matches ['wiltshire'] is True
2024-06-14 09:08:54 root INFO     [' west', ' w', ' war', ' wor', ' sh'] matches ['worcestershire'] is True
2024-06-14 09:08:54 root INFO     UK_city - county,50,568,851

2024-06-14 09:08:55 __main__ INFO     starting test: <class 'lre.operators.JacobianIclMeanEstimator'> on Relation(name='animal - sound', prompt_templates=['The sound that a {} makes is called a', 'The sound produced by a {} is known as', 'The {} makes a sound called a'], prompt_templates_zs=['The sound that a {} makes is called a', 'The sound produced by a {} is known as', 'The {} makes a sound called a'], samples=[RelationSample(subject='alpaca', object=['bray']), RelationSample(subject='bear', object=['growl']), RelationSample(subject='bee', object=['buzz', 'hum']), RelationSample(subject='beetle', object=['drone']), RelationSample(subject='cat', object=['meow', 'meu', 'purr', 'caterwaul']), RelationSample(subject='cattle', object=['moo', 'bellow', 'low']), RelationSample(subject='chicken', object=['cluck', 'crow', 'cock-a-doodle-doo']), RelationSample(subject='chimpanzee', object=['scream']), RelationSample(subject='cicada', object=['buzz']), RelationSample(subject='coyote', object=['howl']), RelationSample(subject='cricket', object=['chirp']), RelationSample(subject='crow', object=['caw']), RelationSample(subject='deer', object=['bellow']), RelationSample(subject='dog', object=['bark', 'growl', 'howl', 'yelp', 'whine', 'arf', 'bow_wow', 'woof']), RelationSample(subject='donkey', object=['bray', 'hee-haw']), RelationSample(subject='duck', object=['quack']), RelationSample(subject='elephant', object=['trumpet']), RelationSample(subject='elk', object=['bellow']), RelationSample(subject='ferret', object=['dook']), RelationSample(subject='fly', object=['buzz']), RelationSample(subject='fox', object=['howl', 'yelp']), RelationSample(subject='frog', object=['ribbit', 'croak']), RelationSample(subject='goat', object=['bleat']), RelationSample(subject='gorilla', object=['grunt', 'scream']), RelationSample(subject='hornet', object=['buzz']), RelationSample(subject='horse', object=['neigh', 'snort', 'whinny']), RelationSample(subject='hound', object=['bark', 'howl', 'bay']), RelationSample(subject='hyena', object=['laugh']), RelationSample(subject='leopard', object=['growl']), RelationSample(subject='lion', object=['roar', 'growl']), RelationSample(subject='magpie', object=['chatter']), RelationSample(subject='mallard', object=['quack']), RelationSample(subject='monkey', object=['chatter', 'gibber', 'howl', 'scream']), RelationSample(subject='moose', object=['bellow']), RelationSample(subject='mouse', object=['squeak']), RelationSample(subject='mule', object=['bray', 'hee-haw']), RelationSample(subject='pig', object=['oink', 'grunt', 'gruff', 'squeal']), RelationSample(subject='pigeon', object=['coo']), RelationSample(subject='rat', object=['squeak']), RelationSample(subject='raven', object=['caw']), RelationSample(subject='seal', object=['bark']), RelationSample(subject='sheep', object=['baa', 'bleat']), RelationSample(subject='snake', object=['hiss']), RelationSample(subject='songbird', object=['chirrup', 'chirp', 'tweet', 'sing', 'warble', 'twitter']), RelationSample(subject='tiger', object=['growl', 'roar']), RelationSample(subject='toad', object=['ribbit', 'croak']), RelationSample(subject='turkey', object=['gobble']), RelationSample(subject='wasp', object=['buzz']), RelationSample(subject='whale', object=['sing']), RelationSample(subject='wolf', object=['howl'])], _domain=None, _range=None)
2024-06-14 09:08:57 root INFO     starting operator prediction
2024-06-14 09:08:57 root INFO     using no context
2024-06-14 09:08:57 root INFO     [order_1_approx] starting weight calculation
2024-06-14 09:12:57 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 09:12:57 root INFO     [order_1_approx] weight calculation finished
2024-06-14 09:12:58 lre.operators INFO     [Jacobian] FINISHED order_1_approx 1/8
2024-06-14 09:12:58 root INFO     [order_1_approx] starting weight calculation
2024-06-14 09:16:54 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 09:16:54 root INFO     [order_1_approx] weight calculation finished
2024-06-14 09:16:54 lre.operators INFO     [Jacobian] FINISHED order_1_approx 2/8
2024-06-14 09:16:54 root INFO     [order_1_approx] starting weight calculation
2024-06-14 09:20:42 root INFO     weight size is torch.Size([4096, 4096])
2024-06-14 09:20:42 root INFO     [order_1_approx] weight calculation finished
2024-06-14 09:20:43 lre.operators INFO     [Jacobian] FINISHED order_1_approx 3/8
2024-06-14 09:20:43 root INFO     [order_1_approx] starting weight calculation
